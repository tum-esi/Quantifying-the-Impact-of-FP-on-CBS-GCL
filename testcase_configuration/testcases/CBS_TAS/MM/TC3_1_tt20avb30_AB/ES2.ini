[General]
network = testcases.CBS_TAS.MM.TC3_1_tt20avb30_AB.mm

# *.ES2.eth[*].address = "0A-00-00-00-00-02"

*.ES2.numApps = 3
*.ES2.app[*].typename = "UdpSourceApp"

# NO SINK APPLICATIONS

# SOURCE APPLICATIONS
# vl1 : ES2,SW1 ; SW1,SW3 ; SW3,SW4 ; SW4,ES10 ;
# Flow101, 1160, 1000, vl1, TT, 1000, 0.0
*.ES2.app[0].display-name = "Flow101"
*.ES2.app[0].io.destAddress = "ES10"
*.ES2.app[0].io.destPort = 1000
*.ES2.app[0].source.packetNameFormat = "%M->ES10:TT-%c"
*.ES2.app[0].source.packetLength = 1160B - 58B
*.ES2.app[0].source.productionInterval = 1000us# + exponential(1us)
# *.ES2.app[0].tagger.vlanId = 1

# Flow1, 142, 2000, vl1, CLASS_A, 2000, 0.0
*.ES2.app[1].display-name = "Flow1"
*.ES2.app[1].io.destAddress = "ES10"
*.ES2.app[1].io.destPort = 1001
*.ES2.app[1].source.packetNameFormat = "%M->ES10:AVB_A-%c"
*.ES2.app[1].source.packetLength = 142B - 58B
*.ES2.app[1].source.productionInterval = 2000us# + exponential(1us)

# Flow16, 142, 2000, vl1, CLASS_B, 2000, 0.0
*.ES2.app[2].display-name = "Flow16"
*.ES2.app[2].io.destAddress = "ES10"
*.ES2.app[2].io.destPort = 1002
*.ES2.app[2].source.packetNameFormat = "%M->ES10:AVB_B-%c"
*.ES2.app[2].source.packetLength = 142B - 58B
*.ES2.app[2].source.productionInterval = 2000us# + exponential(1us)

*.ES2.app[0].source.initialProductionOffset = 109us 			    # offset according to historySCHED1.txt 
*.ES2.app[1].source.initialProductionOffset = uniform(0s,0.01s)  	    # randomized AVB initial offset
*.ES2.app[2].source.initialProductionOffset = uniform(0s,0.01s)  	    # randomized AVB initial offset


## configure all egress traffic as part of stream Flow1, start sequence numbering # CHECKED
*.ES2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES10:*" && udp.destPort == 1000), stream: "Flow101", sequenceNumbering: true},
													{packetFilter: expr(has(udp) && name =~ "*->ES10:*" && udp.destPort == 1001), stream: "Flow1", sequenceNumbering: true},
													{packetFilter: expr(has(udp) && name =~ "*->ES10:*" && udp.destPort == 1002), stream: "Flow16", sequenceNumbering: true}]

# encode egress Flows to VLAN # CHECKED
*.ES2.bridging.streamCoder.encoder.mapping = [{stream: "Flow101", pcp: 6, vlan: 101},
											{stream: "Flow1", pcp: 4, vlan: 1},
											{stream: "Flow16", pcp: 0, vlan: 16}]

# ALL CHECKED