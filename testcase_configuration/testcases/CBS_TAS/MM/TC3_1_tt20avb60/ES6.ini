[General]
network = testcases.CBS_TAS.MM.TC3_1_tt20avb60.mm

# **.ES6.eth[*].address = "0A-00-00-00-00-06"

*.ES6.numApps = 6
*.ES6.app[*].typename = "UdpSourceApp"


# NO SINK APPLICATIONS

# SOURCE APPLICATIONS
# vl5 : ES6,SW2 ; SW2,SW3 ; SW3,SW4 ; SW4,ES12 ;
# Flow105, 950, 2000, vl5, TT, 2000, 0.0
*.ES6.app[0].display-name = "Flow105"
*.ES6.app[0].io.destAddress = "ES12"
*.ES6.app[0].io.destPort = 1000
*.ES6.app[0].source.packetNameFormat = "%M->ES12:TT-%c"
*.ES6.app[0].source.packetLength = 950B # 950B - 58B
*.ES6.app[0].source.productionInterval = 2000us# + exponential(1us)

# *.ES6.app[0].tagger.vlanId = 5

# Flow5, 253, 2000, vl5, CLASS_A, 2000, 0.0
*.ES6.app[1].display-name = "Flow5"
*.ES6.app[1].io.destAddress = "ES12"
*.ES6.app[1].io.destPort = 1001
*.ES6.app[1].source.packetNameFormat = "%M->ES12:AVB_A-%c"
*.ES6.app[1].source.packetLength = 206B - 58B
*.ES6.app[1].source.productionInterval = 5000us# + exponential(1us)

# Flow20, 253, 2000, vl5, CLASS_A, 2000, 0.0
*.ES6.app[2].display-name = "Flow20"
*.ES6.app[2].io.destAddress = "ES12"
*.ES6.app[2].io.destPort = 1002
*.ES6.app[2].source.packetNameFormat = "%M->ES12:AVB_A-%c"
*.ES6.app[2].source.packetLength = 206B - 58B
*.ES6.app[2].source.productionInterval = 5000us# + exponential(1us)

*.ES6.app[0].source.initialProductionOffset = 120us					# offset according to historySCHED1.txt 
*.ES6.app[1].source.initialProductionOffset = uniform(0s,0.01s) 		# randomized AVB initial offset
*.ES6.app[2].source.initialProductionOffset = uniform(0s,0.01s)		# randomized AVB initial offset


# vl8 : ES6,SW2 ; SW2,SW3 ; SW3,SW4 ; SW4,ES12 ;
# Flow108, 503, 10000, vl8, TT, 10000, 0.0
*.ES6.app[3].display-name = "Flow108"
*.ES6.app[3].io.destAddress = "ES12"
*.ES6.app[3].io.destPort = 1006
*.ES6.app[3].source.packetNameFormat = "%M->ES12:TT-%c"
*.ES6.app[3].source.packetLength = 503B # 503B - 58B
*.ES6.app[3].source.productionInterval = 10000us# + exponential(1us)

# Flow8, 81, 10000, vl8, CLASS_A, 10000, 0.0
*.ES6.app[4].display-name = "Flow8"
*.ES6.app[4].io.destAddress = "ES12"
*.ES6.app[4].io.destPort = 1007
*.ES6.app[4].source.packetNameFormat = "%M->ES12:AVB_A-%c"
*.ES6.app[4].source.packetLength = 1461B - 58B
*.ES6.app[4].source.productionInterval = 10000us# + exponential(1us)

# Flow23, 81, 10000, vl8, CLASS_A, 10000, 0.0
*.ES6.app[5].display-name = "Flow23"
*.ES6.app[5].io.destAddress = "ES12"
*.ES6.app[5].io.destPort = 1008
*.ES6.app[5].source.packetNameFormat = "%M->ES12:AVB_A-%c"
*.ES6.app[5].source.packetLength = 1461B - 58B
*.ES6.app[5].source.productionInterval = 10000us# + exponential(1us)

*.ES6.app[3].source.initialProductionOffset = 976us					# offset according to historySCHED1.txt 
*.ES6.app[4].source.initialProductionOffset = uniform(0s,0.01s)		# randomized AVB initial offset
*.ES6.app[5].source.initialProductionOffset = uniform(0s,0.01s)		# randomized AVB initial offset


## configure all egress traffic as part of stream Flow1, start sequence numbering
*.ES6.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES12:*" && udp.destPort == 1000), stream: "Flow105", sequenceNumbering: true},
													  {packetFilter: expr(has(udp) && name =~ "*->ES12:*" && udp.destPort == 1001), stream: "Flow5", sequenceNumbering: true},
													  {packetFilter: expr(has(udp) && name =~ "*->ES12:*" && udp.destPort == 1002), stream: "Flow20", sequenceNumbering: true},
													  {packetFilter: expr(has(udp) && name =~ "*->ES12:*" && udp.destPort == 1006), stream: "Flow108", sequenceNumbering: true},
													  {packetFilter: expr(has(udp) && name =~ "*->ES12:*" && udp.destPort == 1007), stream: "Flow8", sequenceNumbering: true},
													  {packetFilter: expr(has(udp) && name =~ "*->ES12:*" && udp.destPort == 1008), stream: "Flow23", sequenceNumbering: true}]

# encode egress Flows to VLAN 
*.ES6.bridging.streamCoder.encoder.mapping = [{stream: "Flow105", pcp: 4, vlan: 105},
											  {stream: "Flow5", pcp: 0, vlan: 5},
											  {stream: "Flow20", pcp: 0, vlan: 20},
											  {stream: "Flow108", pcp: 4, vlan: 108},
											  {stream: "Flow8", pcp: 0, vlan: 8},
											  {stream: "Flow23", pcp: 0, vlan: 23}]
