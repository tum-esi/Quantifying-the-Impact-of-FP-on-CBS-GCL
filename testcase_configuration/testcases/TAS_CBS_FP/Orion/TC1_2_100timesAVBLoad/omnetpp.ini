
[General]
network = testcases.TAS_CBS_FP.Orion.TC1_2_100timesAVBLoad.orion

#abstract-config = true (requires omnet 6)
description = ""

# Set the simulation time
sim-time-limit = 1s
repeat = 10

# disable automatic MAC forwarding table configuration
*.macForwardingTableConfigurator.typename = ""

# disable local multicast loop
**.udp.defaultMulticastLoop = false

*.*.eth[*].bitrate = 1Gbps

*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"

##########################
# Visualizer Configuration
# enable multiple canvas visualizers
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"

#################################

*.ES*.app[*].tagger.typename = "PacketTagger" # enable VLAN Tagging

#################################################
# Frame Preemption Configuration
*.*.eth[*].macLayer.typename = "EthernetPreemptingMacLayer"
*.*.eth[*].phyLayer.typename = "EthernetPreemptingPhyLayer"
*.*.eth[*].macLayer.preemptingServer.preemptionMode = "withHoldRelease" #"withHoldRelease" #"withoutHoldRelease"

#############################
# Stream Coding Configuration
*.*.hasOutgoingStreams = true
*.*.hasIncomingStreams = true

###############################
# Traffic Shaping Configuration
*.*.hasEgressTrafficShaping = true

## disable forwarding IEEE 802.1Q C-Tag
#*.SW*.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

# TAS Configuration
*.*.eth[*].macLayer.preemptableMacLayer.queue.transmissionGate[0].enableImplicitGuardBand = true 	# activate implicit guard band for AVB Traffic
*.*.eth[*].macLayer.preemptableMacLayer.queue.transmissionGate[0].gbMode = "worstCase" # "worstCase" "bestCase"
*.*.eth[*].macLayer.expressMacLayer.queue.transmissionGate[0].enableImplicitGuardBand = false 	# activate implicit guard band for Scheduled Traffic
*.*.eth[*].macLayer.expressMacLayer.queue.transmissionGate[0].gbMode = "bestCase" # "worstCase" "bestCase"

*.*.eth[*].macLayer.expressMacLayer.queue.numTrafficClasses = 1 # TT traffic class(-es) in eMAC
*.*.eth[*].macLayer.preemptableMacLayer.queue.numTrafficClasses = 1 # AVB traffic class(-es) in pMAC

# queue naming
*.*.eth[*].macLayer.expressMacLayer.queue[0].display-name = "TT"
*.*.eth[*].macLayer.preemptableMacLayer.queue[0].display-name = "AVB_A"

*.SW52.macTable.forwardingTable = [{address: "ES_STARTR2", vlan: 1, interface: "eth1"}, 
								{address: "ES_LCM1", vlan: 11, interface: "eth2"}, 
								{address: "ES_CM1CA", vlan: 27, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 33, interface: "eth0"}, 
								{address: "ES_SM2CA", vlan: 34, interface: "eth0"}, 
								{address: "ES_STARTR1", vlan: 38, interface: "eth1"}, 
								{address: "ES_SMRIU2", vlan: 41, interface: "eth1"}, 
								{address: "ES_SM2CA", vlan: 42, interface: "eth0"}, 
								{address: "ES_SM2CB", vlan: 43, interface: "eth3"}, 
								{address: "ES_MIMU2", vlan: 44, interface: "eth1"}, 
								{address: "ES_SM1CA", vlan: 46, interface: "eth2"}, 
								{address: "ES_CM2CA", vlan: 52, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 55, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 58, interface: "eth3"}, 
								{address: "ES_SM2CB", vlan: 59, interface: "eth3"}, 
								{address: "ES_STARTR2", vlan: 63, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 67, interface: "eth3"}, 
								{address: "ES_CM2CB", vlan: 68, interface: "eth1"}, 
								{address: "ES_SM2CA", vlan: 71, interface: "eth0"}, 
								{address: "ES_SM2CB", vlan: 74, interface: "eth3"}, 
								{address: "ES_SM2CA", vlan: 80, interface: "eth0"}, 
								{address: "ES_SM2CA", vlan: 84, interface: "eth0"}, 
								{address: "ES_SM2CA", vlan: 91, interface: "eth0"}, 
								{address: "ES_GPS2", vlan: 94, interface: "eth1"}, 
								{address: "ES_LCM1", vlan: 105, interface: "eth2"}, 
								{address: "ES_LCM2", vlan: 110, interface: "eth1"}]

*.SW42.macTable.forwardingTable = [{address: "ES_STARTR2", vlan: 1, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 2, interface: "eth1"}, 
								{address: "ES_CM2CB", vlan: 3, interface: "eth3"}, 
								{address: "ES_DU2", vlan: 25, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 38, interface: "eth1"}, 
								{address: "ES_SMRIU2", vlan: 41, interface: "eth1"}, 
								{address: "ES_MIMU2", vlan: 44, interface: "eth1"}, 
								{address: "ES_MIMU2", vlan: 45, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 51, interface: "eth1"}, 
								{address: "ES_CM2CA", vlan: 52, interface: "eth2"}, 
								{address: "ES_STARTR1", vlan: 55, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 58, interface: "eth0"}, 
								{address: "ES_MIMU1", vlan: 61, interface: "eth1"}, 
								{address: "ES_STARTR2", vlan: 63, interface: "eth1"}, 
								{address: "ES_CM1CA", vlan: 65, interface: "eth1"}, 
								{address: "ES_CM2CB", vlan: 68, interface: "eth3"}, 
								{address: "ES_SM2CB", vlan: 74, interface: "eth0"}, 
								{address: "ES_SM2CA", vlan: 80, interface: "eth0"}, 
								{address: "ES_SM2CA", vlan: 91, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 92, interface: "eth1"}, 
								{address: "ES_CM2CB", vlan: 93, interface: "eth3"}, 
								{address: "ES_GPS2", vlan: 94, interface: "eth1"}, 
								{address: "ES_LCM2", vlan: 95, interface: "eth1"}, 
								{address: "ES_CM2CB", vlan: 98, interface: "eth3"}, 
								{address: "ES_LCM2", vlan: 110, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 115, interface: "eth1"}, 
								{address: "ES_CM2CB", vlan: 120, interface: "eth3"}, 
								{address: "ES_CM2CB", vlan: 130, interface: "eth3"}]

*.SW32.macTable.forwardingTable = [{address: "ES_STARTR2", vlan: 1, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 2, interface: "eth2"}, 
								{address: "ES_CM2CB", vlan: 3, interface: "eth0"}, 
								{address: "ES_DU3", vlan: 7, interface: "eth1"}, 
								{address: "ES_MIMU1", vlan: 15, interface: "eth1"}, 
								{address: "ES_LCM2", vlan: 16, interface: "eth4"}, 
								{address: "ES_CMRIU2", vlan: 19, interface: "eth1"}, 
								{address: "ES_RCM2", vlan: 20, interface: "eth6"}, 
								{address: "ES_FCM2", vlan: 23, interface: "eth3"}, 
								{address: "ES_DU2", vlan: 25, interface: "eth1"}, 
								{address: "ES_RCM2", vlan: 28, interface: "eth6"}, 
								{address: "ES_SBAND1", vlan: 37, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 38, interface: "eth1"}, 
								{address: "ES_SMRIU2", vlan: 41, interface: "eth2"}, 
								{address: "ES_MIMU2", vlan: 44, interface: "eth1"}, 
								{address: "ES_MIMU2", vlan: 45, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 51, interface: "eth5"}, 
								{address: "ES_LCM2", vlan: 53, interface: "eth4"}, 
								{address: "ES_FCM2", vlan: 54, interface: "eth3"}, 
								{address: "ES_STARTR1", vlan: 55, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 58, interface: "eth0"}, 
								{address: "ES_SMRIU1", vlan: 60, interface: "eth2"}, 
								{address: "ES_MIMU1", vlan: 61, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 62, interface: "eth1"}, 
								{address: "ES_STARTR2", vlan: 63, interface: "eth1"}, 
								{address: "ES_CM1CA", vlan: 65, interface: "eth2"}, 
								{address: "ES_LCM2", vlan: 73, interface: "eth4"}, 
								{address: "ES_SM2CB", vlan: 74, interface: "eth0"}, 
								{address: "ES_FCM2", vlan: 79, interface: "eth3"}, 
								{address: "ES_RCM2", vlan: 81, interface: "eth6"}, 
								{address: "ES_SM1CA", vlan: 85, interface: "eth5"}, 
								{address: "ES_DU2", vlan: 86, interface: "eth1"}, 
								{address: "ES_SM2CA", vlan: 91, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 92, interface: "eth5"}, 
								{address: "ES_CM2CB", vlan: 93, interface: "eth0"}, 
								{address: "ES_GPS2", vlan: 94, interface: "eth1"}, 
								{address: "ES_LCM2", vlan: 95, interface: "eth4"}, 
								{address: "ES_CM2CB", vlan: 98, interface: "eth0"}, 
								{address: "ES_LCM2", vlan: 103, interface: "eth4"}, 
								{address: "ES_LCM2", vlan: 110, interface: "eth4"}, 
								{address: "ES_SM1CB", vlan: 115, interface: "eth5"}, 
								{address: "ES_SM1CA", vlan: 117, interface: "eth5"}, 
								{address: "ES_CM2CB", vlan: 120, interface: "eth0"}, 
								{address: "ES_FCM2", vlan: 128, interface: "eth3"}, 
								{address: "ES_CM2CB", vlan: 130, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 132, interface: "eth5"}]

*.SW22.macTable.forwardingTable = [{address: "ES_STARTR2", vlan: 1, interface: "eth1"}, 
								{address: "ES_CM2CB", vlan: 3, interface: "eth0"}, 
								{address: "ES_DU3", vlan: 7, interface: "eth2"}, 
								{address: "ES_GPS1", vlan: 12, interface: "eth4"}, 
								{address: "ES_MIMU1", vlan: 15, interface: "eth1"}, 
								{address: "ES_LCM2", vlan: 16, interface: "eth0"}, 
								{address: "ES_RCM1", vlan: 17, interface: "eth6"}, 
								{address: "ES_BFCU", vlan: 18, interface: "eth3"}, 
								{address: "ES_CMRIU2", vlan: 19, interface: "eth5"}, 
								{address: "ES_RCM2", vlan: 20, interface: "eth0"}, 
								{address: "ES_CMRIU2", vlan: 22, interface: "eth5"}, 
								{address: "ES_DU2", vlan: 25, interface: "eth2"}, 
								{address: "ES_RCM2", vlan: 28, interface: "eth0"}, 
								{address: "ES_BFCU", vlan: 29, interface: "eth3"}, 
								{address: "ES_MIMU3", vlan: 32, interface: "eth1"}, 
								{address: "ES_CMRIU2", vlan: 36, interface: "eth5"}, 
								{address: "ES_SBAND1", vlan: 37, interface: "eth7"}, 
								{address: "ES_STARTR1", vlan: 38, interface: "eth1"}, 
								{address: "ES_MIMU2", vlan: 44, interface: "eth1"}, 
								{address: "ES_MIMU2", vlan: 45, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 55, interface: "eth1"}, 
								{address: "ES_MIMU3", vlan: 57, interface: "eth1"}, 
								{address: "ES_MIMU1", vlan: 61, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 62, interface: "eth1"}, 
								{address: "ES_STARTR2", vlan: 63, interface: "eth1"}, 
								{address: "ES_CMRIU2", vlan: 77, interface: "eth5"}, 
								{address: "ES_FCM2", vlan: 79, interface: "eth0"}, 
								{address: "ES_RCM2", vlan: 81, interface: "eth0"}, 
								{address: "ES_DU2", vlan: 86, interface: "eth2"}, 
								{address: "ES_CM1CA", vlan: 89, interface: "eth6"}, 
								{address: "ES_SM2CA", vlan: 91, interface: "eth0"}, 
								{address: "ES_CM2CB", vlan: 93, interface: "eth0"}, 
								{address: "ES_GPS2", vlan: 94, interface: "eth4"}, 
								{address: "ES_CM2CB", vlan: 98, interface: "eth0"}, 
								{address: "ES_CM1CB", vlan: 99, interface: "eth6"}, 
								{address: "ES_LCM2", vlan: 103, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 117, interface: "eth0"}, 
								{address: "ES_CM2CB", vlan: 120, interface: "eth0"}, 
								{address: "ES_CM2CB", vlan: 130, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 132, interface: "eth0"}]

*.SW13.macTable.forwardingTable = [{address: "ES_STARTR2", vlan: 1, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 6, interface: "eth3"}, 
								{address: "ES_MIMU2", vlan: 14, interface: "eth4"}, 
								{address: "ES_MIMU1", vlan: 15, interface: "eth5"}, 
								{address: "ES_LCM2", vlan: 16, interface: "eth0"}, 
								{address: "ES_RCM1", vlan: 30, interface: "eth2"}, 
								{address: "ES_MIMU3", vlan: 32, interface: "eth6"}, 
								{address: "ES_SM2CA", vlan: 34, interface: "eth2"}, 
								{address: "ES_STARTR1", vlan: 38, interface: "eth3"}, 
								{address: "ES_SBAND1", vlan: 39, interface: "eth2"}, 
								{address: "ES_STARTR2", vlan: 40, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 43, interface: "eth2"}, 
								{address: "ES_MIMU2", vlan: 44, interface: "eth4"}, 
								{address: "ES_MIMU2", vlan: 45, interface: "eth4"}, 
								{address: "ES_MIMU3", vlan: 47, interface: "eth6"}, 
								{address: "ES_DU3", vlan: 48, interface: "eth2"}, 
								{address: "ES_DU1", vlan: 49, interface: "eth2"}, 
								{address: "ES_STARTR2", vlan: 50, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 55, interface: "eth3"}, 
								{address: "ES_MIMU3", vlan: 57, interface: "eth6"}, 
								{address: "ES_MIMU1", vlan: 61, interface: "eth5"}, 
								{address: "ES_STARTR1", vlan: 62, interface: "eth3"}, 
								{address: "ES_STARTR2", vlan: 63, interface: "eth1"}, 
								{address: "ES_CMRIU1", vlan: 64, interface: "eth2"}, 
								{address: "ES_MIMU1", vlan: 69, interface: "eth5"}, 
								{address: "ES_CMRIU2", vlan: 77, interface: "eth0"}, 
								{address: "ES_MIMU1", vlan: 78, interface: "eth5"}, 
								{address: "ES_CM1CB", vlan: 82, interface: "eth2"}, 
								{address: "ES_GPS1", vlan: 87, interface: "eth2"}, 
								{address: "ES_CM2CB", vlan: 93, interface: "eth0"}, 
								{address: "ES_MIMU3", vlan: 96, interface: "eth6"}, 
								{address: "ES_GPS2", vlan: 113, interface: "eth2"}, 
								{address: "ES_CM2CB", vlan: 120, interface: "eth0"}, 
								{address: "ES_CM1CB", vlan: 121, interface: "eth2"}, 
								{address: "ES_SMRIU1", vlan: 123, interface: "eth2"}, 
								{address: "ES_SMRIU2", vlan: 126, interface: "eth2"}, 
								{address: "ES_DU1", vlan: 127, interface: "eth2"}, 
								{address: "ES_MIMU3", vlan: 131, interface: "eth6"}, 
								{address: "ES_SBAND2", vlan: 133, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 134, interface: "eth2"}, 
								{address: "ES_STARTR2", vlan: 135, interface: "eth1"}, 
								{address: "ES_STARTR2", vlan: 136, interface: "eth1"}]

*.SW6.macTable.forwardingTable = [{address: "ES_SMRIU1", vlan: 2, interface: "eth1"}, 
								{address: "ES_DU2", vlan: 8, interface: "eth2"}, 
								{address: "ES_FCM2", vlan: 23, interface: "eth0"}, 
								{address: "ES_SMRIU2", vlan: 24, interface: "eth3"}, 
								{address: "ES_SMRIU2", vlan: 41, interface: "eth3"}, 
								{address: "ES_SMRIU1", vlan: 60, interface: "eth1"}, 
								{address: "ES_CM1CA", vlan: 65, interface: "eth2"}, 
								{address: "ES_LCM2", vlan: 73, interface: "eth0"}, 
								{address: "ES_SMRIU1", vlan: 75, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 107, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 116, interface: "eth1"}, 
								{address: "ES_DU3", vlan: 119, interface: "eth2"}, 
								{address: "ES_SMRIU1", vlan: 123, interface: "eth1"}, 
								{address: "ES_SMRIU2", vlan: 126, interface: "eth3"}]

*.SW11.macTable.forwardingTable = [{address: "ES_CM2CB", vlan: 3, interface: "eth1"}, 
								{address: "ES_STARTR1", vlan: 6, interface: "eth2"}, 
								{address: "ES_DU3", vlan: 7, interface: "eth0"}, 
								{address: "ES_DU2", vlan: 8, interface: "eth3"}, 
								{address: "ES_SM1CB", vlan: 9, interface: "eth2"}, 
								{address: "ES_FCM1", vlan: 13, interface: "eth2"}, 
								{address: "ES_BFCU", vlan: 18, interface: "eth1"}, 
								{address: "ES_RCM2", vlan: 20, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 21, interface: "eth2"}, 
								{address: "ES_SMRIU2", vlan: 24, interface: "eth2"}, 
								{address: "ES_DU2", vlan: 25, interface: "eth3"}, 
								{address: "ES_DU3", vlan: 31, interface: "eth0"}, 
								{address: "ES_STARTR2", vlan: 40, interface: "eth2"}, 
								{address: "ES_MIMU3", vlan: 47, interface: "eth2"}, 
								{address: "ES_DU3", vlan: 48, interface: "eth0"}, 
								{address: "ES_DU1", vlan: 49, interface: "eth4"}, 
								{address: "ES_STARTR2", vlan: 50, interface: "eth2"}, 
								{address: "ES_SM1CB", vlan: 66, interface: "eth2"}, 
								{address: "ES_MIMU1", vlan: 69, interface: "eth2"}, 
								{address: "ES_DU1", vlan: 70, interface: "eth4"}, 
								{address: "ES_MIMU1", vlan: 78, interface: "eth2"}, 
								{address: "ES_FCM2", vlan: 79, interface: "eth1"}, 
								{address: "ES_DU2", vlan: 86, interface: "eth3"}, 
								{address: "ES_DU2", vlan: 88, interface: "eth3"}, 
								{address: "ES_DU2", vlan: 90, interface: "eth3"}, 
								{address: "ES_LCM2", vlan: 103, interface: "eth1"}, 
								{address: "ES_CMRIU1", vlan: 104, interface: "eth2"}, 
								{address: "ES_DU3", vlan: 106, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 109, interface: "eth2"}, 
								{address: "ES_DU3", vlan: 119, interface: "eth0"}, 
								{address: "ES_DU1", vlan: 127, interface: "eth4"}, 
								{address: "ES_CM2CB", vlan: 130, interface: "eth1"}]

*.SW51.macTable.forwardingTable = [{address: "ES_CM1CB", vlan: 4, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 5, interface: "eth2"}, 
								{address: "ES_SM1CB", vlan: 9, interface: "eth2"}, 
								{address: "ES_MIMU2", vlan: 14, interface: "eth1"}, 
								{address: "ES_CMRIU2", vlan: 19, interface: "eth3"}, 
								{address: "ES_SM2CA", vlan: 33, interface: "eth3"}, 
								{address: "ES_SM1CB", vlan: 35, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 46, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 51, interface: "eth2"}, 
								{address: "ES_FCM2", vlan: 54, interface: "eth3"}, 
								{address: "ES_SM1CA", vlan: 56, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 66, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 71, interface: "eth3"}, 
								{address: "ES_SM1CB", vlan: 76, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 85, interface: "eth0"}, 
								{address: "ES_DU2", vlan: 90, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 92, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 97, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 100, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 109, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 115, interface: "eth2"}, 
								{address: "ES_SMRIU1", vlan: 116, interface: "eth1"}, 
								{address: "ES_SM1CA", vlan: 117, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 129, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 132, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 134, interface: "eth0"}, 
								{address: "ES_STARTR2", vlan: 135, interface: "eth1"}]

*.SW41.macTable.forwardingTable = [{address: "ES_CM1CB", vlan: 4, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 9, interface: "eth0"}, 
								{address: "ES_SBAND1", vlan: 10, interface: "eth2"}, 
								{address: "ES_MIMU2", vlan: 14, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 21, interface: "eth1"}, 
								{address: "ES_CMRIU2", vlan: 22, interface: "eth2"}, 
								{address: "ES_CM1CA", vlan: 27, interface: "eth3"}, 
								{address: "ES_SM1CB", vlan: 35, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 56, interface: "eth0"}, 
								{address: "ES_CM1CA", vlan: 65, interface: "eth3"}, 
								{address: "ES_SM1CB", vlan: 66, interface: "eth0"}, 
								{address: "ES_LCM2", vlan: 73, interface: "eth2"}, 
								{address: "ES_SM1CB", vlan: 76, interface: "eth0"}, 
								{address: "ES_CM1CB", vlan: 82, interface: "eth1"}, 
								{address: "ES_CM1CA", vlan: 89, interface: "eth3"}, 
								{address: "ES_DU2", vlan: 90, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 97, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 99, interface: "eth1"}, 
								{address: "ES_CM1CA", vlan: 101, interface: "eth3"}, 
								{address: "ES_SM1CA", vlan: 109, interface: "eth0"}, 
								{address: "ES_CM1CB", vlan: 111, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 116, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 121, interface: "eth1"}, 
								{address: "ES_GPS2", vlan: 122, interface: "eth2"}, 
								{address: "ES_SM1CB", vlan: 129, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 134, interface: "eth0"}, 
								{address: "ES_STARTR2", vlan: 135, interface: "eth2"}]

*.SW21.macTable.forwardingTable = [{address: "ES_STARTR1", vlan: 6, interface: "eth1"}, 
								{address: "ES_DU2", vlan: 8, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 9, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 10, interface: "eth3"}, 
								{address: "ES_FCM1", vlan: 13, interface: "eth2"}, 
								{address: "ES_MIMU2", vlan: 14, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 21, interface: "eth2"}, 
								{address: "ES_SMRIU2", vlan: 24, interface: "eth2"}, 
								{address: "ES_FCM1", vlan: 26, interface: "eth2"}, 
								{address: "ES_RCM1", vlan: 30, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 34, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 39, interface: "eth3"}, 
								{address: "ES_STARTR2", vlan: 40, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 43, interface: "eth2"}, 
								{address: "ES_MIMU3", vlan: 47, interface: "eth1"}, 
								{address: "ES_DU3", vlan: 48, interface: "eth0"}, 
								{address: "ES_DU1", vlan: 49, interface: "eth0"}, 
								{address: "ES_STARTR2", vlan: 50, interface: "eth1"}, 
								{address: "ES_LCM2", vlan: 53, interface: "eth6"}, 
								{address: "ES_SM1CA", vlan: 56, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 59, interface: "eth2"}, 
								{address: "ES_CMRIU1", vlan: 64, interface: "eth5"}, 
								{address: "ES_SM1CB", vlan: 66, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 67, interface: "eth2"}, 
								{address: "ES_MIMU1", vlan: 69, interface: "eth1"}, 
								{address: "ES_DU1", vlan: 70, interface: "eth0"}, 
								{address: "ES_SMRIU1", vlan: 75, interface: "eth2"}, 
								{address: "ES_MIMU1", vlan: 78, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 82, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 83, interface: "eth3"}, 
								{address: "ES_SM2CA", vlan: 84, interface: "eth2"}, 
								{address: "ES_GPS1", vlan: 87, interface: "eth4"}, 
								{address: "ES_DU2", vlan: 88, interface: "eth0"}, 
								{address: "ES_DU2", vlan: 90, interface: "eth0"}, 
								{address: "ES_CM1CA", vlan: 101, interface: "eth2"}, 
								{address: "ES_CMRIU1", vlan: 104, interface: "eth5"}, 
								{address: "ES_DU3", vlan: 106, interface: "eth0"}, 
								{address: "ES_SMRIU1", vlan: 107, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 108, interface: "eth3"}, 
								{address: "ES_SM1CA", vlan: 109, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 111, interface: "eth2"}, 
								{address: "ES_SBAND2", vlan: 112, interface: "eth3"}, 
								{address: "ES_GPS2", vlan: 113, interface: "eth4"}, 
								{address: "ES_FCM1", vlan: 114, interface: "eth2"}, 
								{address: "ES_DU3", vlan: 119, interface: "eth0"}, 
								{address: "ES_CM1CB", vlan: 121, interface: "eth2"}, 
								{address: "ES_GPS2", vlan: 122, interface: "eth4"}, 
								{address: "ES_SMRIU1", vlan: 123, interface: "eth2"}, 
								{address: "ES_GPS2", vlan: 124, interface: "eth4"}, 
								{address: "ES_SMRIU2", vlan: 126, interface: "eth2"}, 
								{address: "ES_DU1", vlan: 127, interface: "eth0"}, 
								{address: "ES_FCM2", vlan: 128, interface: "eth6"}, 
								{address: "ES_SM1CB", vlan: 129, interface: "eth2"}, 
								{address: "ES_SBAND2", vlan: 133, interface: "eth3"}, 
								{address: "ES_SM1CA", vlan: 134, interface: "eth2"}, 
								{address: "ES_STARTR2", vlan: 135, interface: "eth1"}]

*.SW31.macTable.forwardingTable = [{address: "ES_DU2", vlan: 8, interface: "eth1"}, 
								{address: "ES_SM1CB", vlan: 9, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 10, interface: "eth1"}, 
								{address: "ES_LCM1", vlan: 11, interface: "eth7"}, 
								{address: "ES_FCM1", vlan: 13, interface: "eth3"}, 
								{address: "ES_MIMU2", vlan: 14, interface: "eth1"}, 
								{address: "ES_RCM1", vlan: 17, interface: "eth5"}, 
								{address: "ES_CM1CB", vlan: 21, interface: "eth2"}, 
								{address: "ES_CMRIU2", vlan: 22, interface: "eth4"}, 
								{address: "ES_FCM2", vlan: 23, interface: "eth0"}, 
								{address: "ES_SMRIU2", vlan: 24, interface: "eth0"}, 
								{address: "ES_FCM1", vlan: 26, interface: "eth3"}, 
								{address: "ES_CM1CA", vlan: 27, interface: "eth2"}, 
								{address: "ES_BFCU", vlan: 29, interface: "eth4"}, 
								{address: "ES_RCM1", vlan: 30, interface: "eth5"}, 
								{address: "ES_SM2CA", vlan: 34, interface: "eth6"}, 
								{address: "ES_SM1CB", vlan: 35, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 42, interface: "eth6"}, 
								{address: "ES_SM2CB", vlan: 43, interface: "eth6"}, 
								{address: "ES_SM1CA", vlan: 56, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 59, interface: "eth6"}, 
								{address: "ES_CM1CA", vlan: 65, interface: "eth2"}, 
								{address: "ES_SM1CB", vlan: 66, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 67, interface: "eth6"}, 
								{address: "ES_LCM2", vlan: 73, interface: "eth0"}, 
								{address: "ES_SMRIU1", vlan: 75, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 76, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 82, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 83, interface: "eth1"}, 
								{address: "ES_SM2CA", vlan: 84, interface: "eth6"}, 
								{address: "ES_CM1CA", vlan: 89, interface: "eth2"}, 
								{address: "ES_DU2", vlan: 90, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 99, interface: "eth2"}, 
								{address: "ES_CM1CA", vlan: 101, interface: "eth2"}, 
								{address: "ES_FCM1", vlan: 102, interface: "eth3"}, 
								{address: "ES_LCM1", vlan: 105, interface: "eth7"}, 
								{address: "ES_DU3", vlan: 106, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 107, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 109, interface: "eth2"}, 
								{address: "ES_CM1CB", vlan: 111, interface: "eth2"}, 
								{address: "ES_FCM1", vlan: 114, interface: "eth3"}, 
								{address: "ES_SMRIU1", vlan: 116, interface: "eth0"}, 
								{address: "ES_DU3", vlan: 119, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 121, interface: "eth2"}, 
								{address: "ES_GPS2", vlan: 122, interface: "eth1"}, 
								{address: "ES_SMRIU1", vlan: 123, interface: "eth0"}, 
								{address: "ES_FCM1", vlan: 125, interface: "eth3"}, 
								{address: "ES_SMRIU2", vlan: 126, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 129, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 134, interface: "eth2"}, 
								{address: "ES_STARTR2", vlan: 135, interface: "eth1"}]

*.SW12.macTable.forwardingTable = [{address: "ES_SBAND1", vlan: 10, interface: "eth1"}, 
								{address: "ES_RCM2", vlan: 28, interface: "eth2"}, 
								{address: "ES_CMRIU2", vlan: 36, interface: "eth2"}, 
								{address: "ES_SBAND1", vlan: 37, interface: "eth1"}, 
								{address: "ES_SBAND1", vlan: 39, interface: "eth1"}, 
								{address: "ES_DU1", vlan: 70, interface: "eth0"}, 
								{address: "ES_SBAND1", vlan: 83, interface: "eth1"}, 
								{address: "ES_DU2", vlan: 88, interface: "eth0"}, 
								{address: "ES_SMRIU1", vlan: 107, interface: "eth0"}, 
								{address: "ES_SBAND1", vlan: 108, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 111, interface: "eth0"}, 
								{address: "ES_SBAND2", vlan: 112, interface: "eth3"}, 
								{address: "ES_SBAND1", vlan: 118, interface: "eth1"}, 
								{address: "ES_GPS2", vlan: 124, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 129, interface: "eth0"}, 
								{address: "ES_SBAND2", vlan: 133, interface: "eth3"}]

*.SW14.macTable.forwardingTable = [{address: "ES_GPS1", vlan: 12, interface: "eth1"}, 
								{address: "ES_FCM1", vlan: 26, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 56, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 67, interface: "eth2"}, 
								{address: "ES_SMRIU1", vlan: 75, interface: "eth2"}, 
								{address: "ES_GPS1", vlan: 87, interface: "eth1"}, 
								{address: "ES_GPS2", vlan: 94, interface: "eth3"}, 
								{address: "ES_CM1CA", vlan: 101, interface: "eth2"}, 
								{address: "ES_SBAND2", vlan: 112, interface: "eth2"}, 
								{address: "ES_GPS2", vlan: 113, interface: "eth3"}, 
								{address: "ES_FCM1", vlan: 114, interface: "eth2"}, 
								{address: "ES_GPS2", vlan: 122, interface: "eth3"}, 
								{address: "ES_GPS2", vlan: 124, interface: "eth3"}]

*.SW7.macTable.forwardingTable = [{address: "ES_RCM1", vlan: 17, interface: "eth1"}, 
								{address: "ES_CMRIU2", vlan: 22, interface: "eth0"}, 
								{address: "ES_BFCU", vlan: 29, interface: "eth0"}, 
								{address: "ES_LCM2", vlan: 53, interface: "eth3"}, 
								{address: "ES_CM1CA", vlan: 89, interface: "eth1"}, 
								{address: "ES_CM1CB", vlan: 99, interface: "eth1"}, 
								{address: "ES_FCM2", vlan: 128, interface: "eth3"}]

*.SW8.macTable.forwardingTable = [{address: "ES_LCM1", vlan: 11, interface: "eth3"}, 
								{address: "ES_CMRIU2", vlan: 19, interface: "eth1"}, 
								{address: "ES_CM1CA", vlan: 27, interface: "eth3"}, 
								{address: "ES_SM2CA", vlan: 33, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 34, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 42, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 43, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 46, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 51, interface: "eth0"}, 
								{address: "ES_FCM2", vlan: 54, interface: "eth1"}, 
								{address: "ES_SM2CB", vlan: 59, interface: "eth2"}, 
								{address: "ES_SM2CB", vlan: 67, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 71, interface: "eth2"}, 
								{address: "ES_SM2CA", vlan: 84, interface: "eth2"}, 
								{address: "ES_SM1CA", vlan: 85, interface: "eth0"}, 
								{address: "ES_SM1CB", vlan: 92, interface: "eth0"}, 
								{address: "ES_LCM1", vlan: 105, interface: "eth3"}, 
								{address: "ES_SM1CB", vlan: 115, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 117, interface: "eth0"}, 
								{address: "ES_SM1CA", vlan: 132, interface: "eth0"}]


*.SW31.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 9375.0us
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[3].macLayer.*.queue.transmissionGate[0].offset = 9375.0us - 1923.8578us
*.SW31.eth[3].macLayer.*.queue.transmissionGate[*].durations = [49.20958us, 9325.79042us]
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW31.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW42.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW42.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW42.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW42.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW42.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW42.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW42.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[0].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 9614.52415us
*.SW32.eth[0].macLayer.*.queue.transmissionGate[*].durations = [62.17956us, 32710.86428us, 43.86901us, 29683.08715us]
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SM2CB.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SM2CB.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SM2CB.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SM2CB.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SM2CB.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_SM2CB.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW42.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW42.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW42.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW42.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW42.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW42.eth[3].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 42431.43701us
*.SW42.eth[3].macLayer.*.queue.transmissionGate[*].durations = [43.86901us, 62456.13099us]
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW42.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW42.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_DU2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_DU2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_DU2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_DU2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_DU2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_DU2.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 237340.45331us
*.ES_DU2.eth[0].macLayer.*.queue.transmissionGate[*].durations = [113.44909us, 374886.55091us]
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_DU2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_DU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[5].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[5].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[5].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[5].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[5].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[5].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 9738.88328us
*.SW13.eth[5].macLayer.*.queue.transmissionGate[*].durations = [62.17956us, 62437.82044us]
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[5].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[4].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[4].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[4].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[4].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[4].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 15000.0us
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[4].macLayer.*.queue.transmissionGate[0].offset = 15000.0us - 4773.51453us
*.SW13.eth[4].macLayer.*.queue.transmissionGate[*].durations = [86.8225us, 14913.1775us]
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[4].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW42.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW42.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW42.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW42.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW42.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW42.eth[2].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 9676.70372us
*.SW42.eth[2].macLayer.*.queue.transmissionGate[*].durations = [62.17955us, 62437.82045us]
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW42.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW42.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[6].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[6].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[6].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[6].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[6].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW21.eth[6].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[6].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[6].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[6].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[6].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[6].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 12500.0us
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[6].macLayer.*.queue.transmissionGate[0].offset = 12500.0us - 5457.71328us
*.SW13.eth[6].macLayer.*.queue.transmissionGate[*].durations = [61.72179us, 12438.27821us]
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[6].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[1].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 4686.69202us
*.SW21.eth[1].macLayer.*.queue.transmissionGate[*].durations = [86.8225us, 622.47696us, 61.72179us, 12438.27821us, 61.72179us, 1728.97875us, 86.8225us, 10622.47696us, 61.72179us, 4228.97875us, 86.8225us, 8122.47696us, 61.72179us, 6728.97875us, 86.8225us, 5622.47696us, 61.72179us, 9228.97875us, 86.8225us, 3122.47696us, 61.72179us, 11728.97875us]
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW21.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 9375.0us
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[3].macLayer.*.queue.transmissionGate[0].offset = 9375.0us - 364.83765us
*.SW21.eth[3].macLayer.*.queue.transmissionGate[*].durations = [121.61254us, 9253.38746us]
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW21.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[4].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[4].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[4].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[4].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[4].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[4].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 26329.60423us
*.SW21.eth[4].macLayer.*.queue.transmissionGate[*].durations = [20.14159us, 32516.46751us, 74.38659us, 4889.00431us, 20.14159us, 37479.85841us]
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW21.eth[4].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_CMRIU1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_CMRIU1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_CMRIU1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_CMRIU1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_CMRIU1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_CMRIU1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_CMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[5].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[5].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[5].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[5].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[5].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 25000.0us
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[5].macLayer.*.queue.transmissionGate[0].offset = 25000.0us - 7700.9286us
*.SW21.eth[5].macLayer.*.queue.transmissionGate[*].durations = [18.08166us, 24981.91834us]
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW21.eth[5].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[2].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 46471.99559us
*.SW22.eth[2].macLayer.*.queue.transmissionGate[*].durations = [93.68896us, 62406.31104us, 93.68896us, 25119.96332us, 72.86071us, 37213.48701us, 93.68896us, 62406.31104us, 93.68896us, 62406.31104us, 93.68896us, 62406.31104us, 93.68896us, 62406.31104us]
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[7].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[7].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[7].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[7].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[7].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[7].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 286655.58033us
*.SW22.eth[7].macLayer.*.queue.transmissionGate[*].durations = [99.25841us, 374900.74159us]
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[7].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[7].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[5].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[5].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[5].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[5].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[5].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[5].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 134112.78715us
*.SW32.eth[5].macLayer.*.queue.transmissionGate[*].durations = [72.86071us, 374927.13929us]
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[5].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[1].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 9676.70372us
*.SW22.eth[1].macLayer.*.queue.transmissionGate[*].durations = [62.17955us, 41280.65144us, 16.17431us, 21140.9947us]
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[7].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[7].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[7].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[7].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[7].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW32.eth[7].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[7].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[4].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[4].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[4].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[4].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[4].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[4].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 286655.58033us
*.SW22.eth[4].macLayer.*.queue.transmissionGate[*].durations = [99.25841us, 374900.74159us]
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[4].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[0].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 54.62647us
*.SW21.eth[0].macLayer.*.queue.transmissionGate[*].durations = [27.31322us, 7618.98891us, 18.08166us, 10109.83753us, 101.85241us, 14770.2284us, 18.08166us, 22609.83753us, 101.85241us, 2270.2284us, 18.08166us, 17335.61621us]
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW21.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[1].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 51035.70903us
*.SW13.eth[1].macLayer.*.queue.transmissionGate[*].durations = [16.17431us, 62483.82569us]
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 12500.0us
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[3].macLayer.*.queue.transmissionGate[0].offset = 12500.0us - 5457.71328us
*.SW13.eth[3].macLayer.*.queue.transmissionGate[*].durations = [61.72179us, 12438.27821us]
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 125000.0us
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[2].macLayer.*.queue.transmissionGate[0].offset = 125000.0us - 47243.34045us
*.SW32.eth[2].macLayer.*.queue.transmissionGate[*].durations = [20.52306us, 124979.47694us]
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW12.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW12.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW12.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW12.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW12.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW12.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW12.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW12.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW12.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW12.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW12.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW12.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW12.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW12.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_MIMU2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_MIMU2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_MIMU2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_MIMU2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_MIMU2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_MIMU2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_MIMU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SMRIU1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SMRIU1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SMRIU1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SMRIU1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SMRIU1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 25000.0us
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SMRIU1.eth[0].macLayer.*.queue.transmissionGate[0].offset = 25000.0us - 0.0us
*.ES_SMRIU1.eth[0].macLayer.*.queue.transmissionGate[*].durations = [18.08166us, 24981.91834us]
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_SMRIU1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SMRIU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SBAND2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SBAND2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SBAND2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SBAND2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SBAND2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_SBAND2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SBAND2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW42.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW42.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW42.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW42.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW42.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 125000.0us
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW42.eth[1].macLayer.*.queue.transmissionGate[0].offset = 125000.0us - 46284.61766us
*.SW42.eth[1].macLayer.*.queue.transmissionGate[*].durations = [93.68896us, 844.51076us, 20.52306us, 3743.84564us, 16.17431us, 57781.25727us, 93.68896us, 4608.87946us, 16.17431us, 57781.25727us]
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW42.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW42.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SM2CA.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SM2CA.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SM2CA.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SM2CA.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SM2CA.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SM2CA.eth[0].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 46097.23973us
*.ES_SM2CA.eth[0].macLayer.*.queue.transmissionGate[*].durations = [93.68896us, 4763.90876us, 16.1743us, 57626.22798us]
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_SM2CA.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 187500.0us
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[3].macLayer.*.queue.transmissionGate[0].offset = 187500.0us - 1923.8578us
*.SW32.eth[3].macLayer.*.queue.transmissionGate[*].durations = [49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 2914.50061us, 43.86901us, 6367.4208us, 49.20958us, 2155.29302us, 16.1743us, 7154.3231us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9164.50061us, 43.86901us, 117.4208us, 49.20958us, 8405.29302us, 16.1743us, 904.3231us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 6039.50061us, 43.86901us, 3242.4208us, 49.20958us, 5280.29302us, 16.1743us, 4029.3231us, 49.20958us, 9325.79042us]
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW52.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW52.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW52.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW52.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW52.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW52.eth[2].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 46190.9287us
*.SW52.eth[2].macLayer.*.queue.transmissionGate[*].durations = [93.68895us, 62406.31105us]
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW52.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW52.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW14.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW14.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW14.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW14.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW14.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW14.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW14.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW14.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW14.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW14.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW14.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW14.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW14.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW14.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_MIMU3.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_MIMU3.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_MIMU3.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_MIMU3.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_MIMU3.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_MIMU3.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_MIMU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_MIMU1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_MIMU1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_MIMU1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_MIMU1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_MIMU1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_MIMU1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_MIMU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW7.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW7.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW7.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW7.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW7.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW7.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW7.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 1874.6482us
*.SW22.eth[0].macLayer.*.queue.transmissionGate[*].durations = [49.20959us, 9325.79041us, 49.20959us, 1629.10358us, 88.80614us, 7607.88069us, 49.20959us, 9325.79041us, 49.20959us, 7879.10358us, 88.80614us, 1357.88069us, 49.20959us, 2919.84118us, 43.86901us, 6362.08022us, 49.20959us, 9325.79041us, 49.20959us, 692.35554us, 74.38659us, 3987.36145us, 88.80614us, 4482.88069us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 1629.10358us, 88.80614us, 7607.88069us, 49.20959us, 9169.84118us, 43.86901us, 112.08022us, 49.20959us, 7879.10358us, 88.80614us, 1357.88069us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 692.35554us, 74.38659us, 3987.36145us, 88.80614us, 4482.88069us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 1629.10358us, 88.80614us, 4326.93146us, 43.86901us, 3237.08022us, 49.20959us, 9325.79041us, 49.20959us, 7879.10358us, 88.80614us, 1357.88069us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 692.35554us, 74.38659us, 3987.36145us, 88.80614us, 4482.88069us, 49.20959us, 9325.79041us, 49.20959us, 2919.84118us, 43.86901us, 6362.08022us, 49.20959us, 1268.49372us, 113.44908us, 247.16078us, 88.80614us, 7607.88069us, 49.20959us, 9325.79041us, 49.20959us, 7879.10358us, 88.80614us, 1357.88069us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 692.35554us, 74.38659us, 3987.36145us, 88.80614us, 4326.93146us, 43.86901us, 112.08022us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 1629.10358us, 88.80614us, 7607.88069us, 49.20959us, 9325.79041us, 49.20959us, 7879.10358us, 88.80614us, 1357.88069us, 49.20959us, 9325.79041us, 49.20959us, 6044.84118us, 43.86901us, 3237.08022us, 49.20959us, 692.35554us, 74.38659us, 3987.36145us, 88.80614us, 4482.88069us, 49.20959us, 9325.79041us]
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW7.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW7.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW7.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW7.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW7.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW7.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW7.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW21.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW21.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW21.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW21.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW21.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW21.eth[2].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 1874.6482us
*.SW21.eth[2].macLayer.*.queue.transmissionGate[*].durations = [49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 506.6619us, 64.08691us, 8755.0416us]
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW21.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW21.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_CM2CB.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_CM2CB.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_CM2CB.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_CM2CB.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_CM2CB.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_CM2CB.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_CM2CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[6].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[6].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[6].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[6].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[6].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW31.eth[6].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[4].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[4].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[4].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[4].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[4].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW31.eth[4].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW31.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW41.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW41.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW41.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW41.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW41.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW41.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW41.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW41.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW41.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW41.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW41.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW41.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW41.eth[1].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 47304.90966us
*.SW41.eth[1].macLayer.*.queue.transmissionGate[*].durations = [20.52307us, 88822.18172us, 47.07335us, 36110.22186us, 20.52307us, 124979.47693us, 20.52307us, 26322.18172us, 47.07335us, 98610.22186us]
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW41.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW41.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[6].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[6].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[6].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[6].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[6].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[6].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 67.21497us
*.SW22.eth[6].macLayer.*.queue.transmissionGate[*].durations = [67.21496us, 15274.88107us, 19.30236us, 9638.60161us, 67.21496us, 12432.78504us]
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[6].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW6.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW6.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW6.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW6.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW6.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW6.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW6.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW6.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW6.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW6.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW6.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW6.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 125000.0us
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW6.eth[1].macLayer.*.queue.transmissionGate[0].offset = 125000.0us - 47263.86352us
*.SW6.eth[1].macLayer.*.queue.transmissionGate[*].durations = [20.52306us, 124979.47694us]
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW6.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW6.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_STARTR1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_STARTR1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_STARTR1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_STARTR1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_STARTR1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_STARTR1.eth[0].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 58717.44014us
*.ES_STARTR1.eth[0].macLayer.*.queue.transmissionGate[*].durations = [74.38659us, 74925.61341us]
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_STARTR1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_STARTR1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[0].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 58791.82674us
*.SW13.eth[0].macLayer.*.queue.transmissionGate[*].durations = [74.38658us, 74925.61342us]
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW13.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW13.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW13.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW13.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW13.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW13.eth[2].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 58791.82674us
*.SW13.eth[2].macLayer.*.queue.transmissionGate[*].durations = [74.38658us, 74925.61342us]
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW13.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW13.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[7].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[7].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[7].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[7].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[7].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 187500.0us
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[7].macLayer.*.queue.transmissionGate[0].offset = 187500.0us - 243.2251us
*.SW31.eth[7].macLayer.*.queue.transmissionGate[*].durations = [121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 8513.46899us, 93.68895us, 646.22952us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 5388.46899us, 93.68895us, 3771.22952us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 4579.85017us, 47.07336us, 4626.46393us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 9253.38746us, 121.61254us, 2263.46899us, 93.68895us, 6896.22952us, 121.61254us, 9253.38746us]
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW31.eth[7].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[7].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 75000.0us
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[1].macLayer.*.queue.transmissionGate[0].offset = 75000.0us - 243.2251us
*.SW31.eth[1].macLayer.*.queue.transmissionGate[*].durations = [121.61254us, 4235.03187us, 86.8225us, 2996.15493us, 18.08165us, 1917.29651us, 121.61254us, 7987.15773us, 101.85241us, 1164.37732us, 121.61254us, 485.03187us, 86.8225us, 6622.77062us, 20.14159us, 2038.62088us, 121.61254us, 4193.0093us, 18.08165us, 1898.94092us, 86.8225us, 3056.53309us, 121.61254us, 9253.38746us, 121.61254us, 2360.03187us, 86.8225us, 5540.30336us, 101.85241us, 1164.37732us, 121.61254us, 1068.0093us, 18.08165us, 6108.53404us, 20.14159us, 770.26529us, 86.8225us, 1181.53309us, 121.61254us, 9253.38746us]
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW31.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW14.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW14.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW14.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW14.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW14.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW14.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW14.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW51.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW51.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW51.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW51.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW51.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW51.eth[2].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 17523.29054us
*.SW51.eth[2].macLayer.*.queue.transmissionGate[*].durations = [101.85241us, 13122.63748us, 64.08691us, 24211.4232us]
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW51.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW51.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW14.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW14.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW14.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW14.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW14.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW14.eth[1].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 26349.74583us
*.SW14.eth[1].macLayer.*.queue.transmissionGate[*].durations = [20.14159us, 32570.71251us, 74.38659us, 4834.75931us, 20.14159us, 37479.85841us, 20.14159us, 32570.71251us, 74.38659us, 4834.75931us, 20.14159us, 37479.85841us, 20.14159us, 32570.71251us, 74.38659us, 4834.75931us, 20.14159us, 37479.85841us, 20.14159us, 32570.71251us, 74.38659us, 2739.85223us, 99.25842us, 1995.64866us, 20.14159us, 37479.85841us, 20.14159us, 32570.71251us, 74.38659us, 4834.75931us, 20.14159us, 37479.85841us]
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW14.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW14.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW51.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW51.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW51.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW51.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW51.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW51.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 134258.50859us
*.SW51.eth[0].macLayer.*.queue.transmissionGate[*].durations = [72.8607us, 374927.1393us]
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW51.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW51.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW7.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW7.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW7.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW7.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW7.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW7.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW7.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_LCM2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_LCM2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_LCM2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_LCM2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_LCM2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_LCM2.eth[0].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 9552.34459us
*.ES_LCM2.eth[0].macLayer.*.queue.transmissionGate[*].durations = [62.17955us, 62437.82045us]
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_LCM2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_LCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW12.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW12.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW12.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW12.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW12.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 9375.0us
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW12.eth[1].macLayer.*.queue.transmissionGate[0].offset = 9375.0us - 486.4502us
*.SW12.eth[1].macLayer.*.queue.transmissionGate[*].durations = [121.61254us, 9253.38746us]
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW12.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW12.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW12.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW12.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW12.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW12.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW12.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW12.eth[3].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 286754.83875us
*.SW12.eth[3].macLayer.*.queue.transmissionGate[*].durations = [99.25842us, 374900.74158us]
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW12.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW12.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[3].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 237567.35151us
*.SW22.eth[3].macLayer.*.queue.transmissionGate[*].durations = [113.44908us, 374886.55092us]
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW7.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW7.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW7.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW7.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW7.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW7.eth[1].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 15428.61337us
*.SW7.eth[1].macLayer.*.queue.transmissionGate[*].durations = [19.30235us, 37480.69765us]
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW7.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW7.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_LCM1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_LCM1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_LCM1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_LCM1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_LCM1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_LCM1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_LCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_BFCU.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_BFCU.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_BFCU.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_BFCU.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_BFCU.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_BFCU.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 286556.32191us
*.ES_BFCU.eth[0].macLayer.*.queue.transmissionGate[*].durations = [99.25841us, 374900.74159us]
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_BFCU.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_BFCU.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_RCM2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_RCM2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_RCM2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_RCM2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_RCM2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_RCM2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_RCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SM1CB.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SM1CB.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SM1CB.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SM1CB.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SM1CB.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_SM1CB.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_GPS1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_GPS1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_GPS1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_GPS1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_GPS1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_GPS1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_GPS1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW11.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW11.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW11.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW11.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW11.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW11.eth[1].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 1825.43861us
*.SW11.eth[1].macLayer.*.queue.transmissionGate[*].durations = [49.20958us, 9325.79042us, 49.20958us, 1589.50703us, 88.80614us, 7647.47725us, 49.20958us, 9325.79042us, 49.20958us, 7839.50703us, 88.80614us, 1397.47725us, 49.20958us, 2925.18176us, 43.86901us, 6356.73965us, 49.20958us, 9325.79042us, 49.20958us, 4714.50703us, 88.80614us, 4522.47725us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 1589.50703us, 88.80614us, 7647.47725us, 49.20958us, 9175.18176us, 43.86901us, 106.73965us, 49.20958us, 7839.50703us, 88.80614us, 1397.47725us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 4714.50703us, 88.80614us, 4522.47725us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 1589.50703us, 88.80614us, 4371.86859us, 43.86901us, 3231.73965us, 49.20958us, 9325.79042us, 49.20958us, 7839.50703us, 88.80614us, 1397.47725us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 4714.50703us, 88.80614us, 4522.47725us, 49.20958us, 9325.79042us, 49.20958us, 2925.18176us, 43.86901us, 6356.73965us, 49.20958us, 1204.25422us, 113.44909us, 271.80372us, 88.80614us, 7647.47725us, 49.20958us, 9325.79042us, 49.20958us, 7839.50703us, 88.80614us, 1397.47725us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 4714.50703us, 88.80614us, 4371.86859us, 43.86901us, 106.73965us, 49.20958us, 9325.79042us, 49.20958us, 9325.79042us, 49.20958us, 1589.50703us, 88.80614us, 7647.47725us, 49.20958us, 9325.79042us, 49.20958us, 7839.50703us, 88.80614us, 1397.47725us, 49.20958us, 9325.79042us, 49.20958us, 6050.18176us, 43.86901us, 3231.73965us, 49.20958us, 4714.50703us, 88.80614us, 4522.47725us, 49.20958us, 9325.79042us]
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW11.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW11.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SMRIU2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SMRIU2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SMRIU2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SMRIU2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SMRIU2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_SMRIU2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW52.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW52.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW52.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW52.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW52.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW52.eth[1].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 46190.9287us
*.SW52.eth[1].macLayer.*.queue.transmissionGate[*].durations = [93.68895us, 4686.39411us, 16.17431us, 57703.74263us]
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW52.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW52.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW11.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW11.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW11.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW11.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW11.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW11.eth[2].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 1825.43861us
*.SW11.eth[2].macLayer.*.queue.transmissionGate[*].durations = [49.20958us, 3459.62148us, 61.7218us, 5804.44714us, 49.20958us, 6584.62148us, 61.7218us, 2679.44714us, 49.20958us, 9325.79042us, 49.20958us, 334.62148us, 61.7218us, 95.44131us, 64.0869us, 8769.91893us]
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW11.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW11.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW11.eth[4].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW11.eth[4].macLayer.outboundClassifier.reverseOrder = true
*.SW11.eth[4].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW11.eth[4].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW11.eth[4].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW11.eth[4].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 46565.68456us
*.SW11.eth[4].macLayer.*.queue.transmissionGate[*].durations = [93.68895us, 62406.31105us]
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW11.eth[4].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW11.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW11.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW11.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW11.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW11.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW11.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 25000.0us
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW11.eth[3].macLayer.*.queue.transmissionGate[0].offset = 25000.0us - 7719.01027us
*.SW11.eth[3].macLayer.*.queue.transmissionGate[*].durations = [18.08165us, 24981.91835us]
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW11.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW11.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW11.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW11.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW11.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW11.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW11.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW11.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 17930.70021us
*.SW11.eth[0].macLayer.*.queue.transmissionGate[*].durations = [101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 3725.95598us, 72.8607us, 8660.06349us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us, 101.8524us, 12458.88017us, 64.0869us, 24875.18053us]
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW11.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW11.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[2].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 30619.60661us
*.SW31.eth[2].macLayer.*.queue.transmissionGate[*].durations = [64.0869us, 16600.69308us, 20.52306us, 20814.69696us, 64.0869us, 37435.9131us, 64.0869us, 37435.9131us, 64.0869us, 29100.69308us, 20.52306us, 8314.69696us, 64.0869us, 37435.9131us, 64.0869us, 37435.9131us, 64.0869us, 37435.9131us, 64.0869us, 4100.69308us, 20.52306us, 33314.69696us, 64.0869us, 37435.9131us, 64.0869us, 37435.9131us]
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW31.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW8.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW8.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW8.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW8.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW8.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 62500.0us
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW8.eth[3].macLayer.*.queue.transmissionGate[0].offset = 62500.0us - 46284.61766us
*.SW8.eth[3].macLayer.*.queue.transmissionGate[*].durations = [93.68896us, 62406.31104us]
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW8.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW8.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW8.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW8.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW8.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW8.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW8.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW8.eth[1].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 26289.32103us
*.SW8.eth[1].macLayer.*.queue.transmissionGate[*].durations = [20.14159us, 37479.85841us]
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW8.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW8.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[6].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[6].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[6].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[6].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[6].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 25000.0us
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[6].macLayer.*.queue.transmissionGate[0].offset = 25000.0us - 13016.76752us
*.SW32.eth[6].macLayer.*.queue.transmissionGate[*].durations = [88.80614us, 24911.19386us]
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[6].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[6].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SBAND1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SBAND1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SBAND1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SBAND1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SBAND1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_SBAND1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SBAND1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW22.eth[5].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW22.eth[5].macLayer.outboundClassifier.reverseOrder = true
*.SW22.eth[5].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW22.eth[5].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW22.eth[5].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW22.eth[5].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 26329.60423us
*.SW22.eth[5].macLayer.*.queue.transmissionGate[*].durations = [20.14159us, 37479.85841us]
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW22.eth[5].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW22.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW41.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW41.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW41.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW41.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW41.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW41.eth[0].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 30683.69352us
*.SW41.eth[0].macLayer.*.queue.transmissionGate[*].durations = [64.0869us, 37435.9131us]
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW41.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW41.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW6.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW6.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW6.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW6.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW6.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW6.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW6.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW6.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW6.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW6.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW6.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW6.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 125000.0us
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW6.eth[2].macLayer.*.queue.transmissionGate[0].offset = 125000.0us - 7664.76527us
*.SW6.eth[2].macLayer.*.queue.transmissionGate[*].durations = [18.08166us, 24981.91834us, 18.08166us, 14581.01659us, 20.52306us, 10380.37869us, 18.08166us, 24981.91834us, 18.08166us, 24981.91834us, 18.08166us, 24981.91834us]
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW6.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW6.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_DU1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_DU1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_DU1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_DU1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_DU1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_DU1.eth[0].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 1776.22901us
*.ES_DU1.eth[0].macLayer.*.queue.transmissionGate[*].durations = [49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 9325.79041us, 49.20959us, 476.90726us, 64.08691us, 8784.79624us]
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_DU1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_DU1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW51.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW51.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW51.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW51.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW51.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW51.eth[3].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 26269.17942us
*.SW51.eth[3].macLayer.*.queue.transmissionGate[*].durations = [20.1416us, 37479.8584us]
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW51.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW51.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_CM2CA.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_CM2CA.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_CM2CA.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_CM2CA.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_CM2CA.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 125000.0us
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_CM2CA.eth[0].macLayer.*.queue.transmissionGate[0].offset = 125000.0us - 47202.29431us
*.ES_CM2CA.eth[0].macLayer.*.queue.transmissionGate[*].durations = [20.52306us, 124979.47694us]
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_CM2CA.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_CM2CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_CMRIU2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_CMRIU2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_CMRIU2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_CMRIU2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_CMRIU2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_CMRIU2.eth[0].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 15390.00863us
*.ES_CMRIU2.eth[0].macLayer.*.queue.transmissionGate[*].durations = [19.30236us, 37480.69764us]
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_CMRIU2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_CMRIU2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_CM1CB.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_CM1CB.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_CM1CB.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_CM1CB.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_CM1CB.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 9375.0us
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_CM1CB.eth[0].macLayer.*.queue.transmissionGate[0].offset = 9375.0us - 0.0us
*.ES_CM1CB.eth[0].macLayer.*.queue.transmissionGate[*].durations = [121.61254us, 9253.38746us]
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_CM1CB.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_CM1CB.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW51.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW51.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW51.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW51.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW51.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW51.eth[1].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 86.82251us
*.SW51.eth[1].macLayer.*.queue.transmissionGate[*].durations = [86.8225us, 14913.1775us, 86.8225us, 2349.64553us, 101.85241us, 8644.03647us, 20.1416us, 3797.50149us, 86.8225us, 14913.1775us, 86.8225us, 9849.64553us, 101.85241us, 4961.67956us, 86.8225us, 3595.53441us, 20.1416us, 11297.50149us, 86.8225us, 14913.1775us, 86.8225us, 2349.64553us, 101.85241us, 8644.03647us, 20.1416us, 3797.50149us, 86.8225us, 14913.1775us, 86.8225us, 9849.64553us, 101.85241us, 4961.67956us, 86.8225us, 926.89607us, 47.07336us, 2621.56498us, 20.1416us, 11297.50149us, 86.8225us, 14913.1775us, 86.8225us, 2349.64553us, 101.85241us, 8644.03647us, 20.1416us, 3797.50149us, 86.8225us, 14913.1775us, 86.8225us, 9849.64553us, 101.85241us, 4961.67956us, 86.8225us, 3595.53441us, 20.1416us, 11297.50149us, 86.8225us, 1845.4648us, 57.14415us, 13010.56855us, 86.8225us, 2349.64553us, 101.85241us, 8644.03647us, 20.1416us, 3797.50149us, 86.8225us, 14913.1775us, 86.8225us, 9849.64553us, 101.85241us, 4961.67956us, 86.8225us, 3595.53441us, 20.1416us, 11297.50149us, 86.8225us, 14913.1775us, 86.8225us, 2349.64553us, 101.85241us, 5975.39813us, 47.07336us, 2621.56498us, 20.1416us, 3797.50149us, 86.8225us, 14913.1775us, 86.8225us, 9849.64553us, 101.85241us, 4961.67956us, 86.8225us, 3595.53441us, 20.1416us, 11297.50149us]
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW51.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW51.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_CM1CA.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_CM1CA.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_CM1CA.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_CM1CA.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_CM1CA.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_CM1CA.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_CM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_DU3.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_DU3.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_DU3.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_DU3.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_DU3.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 125000.0us
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_DU3.eth[0].macLayer.*.queue.transmissionGate[0].offset = 125000.0us - 5272.54787us
*.ES_DU3.eth[0].macLayer.*.queue.transmissionGate[*].durations = [61.72179us, 7416.0794us, 88.80615us, 4933.39266us, 61.72179us, 12438.27821us, 61.72179us, 7416.0794us, 88.80615us, 4416.80573us, 43.869us, 472.71793us, 61.72179us, 12438.27821us, 61.72179us, 7416.0794us, 88.80615us, 4933.39266us, 61.72179us, 12438.27821us, 61.72179us, 7416.0794us, 88.80615us, 4933.39266us, 61.72179us, 11921.69128us, 43.869us, 472.71793us, 61.72179us, 7416.0794us, 88.80615us, 4933.39266us, 61.72179us, 12438.27821us]
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_DU3.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_DU3.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_STARTR2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_STARTR2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_STARTR2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_STARTR2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_STARTR2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_STARTR2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_STARTR2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW31.eth[5].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW31.eth[5].macLayer.outboundClassifier.reverseOrder = true
*.SW31.eth[5].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW31.eth[5].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW31.eth[5].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 37500.0us
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW31.eth[5].macLayer.*.queue.transmissionGate[0].offset = 37500.0us - 15447.91573us
*.SW31.eth[5].macLayer.*.queue.transmissionGate[*].durations = [19.30236us, 37480.69764us]
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW31.eth[5].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW31.eth[5].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[4].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[4].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[4].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[4].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[4].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[4].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 58940.59993us
*.SW32.eth[4].macLayer.*.queue.transmissionGate[*].durations = [74.38659us, 74925.61341us, 74.38659us, 74925.61341us, 74.38659us, 28665.81408us, 113.44909us, 46146.35024us, 74.38659us, 74925.61341us, 74.38659us, 74925.61341us]
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[4].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[4].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_RCM1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_RCM1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_RCM1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_RCM1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_RCM1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_RCM1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_RCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_GPS2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_GPS2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_GPS2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_GPS2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_GPS2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_GPS2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_GPS2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW8.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW8.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW8.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW8.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW8.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW8.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 134185.64787us
*.SW8.eth[0].macLayer.*.queue.transmissionGate[*].durations = [72.86071us, 374927.13929us]
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW8.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW8.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW8.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW8.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW8.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW8.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW8.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW8.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW8.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_FCM2.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_FCM2.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_FCM2.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_FCM2.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_FCM2.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_FCM2.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 134039.92643us
*.ES_FCM2.eth[0].macLayer.*.queue.transmissionGate[*].durations = [72.86071us, 374927.13929us]
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_FCM2.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_FCM2.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_SM1CA.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_SM1CA.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_SM1CA.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_SM1CA.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_SM1CA.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_SM1CA.eth[0].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 0.0us
*.ES_SM1CA.eth[0].macLayer.*.queue.transmissionGate[*].durations = [86.8225us, 14913.1775us, 86.8225us, 2334.61562us, 101.85241us, 8725.74729us, 20.14159us, 3730.82059us, 86.8225us, 14913.1775us, 86.8225us, 9834.61562us, 101.85241us, 4976.70947us, 86.8225us, 3662.21532us, 20.14159us, 11230.82059us, 86.8225us, 14913.1775us, 86.8225us, 2334.61562us, 101.85241us, 8725.74729us, 20.14159us, 3730.82059us, 86.8225us, 14913.1775us, 86.8225us, 9834.61562us, 101.85241us, 4976.70947us, 86.8225us, 966.64522us, 47.07335us, 2648.49675us, 20.14159us, 11230.82059us, 86.8225us, 14913.1775us, 86.8225us, 2334.61562us, 101.85241us, 8725.74729us, 20.14159us, 3730.82059us, 86.8225us, 14913.1775us, 86.8225us, 9834.61562us, 101.85241us, 4976.70947us, 86.8225us, 3662.21532us, 20.14159us, 11230.82059us, 86.8225us, 14913.1775us, 86.8225us, 2334.61562us, 101.85241us, 8725.74729us, 20.14159us, 3730.82059us, 86.8225us, 14913.1775us, 86.8225us, 9834.61562us, 101.85241us, 4976.70947us, 86.8225us, 3662.21532us, 20.14159us, 11230.82059us, 86.8225us, 14913.1775us, 86.8225us, 2334.61562us, 101.85241us, 6030.17719us, 47.07335us, 2648.49675us, 20.14159us, 3730.82059us, 86.8225us, 14913.1775us, 86.8225us, 9834.61562us, 101.85241us, 4976.70947us, 86.8225us, 3662.21532us, 20.14159us, 11230.82059us]
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.ES_SM1CA.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_SM1CA.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW52.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW52.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.SW52.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW52.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW52.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW52.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW52.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW52.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW52.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW52.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW52.eth[3].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW52.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.SW52.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW52.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW41.eth[2].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW41.eth[2].macLayer.outboundClassifier.reverseOrder = true
*.SW41.eth[2].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW41.eth[2].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW41.eth[2].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW41.eth[2].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 121.61255us
*.SW41.eth[2].macLayer.*.queue.transmissionGate[*].durations = [121.61254us, 4269.82191us, 86.8225us, 4896.74305us, 121.61254us, 8006.91787us, 101.8524us, 1144.61719us, 121.61254us, 519.82191us, 86.8225us, 6689.45153us, 20.14159us, 1937.14993us, 121.61254us, 6144.82191us, 86.8225us, 3021.74305us, 121.61254us, 9253.38746us, 121.61254us, 2394.82191us, 86.8225us, 5525.27346us, 101.8524us, 1144.61719us, 121.61254us, 7296.09594us, 20.14159us, 703.58438us, 86.8225us, 1146.74305us, 121.61254us, 9253.38746us, 121.61254us, 4269.82191us, 86.8225us, 4896.74305us, 121.61254us, 8006.91787us, 101.8524us, 1144.61719us, 121.61254us, 519.82191us, 86.8225us, 6689.45153us, 20.14159us, 1937.14993us, 121.61254us, 6144.82191us, 86.8225us, 3021.74305us, 121.61254us, 9253.38746us, 121.61254us, 2394.82191us, 86.8225us, 5525.27346us, 101.8524us, 1144.61719us, 121.61254us, 4654.38936us, 47.07335us, 2594.63323us, 20.14159us, 703.58438us, 86.8225us, 1146.74305us, 121.61254us, 9253.38746us, 121.61254us, 4269.82191us, 86.8225us, 4896.74305us, 121.61254us, 8006.91787us, 101.8524us, 1144.61719us, 121.61254us, 519.82191us, 86.8225us, 6689.45153us, 20.14159us, 1937.14993us, 121.61254us, 6144.82191us, 86.8225us, 3021.74305us, 121.61254us, 9253.38746us, 121.61254us, 2394.82191us, 86.8225us, 5525.27346us, 101.8524us, 1144.61719us, 121.61254us, 7296.09594us, 20.14159us, 703.58438us, 86.8225us, 1146.74305us, 121.61254us, 9253.38746us, 121.61254us, 4269.82191us, 86.8225us, 4896.74305us, 121.61254us, 8006.91787us, 101.8524us, 1144.61719us, 121.61254us, 519.82191us, 86.8225us, 6689.45153us, 20.14159us, 1937.14993us, 121.61254us, 6144.82191us, 86.8225us, 3021.74305us, 121.61254us, 9253.38746us, 121.61254us, 2394.82191us, 86.8225us, 5525.27346us, 101.8524us, 1144.61719us, 121.61254us, 7296.09594us, 20.14159us, 703.58438us, 86.8225us, 1146.74305us, 121.61254us, 9253.38746us, 121.61254us, 4269.82191us, 86.8225us, 4896.74305us, 121.61254us, 8006.91787us, 101.8524us, 1144.61719us, 121.61254us, 519.82191us, 86.8225us, 4047.74495us, 47.07335us, 2594.63323us, 20.14159us, 1937.14993us, 121.61254us, 6144.82191us, 86.8225us, 3021.74305us, 121.61254us, 9253.38746us, 121.61254us, 2394.82191us, 86.8225us, 5525.27346us, 101.8524us, 1144.61719us, 121.61254us, 7296.09594us, 20.14159us, 703.58438us, 86.8225us, 1146.74305us, 121.61254us, 9253.38746us]
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW41.eth[2].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW41.eth[2].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.SW32.eth[1].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW32.eth[1].macLayer.outboundClassifier.reverseOrder = true
*.SW32.eth[1].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.SW32.eth[1].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.SW32.eth[1].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 375000.0us
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.SW32.eth[1].macLayer.*.queue.transmissionGate[0].offset = 375000.0us - 9614.52415us
*.SW32.eth[1].macLayer.*.queue.transmissionGate[*].durations = [62.17956us, 16632.75892us, 20.14159us, 20048.70241us, 93.68895us, 4531.36482us, 16.1743us, 12789.92793us, 20.14159us, 8284.91993us, 62.17956us, 29132.75892us, 20.14159us, 7548.70241us, 93.68895us, 4531.36482us, 16.1743us, 20593.25245us, 72.86071us, 428.87629us, 62.17956us, 4132.75892us, 20.14159us, 32548.70241us, 93.68895us, 4531.36482us, 16.1743us, 289.92793us, 20.14159us, 20784.91993us, 62.17956us, 16632.75892us, 20.14159us, 20048.70241us, 93.68895us, 4531.36482us, 16.1743us, 12789.92793us, 20.14159us, 8284.91993us, 62.17956us, 29132.75892us, 20.14159us, 7548.70241us, 93.68895us, 4531.36482us, 16.1743us, 21094.98945us, 62.17956us, 4132.75892us, 20.14159us, 32548.70241us, 93.68895us, 4531.36482us, 16.1743us, 289.92793us, 20.14159us, 20784.91993us]
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW32.eth[1].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true # exclusive gating
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.SW32.eth[1].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B


*.ES_FCM1.eth[0].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.ES_FCM1.eth[0].macLayer.outboundClassifier.reverseOrder = true
*.ES_FCM1.eth[0].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                                    [0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                                    [0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                                    [0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic
                                                      
# disable maclayer queue in egress ports of TSNDevices or TSNSwitches
*.ES_FCM1.eth[0].macLayer.queue.typename = ""
# enable sub-maclayer queue
*.ES_FCM1.eth[0].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper"
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].hyperperiod = 0.0us
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].operIdleSlope = 750Mbps
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].creditMode = "returnToZero" # "standard", "frozen" or "returnToZero"
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = true # AVB gate always open because no GCL exists
*.ES_FCM1.eth[0].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true  # ST gate always open because no GCL exists
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s
*.ES_FCM1.eth[0].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 124B + 42B




*.ES_SM2CA.app[0].typename = "UdpSourceApp"
*.ES_SM2CA.app[0].display-name = "Flow1"
*.ES_SM2CA.app[0].io.destAddress = "ES_STARTR2"
*.ES_SM2CA.app[0].io.destPort = 1000
*.ES_SM2CA.app[0].source.packetNameFormat = "%M->ES_STARTR2:TT-%c"
*.ES_SM2CA.app[0].source.packetLength = 145B - 58B
*.ES_SM2CA.app[0].source.productionInterval = 62500us
*.ES_STARTR2.app[0].typename = "UdpSinkApp"
*.ES_STARTR2.app[0].display-name = "Sink of Flow1"
*.ES_STARTR2.app[0].io.localPort = 1000

*.ES_SM2CA.app[0].source.initialProductionOffset = 50954.83745us

            
*.ES_CM2CA.app[0].typename = "UdpSourceApp"
*.ES_CM2CA.app[0].display-name = "Flow2"
*.ES_CM2CA.app[0].io.destAddress = "ES_SMRIU1"
*.ES_CM2CA.app[0].io.destPort = 1000
*.ES_CM2CA.app[0].source.packetNameFormat = "%M->ES_SMRIU1:TT-%c"
*.ES_CM2CA.app[0].source.packetLength = 202B - 58B
*.ES_CM2CA.app[0].source.productionInterval = 125000us
*.ES_SMRIU1.app[0].typename = "UdpSinkApp"
*.ES_SMRIU1.app[0].display-name = "Sink of Flow2"
*.ES_SMRIU1.app[0].io.localPort = 1000

*.ES_CM2CA.app[0].source.initialProductionOffset = 47202.29431us

            
*.ES_DU3.app[0].typename = "UdpSourceApp"
*.ES_DU3.app[0].display-name = "Flow3"
*.ES_DU3.app[0].io.destAddress = "ES_CM2CB"
*.ES_DU3.app[0].io.destPort = 1000
*.ES_DU3.app[0].source.packetNameFormat = "%M->ES_CM2CB:TT-%c"
*.ES_DU3.app[0].source.packetLength = 508B - 58B
*.ES_DU3.app[0].source.productionInterval = 62500us
*.ES_CM2CB.app[0].typename = "UdpSinkApp"
*.ES_CM2CB.app[0].display-name = "Sink of Flow3"
*.ES_CM2CB.app[0].io.localPort = 1000

*.ES_DU3.app[0].source.initialProductionOffset = 42255.96094us

            
*.ES_SM1CA.app[0].typename = "UdpSourceApp"
*.ES_SM1CA.app[0].display-name = "Flow4"
*.ES_SM1CA.app[0].io.destAddress = "ES_CM1CB"
*.ES_SM1CA.app[0].io.destPort = 1000
*.ES_SM1CA.app[0].source.packetNameFormat = "%M->ES_CM1CB:TT-%c"
*.ES_SM1CA.app[0].source.packetLength = 550B - 58B
*.ES_SM1CA.app[0].source.productionInterval = 187500us
*.ES_CM1CB.app[0].typename = "UdpSinkApp"
*.ES_CM1CB.app[0].display-name = "Sink of Flow4"
*.ES_CM1CB.app[0].io.localPort = 1000

*.ES_SM1CA.app[0].source.initialProductionOffset = 136053.46772us

            
*.ES_SM1CA.app[1].typename = "UdpSourceApp"
*.ES_SM1CA.app[1].display-name = "Flow5"
*.ES_SM1CA.app[1].io.destAddress = "ES_SM1CB"
*.ES_SM1CA.app[1].io.destPort = 1000
*.ES_SM1CA.app[1].source.packetNameFormat = "%M->ES_SM1CB:TT-%c"
*.ES_SM1CA.app[1].source.packetLength = 1268B - 58B
*.ES_SM1CA.app[1].source.productionInterval = 37500us
*.ES_SM1CB.app[0].typename = "UdpSinkApp"
*.ES_SM1CB.app[0].display-name = "Sink of Flow5"
*.ES_SM1CB.app[0].io.localPort = 1000

*.ES_SM1CA.app[1].source.initialProductionOffset = 17421.43812us

            
*.ES_DU3.app[1].typename = "UdpSourceApp"
*.ES_DU3.app[1].display-name = "Flow6"
*.ES_DU3.app[1].io.destAddress = "ES_STARTR1"
*.ES_DU3.app[1].io.destPort = 1000
*.ES_DU3.app[1].source.packetNameFormat = "%M->ES_STARTR1:TT-%c"
*.ES_DU3.app[1].source.packetLength = 742B - 58B
*.ES_DU3.app[1].source.productionInterval = 12500us
*.ES_STARTR1.app[0].typename = "UdpSinkApp"
*.ES_STARTR1.app[0].display-name = "Sink of Flow6"
*.ES_STARTR1.app[0].io.localPort = 1000

*.ES_DU3.app[1].source.initialProductionOffset = 5272.54787us

            
*.ES_FCM2.app[0].typename = "UdpSourceApp"
*.ES_FCM2.app[0].display-name = "Flow7"
*.ES_FCM2.app[0].io.destAddress = "ES_DU3"
*.ES_FCM2.app[0].io.destPort = 1000
*.ES_FCM2.app[0].source.packetNameFormat = "%M->ES_DU3:TT-%c"
*.ES_FCM2.app[0].source.packetLength = 888B - 58B
*.ES_FCM2.app[0].source.productionInterval = 375000us
*.ES_DU3.app[2].typename = "UdpSinkApp"
*.ES_DU3.app[2].display-name = "Sink of Flow7"
*.ES_DU3.app[2].io.localPort = 1000

*.ES_FCM2.app[0].source.initialProductionOffset = 134039.92643us

            
*.ES_SMRIU1.app[1].typename = "UdpSourceApp"
*.ES_SMRIU1.app[1].display-name = "Flow8"
*.ES_SMRIU1.app[1].io.destAddress = "ES_DU2"
*.ES_SMRIU1.app[1].io.destPort = 1000
*.ES_SMRIU1.app[1].source.packetNameFormat = "%M->ES_DU2:TT-%c"
*.ES_SMRIU1.app[1].source.packetLength = 170B - 58B
*.ES_SMRIU1.app[1].source.productionInterval = 25000us
*.ES_DU2.app[0].typename = "UdpSinkApp"
*.ES_DU2.app[0].display-name = "Sink of Flow8"
*.ES_DU2.app[0].io.localPort = 1000

*.ES_SMRIU1.app[1].source.initialProductionOffset = 0.0us

            
*.ES_DU1.app[0].typename = "UdpSourceApp"
*.ES_DU1.app[0].display-name = "Flow9"
*.ES_DU1.app[0].io.destAddress = "ES_SM1CB"
*.ES_DU1.app[0].io.destPort = 1001
*.ES_DU1.app[0].source.packetNameFormat = "%M->ES_SM1CB:TT-%c"
*.ES_DU1.app[0].source.packetLength = 773B - 58B
*.ES_DU1.app[0].source.productionInterval = 37500us
*.ES_SM1CB.app[1].typename = "UdpSinkApp"
*.ES_SM1CB.app[1].display-name = "Sink of Flow9"
*.ES_SM1CB.app[1].io.localPort = 1001

*.ES_DU1.app[0].source.initialProductionOffset = 30427.34586us

            
*.ES_CM1CB.app[1].typename = "UdpSourceApp"
*.ES_CM1CB.app[1].display-name = "Flow10"
*.ES_CM1CB.app[1].io.destAddress = "ES_SBAND1"
*.ES_CM1CB.app[1].io.destPort = 1000
*.ES_CM1CB.app[1].source.packetNameFormat = "%M->ES_SBAND1:TT-%c"
*.ES_CM1CB.app[1].source.packetLength = 1527B - 58B
*.ES_CM1CB.app[1].source.productionInterval = 9375us
*.ES_SBAND1.app[0].typename = "UdpSinkApp"
*.ES_SBAND1.app[0].display-name = "Sink of Flow10"
*.ES_SBAND1.app[0].io.localPort = 1000

*.ES_CM1CB.app[1].source.initialProductionOffset = 0.0us

            
*.ES_BFCU.app[0].typename = "UdpSourceApp"
*.ES_BFCU.app[0].display-name = "Flow12"
*.ES_BFCU.app[0].io.destAddress = "ES_GPS1"
*.ES_BFCU.app[0].io.destPort = 1000
*.ES_BFCU.app[0].source.packetNameFormat = "%M->ES_GPS1:TT-%c"
*.ES_BFCU.app[0].source.packetLength = 1234B - 58B
*.ES_BFCU.app[0].source.productionInterval = 375000us
*.ES_GPS1.app[0].typename = "UdpSinkApp"
*.ES_GPS1.app[0].display-name = "Sink of Flow12"
*.ES_GPS1.app[0].io.localPort = 1000

*.ES_BFCU.app[0].source.initialProductionOffset = 286556.32191us

            
*.ES_DU1.app[1].typename = "UdpSourceApp"
*.ES_DU1.app[1].display-name = "Flow13"
*.ES_DU1.app[1].io.destAddress = "ES_FCM1"
*.ES_DU1.app[1].io.destPort = 1000
*.ES_DU1.app[1].source.packetNameFormat = "%M->ES_FCM1:TT-%c"
*.ES_DU1.app[1].source.packetLength = 578B - 58B
*.ES_DU1.app[1].source.productionInterval = 9375us
*.ES_FCM1.app[0].typename = "UdpSinkApp"
*.ES_FCM1.app[0].display-name = "Sink of Flow13"
*.ES_FCM1.app[0].io.localPort = 1000

*.ES_DU1.app[1].source.initialProductionOffset = 1776.22901us

            
*.ES_SM1CA.app[2].typename = "UdpSourceApp"
*.ES_SM1CA.app[2].display-name = "Flow14"
*.ES_SM1CA.app[2].io.destAddress = "ES_MIMU2"
*.ES_SM1CA.app[2].io.destPort = 1000
*.ES_SM1CA.app[2].source.packetNameFormat = "%M->ES_MIMU2:TT-%c"
*.ES_SM1CA.app[2].source.packetLength = 1071B - 58B
*.ES_SM1CA.app[2].source.productionInterval = 15000us
*.ES_MIMU2.app[0].typename = "UdpSinkApp"
*.ES_MIMU2.app[0].display-name = "Sink of Flow14"
*.ES_MIMU2.app[0].io.localPort = 1000

*.ES_SM1CA.app[2].source.initialProductionOffset = 0.0us

            
*.ES_LCM2.app[0].typename = "UdpSourceApp"
*.ES_LCM2.app[0].display-name = "Flow15"
*.ES_LCM2.app[0].io.destAddress = "ES_MIMU1"
*.ES_LCM2.app[0].io.destPort = 1000
*.ES_LCM2.app[0].source.packetNameFormat = "%M->ES_MIMU1:TT-%c"
*.ES_LCM2.app[0].source.packetLength = 748B - 58B
*.ES_LCM2.app[0].source.productionInterval = 62500us
*.ES_MIMU1.app[0].typename = "UdpSinkApp"
*.ES_MIMU1.app[0].display-name = "Sink of Flow15"
*.ES_MIMU1.app[0].io.localPort = 1000

*.ES_LCM2.app[0].source.initialProductionOffset = 9552.34459us

            
*.ES_STARTR1.app[1].typename = "UdpSourceApp"
*.ES_STARTR1.app[1].display-name = "Flow16"
*.ES_STARTR1.app[1].io.destAddress = "ES_LCM2"
*.ES_STARTR1.app[1].io.destPort = 1000
*.ES_STARTR1.app[1].source.packetNameFormat = "%M->ES_LCM2:TT-%c"
*.ES_STARTR1.app[1].source.packetLength = 908B - 58B
*.ES_STARTR1.app[1].source.productionInterval = 75000us
*.ES_LCM2.app[1].typename = "UdpSinkApp"
*.ES_LCM2.app[1].display-name = "Sink of Flow16"
*.ES_LCM2.app[1].io.localPort = 1000

*.ES_STARTR1.app[1].source.initialProductionOffset = 58717.44014us

            
*.ES_CMRIU2.app[0].typename = "UdpSourceApp"
*.ES_CMRIU2.app[0].display-name = "Flow17"
*.ES_CMRIU2.app[0].io.destAddress = "ES_RCM1"
*.ES_CMRIU2.app[0].io.destPort = 1000
*.ES_CMRIU2.app[0].source.packetNameFormat = "%M->ES_RCM1:TT-%c"
*.ES_CMRIU2.app[0].source.packetLength = 186B - 58B
*.ES_CMRIU2.app[0].source.productionInterval = 37500us
*.ES_RCM1.app[0].typename = "UdpSinkApp"
*.ES_RCM1.app[0].display-name = "Sink of Flow17"
*.ES_RCM1.app[0].io.localPort = 1000

*.ES_CMRIU2.app[0].source.initialProductionOffset = 15390.00863us

            
*.ES_DU2.app[1].typename = "UdpSourceApp"
*.ES_DU2.app[1].display-name = "Flow18"
*.ES_DU2.app[1].io.destAddress = "ES_BFCU"
*.ES_DU2.app[1].io.destPort = 1000
*.ES_DU2.app[1].source.packetNameFormat = "%M->ES_BFCU:TT-%c"
*.ES_DU2.app[1].source.packetLength = 1420B - 58B
*.ES_DU2.app[1].source.productionInterval = 375000us
*.ES_BFCU.app[1].typename = "UdpSinkApp"
*.ES_BFCU.app[1].display-name = "Sink of Flow18"
*.ES_BFCU.app[1].io.localPort = 1000

*.ES_DU2.app[1].source.initialProductionOffset = 237340.45331us

            
*.ES_SM1CA.app[3].typename = "UdpSourceApp"
*.ES_SM1CA.app[3].display-name = "Flow19"
*.ES_SM1CA.app[3].io.destAddress = "ES_CMRIU2"
*.ES_SM1CA.app[3].io.destPort = 1000
*.ES_SM1CA.app[3].source.packetNameFormat = "%M->ES_CMRIU2:TT-%c"
*.ES_SM1CA.app[3].source.packetLength = 197B - 58B
*.ES_SM1CA.app[3].source.productionInterval = 37500us
*.ES_CMRIU2.app[1].typename = "UdpSinkApp"
*.ES_CMRIU2.app[1].display-name = "Sink of Flow19"
*.ES_CMRIU2.app[1].io.localPort = 1000

*.ES_SM1CA.app[3].source.initialProductionOffset = 26249.03782us

            
*.ES_DU3.app[3].typename = "UdpSourceApp"
*.ES_DU3.app[3].display-name = "Flow20"
*.ES_DU3.app[3].io.destAddress = "ES_RCM2"
*.ES_DU3.app[3].io.destPort = 1000
*.ES_DU3.app[3].source.packetNameFormat = "%M->ES_RCM2:TT-%c"
*.ES_DU3.app[3].source.packetLength = 1097B - 58B
*.ES_DU3.app[3].source.productionInterval = 25000us
*.ES_RCM2.app[0].typename = "UdpSinkApp"
*.ES_RCM2.app[0].display-name = "Sink of Flow20"
*.ES_RCM2.app[0].io.localPort = 1000

*.ES_DU3.app[3].source.initialProductionOffset = 12750.34906us

            
*.ES_DU2.app[2].typename = "UdpSourceApp"
*.ES_DU2.app[2].display-name = "Flow21"
*.ES_DU2.app[2].io.destAddress = "ES_CM1CB"
*.ES_DU2.app[2].io.destPort = 1001
*.ES_DU2.app[2].source.packetNameFormat = "%M->ES_CM1CB:AVB_A-%c"
*.ES_DU2.app[2].source.packetLength = 246B - 58B
*.ES_DU2.app[2].source.productionInterval = 125us
*.ES_CM1CB.app[2].typename = "UdpSinkApp"
*.ES_CM1CB.app[2].display-name = "Sink of Flow21"
*.ES_CM1CB.app[2].io.localPort = 1001

*.ES_DU2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM1CA.app[0].typename = "UdpSourceApp"
*.ES_CM1CA.app[0].display-name = "Flow22"
*.ES_CM1CA.app[0].io.destAddress = "ES_CMRIU2"
*.ES_CM1CA.app[0].io.destPort = 1001
*.ES_CM1CA.app[0].source.packetNameFormat = "%M->ES_CMRIU2:AVB_A-%c"
*.ES_CM1CA.app[0].source.packetLength = 103B - 58B
*.ES_CM1CA.app[0].source.productionInterval = 125us
*.ES_CMRIU2.app[2].typename = "UdpSinkApp"
*.ES_CMRIU2.app[2].display-name = "Sink of Flow22"
*.ES_CMRIU2.app[2].io.localPort = 1001

*.ES_CM1CA.app[0].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM1.app[1].typename = "UdpSourceApp"
*.ES_RCM1.app[1].display-name = "Flow23"
*.ES_RCM1.app[1].io.destAddress = "ES_FCM2"
*.ES_RCM1.app[1].io.destPort = 1000
*.ES_RCM1.app[1].source.packetNameFormat = "%M->ES_FCM2:AVB_A-%c"
*.ES_RCM1.app[1].source.packetLength = 1053B - 58B
*.ES_RCM1.app[1].source.productionInterval = 187us
*.ES_FCM2.app[1].typename = "UdpSinkApp"
*.ES_FCM2.app[1].display-name = "Sink of Flow23"
*.ES_FCM2.app[1].io.localPort = 1000

*.ES_RCM1.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU2.app[3].typename = "UdpSourceApp"
*.ES_DU2.app[3].display-name = "Flow24"
*.ES_DU2.app[3].io.destAddress = "ES_SMRIU2"
*.ES_DU2.app[3].io.destPort = 1000
*.ES_DU2.app[3].source.packetNameFormat = "%M->ES_SMRIU2:AVB_A-%c"
*.ES_DU2.app[3].source.packetLength = 355B - 58B
*.ES_DU2.app[3].source.productionInterval = 2500us
*.ES_SMRIU2.app[0].typename = "UdpSinkApp"
*.ES_SMRIU2.app[0].display-name = "Sink of Flow24"
*.ES_SMRIU2.app[0].io.localPort = 1000

*.ES_DU2.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[1].typename = "UdpSourceApp"
*.ES_CM2CB.app[1].display-name = "Flow25"
*.ES_CM2CB.app[1].io.destAddress = "ES_DU2"
*.ES_CM2CB.app[1].io.destPort = 1001
*.ES_CM2CB.app[1].source.packetNameFormat = "%M->ES_DU2:AVB_A-%c"
*.ES_CM2CB.app[1].source.packetLength = 1173B - 58B
*.ES_CM2CB.app[1].source.productionInterval = 937us
*.ES_DU2.app[4].typename = "UdpSinkApp"
*.ES_DU2.app[4].display-name = "Sink of Flow25"
*.ES_DU2.app[4].io.localPort = 1001

*.ES_CM2CB.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS1.app[1].typename = "UdpSourceApp"
*.ES_GPS1.app[1].display-name = "Flow26"
*.ES_GPS1.app[1].io.destAddress = "ES_FCM1"
*.ES_GPS1.app[1].io.destPort = 1001
*.ES_GPS1.app[1].source.packetNameFormat = "%M->ES_FCM1:AVB_A-%c"
*.ES_GPS1.app[1].source.packetLength = 1463B - 58B
*.ES_GPS1.app[1].source.productionInterval = 937us
*.ES_FCM1.app[1].typename = "UdpSinkApp"
*.ES_FCM1.app[1].display-name = "Sink of Flow26"
*.ES_FCM1.app[1].io.localPort = 1001

*.ES_GPS1.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[1].typename = "UdpSourceApp"
*.ES_SM2CA.app[1].display-name = "Flow27"
*.ES_SM2CA.app[1].io.destAddress = "ES_CM1CA"
*.ES_SM2CA.app[1].io.destPort = 1000
*.ES_SM2CA.app[1].source.packetNameFormat = "%M->ES_CM1CA:AVB_A-%c"
*.ES_SM2CA.app[1].source.packetLength = 87B - 58B
*.ES_SM2CA.app[1].source.productionInterval = 750us
*.ES_CM1CA.app[1].typename = "UdpSinkApp"
*.ES_CM1CA.app[1].display-name = "Sink of Flow27"
*.ES_CM1CA.app[1].io.localPort = 1000

*.ES_SM2CA.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND1.app[1].typename = "UdpSourceApp"
*.ES_SBAND1.app[1].display-name = "Flow28"
*.ES_SBAND1.app[1].io.destAddress = "ES_RCM2"
*.ES_SBAND1.app[1].io.destPort = 1001
*.ES_SBAND1.app[1].source.packetNameFormat = "%M->ES_RCM2:AVB_A-%c"
*.ES_SBAND1.app[1].source.packetLength = 913B - 58B
*.ES_SBAND1.app[1].source.productionInterval = 750us
*.ES_RCM2.app[1].typename = "UdpSinkApp"
*.ES_RCM2.app[1].display-name = "Sink of Flow28"
*.ES_RCM2.app[1].io.localPort = 1001

*.ES_SBAND1.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM1.app[2].typename = "UdpSourceApp"
*.ES_RCM1.app[2].display-name = "Flow29"
*.ES_RCM1.app[2].io.destAddress = "ES_BFCU"
*.ES_RCM1.app[2].io.destPort = 1001
*.ES_RCM1.app[2].source.packetNameFormat = "%M->ES_BFCU:AVB_A-%c"
*.ES_RCM1.app[2].source.packetLength = 233B - 58B
*.ES_RCM1.app[2].source.productionInterval = 375us
*.ES_BFCU.app[2].typename = "UdpSinkApp"
*.ES_BFCU.app[2].display-name = "Sink of Flow29"
*.ES_BFCU.app[2].io.localPort = 1001

*.ES_RCM1.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR2.app[1].typename = "UdpSourceApp"
*.ES_STARTR2.app[1].display-name = "Flow30"
*.ES_STARTR2.app[1].io.destAddress = "ES_RCM1"
*.ES_STARTR2.app[1].io.destPort = 1001
*.ES_STARTR2.app[1].source.packetNameFormat = "%M->ES_RCM1:AVB_A-%c"
*.ES_STARTR2.app[1].source.packetLength = 1027B - 58B
*.ES_STARTR2.app[1].source.productionInterval = 750us
*.ES_RCM1.app[3].typename = "UdpSinkApp"
*.ES_RCM1.app[3].display-name = "Sink of Flow30"
*.ES_RCM1.app[3].io.localPort = 1001

*.ES_STARTR2.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU2.app[5].typename = "UdpSourceApp"
*.ES_DU2.app[5].display-name = "Flow31"
*.ES_DU2.app[5].io.destAddress = "ES_DU3"
*.ES_DU2.app[5].io.destPort = 1001
*.ES_DU2.app[5].source.packetNameFormat = "%M->ES_DU3:AVB_A-%c"
*.ES_DU2.app[5].source.packetLength = 654B - 58B
*.ES_DU2.app[5].source.productionInterval = 375us
*.ES_DU3.app[4].typename = "UdpSinkApp"
*.ES_DU3.app[4].display-name = "Sink of Flow31"
*.ES_DU3.app[4].io.localPort = 1001

*.ES_DU2.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU2.app[3].typename = "UdpSourceApp"
*.ES_CMRIU2.app[3].display-name = "Flow32"
*.ES_CMRIU2.app[3].io.destAddress = "ES_MIMU3"
*.ES_CMRIU2.app[3].io.destPort = 1000
*.ES_CMRIU2.app[3].source.packetNameFormat = "%M->ES_MIMU3:AVB_A-%c"
*.ES_CMRIU2.app[3].source.packetLength = 131B - 58B
*.ES_CMRIU2.app[3].source.productionInterval = 375us
*.ES_MIMU3.app[0].typename = "UdpSinkApp"
*.ES_MIMU3.app[0].display-name = "Sink of Flow32"
*.ES_MIMU3.app[0].io.localPort = 1000

*.ES_CMRIU2.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CA.app[4].typename = "UdpSourceApp"
*.ES_SM1CA.app[4].display-name = "Flow33"
*.ES_SM1CA.app[4].io.destAddress = "ES_SM2CA"
*.ES_SM1CA.app[4].io.destPort = 1000
*.ES_SM1CA.app[4].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_SM1CA.app[4].source.packetLength = 682B - 58B
*.ES_SM1CA.app[4].source.productionInterval = 375us
*.ES_SM2CA.app[2].typename = "UdpSinkApp"
*.ES_SM2CA.app[2].display-name = "Sink of Flow33"
*.ES_SM2CA.app[2].io.localPort = 1000

*.ES_SM1CA.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU2.app[1].typename = "UdpSourceApp"
*.ES_MIMU2.app[1].display-name = "Flow34"
*.ES_MIMU2.app[1].io.destAddress = "ES_SM2CA"
*.ES_MIMU2.app[1].io.destPort = 1001
*.ES_MIMU2.app[1].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_MIMU2.app[1].source.packetLength = 1259B - 58B
*.ES_MIMU2.app[1].source.productionInterval = 1250us
*.ES_SM2CA.app[3].typename = "UdpSinkApp"
*.ES_SM2CA.app[3].display-name = "Sink of Flow34"
*.ES_SM2CA.app[3].io.localPort = 1001

*.ES_MIMU2.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM1.app[4].typename = "UdpSourceApp"
*.ES_RCM1.app[4].display-name = "Flow35"
*.ES_RCM1.app[4].io.destAddress = "ES_SM1CB"
*.ES_RCM1.app[4].io.destPort = 1002
*.ES_RCM1.app[4].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_RCM1.app[4].source.packetLength = 498B - 58B
*.ES_RCM1.app[4].source.productionInterval = 937us
*.ES_SM1CB.app[2].typename = "UdpSinkApp"
*.ES_SM1CB.app[2].display-name = "Sink of Flow35"
*.ES_SM1CB.app[2].io.localPort = 1002

*.ES_RCM1.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND1.app[2].typename = "UdpSourceApp"
*.ES_SBAND1.app[2].display-name = "Flow36"
*.ES_SBAND1.app[2].io.destAddress = "ES_CMRIU2"
*.ES_SBAND1.app[2].io.destPort = 1002
*.ES_SBAND1.app[2].source.packetNameFormat = "%M->ES_CMRIU2:AVB_A-%c"
*.ES_SBAND1.app[2].source.packetLength = 595B - 58B
*.ES_SBAND1.app[2].source.productionInterval = 75us
*.ES_CMRIU2.app[4].typename = "UdpSinkApp"
*.ES_CMRIU2.app[4].display-name = "Sink of Flow36"
*.ES_CMRIU2.app[4].io.localPort = 1002

*.ES_SBAND1.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_LCM2.app[2].typename = "UdpSourceApp"
*.ES_LCM2.app[2].display-name = "Flow37"
*.ES_LCM2.app[2].io.destAddress = "ES_SBAND1"
*.ES_LCM2.app[2].io.destPort = 1001
*.ES_LCM2.app[2].source.packetNameFormat = "%M->ES_SBAND1:AVB_A-%c"
*.ES_LCM2.app[2].source.packetLength = 186B - 58B
*.ES_LCM2.app[2].source.productionInterval = 750us
*.ES_SBAND1.app[3].typename = "UdpSinkApp"
*.ES_SBAND1.app[3].display-name = "Sink of Flow37"
*.ES_SBAND1.app[3].io.localPort = 1001

*.ES_LCM2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[4].typename = "UdpSourceApp"
*.ES_SM2CA.app[4].display-name = "Flow38"
*.ES_SM2CA.app[4].io.destAddress = "ES_STARTR1"
*.ES_SM2CA.app[4].io.destPort = 1001
*.ES_SM2CA.app[4].source.packetNameFormat = "%M->ES_STARTR1:AVB_A-%c"
*.ES_SM2CA.app[4].source.packetLength = 744B - 58B
*.ES_SM2CA.app[4].source.productionInterval = 375us
*.ES_STARTR1.app[2].typename = "UdpSinkApp"
*.ES_STARTR1.app[2].display-name = "Sink of Flow38"
*.ES_STARTR1.app[2].io.localPort = 1001

*.ES_SM2CA.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU2.app[2].typename = "UdpSourceApp"
*.ES_MIMU2.app[2].display-name = "Flow39"
*.ES_MIMU2.app[2].io.destAddress = "ES_SBAND1"
*.ES_MIMU2.app[2].io.destPort = 1002
*.ES_MIMU2.app[2].source.packetNameFormat = "%M->ES_SBAND1:AVB_A-%c"
*.ES_MIMU2.app[2].source.packetLength = 295B - 58B
*.ES_MIMU2.app[2].source.productionInterval = 750us
*.ES_SBAND1.app[4].typename = "UdpSinkApp"
*.ES_SBAND1.app[4].display-name = "Sink of Flow39"
*.ES_SBAND1.app[4].io.localPort = 1002

*.ES_MIMU2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU2.app[6].typename = "UdpSourceApp"
*.ES_DU2.app[6].display-name = "Flow40"
*.ES_DU2.app[6].io.destAddress = "ES_STARTR2"
*.ES_DU2.app[6].io.destPort = 1001
*.ES_DU2.app[6].source.packetNameFormat = "%M->ES_STARTR2:AVB_A-%c"
*.ES_DU2.app[6].source.packetLength = 520B - 58B
*.ES_DU2.app[6].source.productionInterval = 187us
*.ES_STARTR2.app[2].typename = "UdpSinkApp"
*.ES_STARTR2.app[2].display-name = "Sink of Flow40"
*.ES_STARTR2.app[2].io.localPort = 1001

*.ES_DU2.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[5].typename = "UdpSourceApp"
*.ES_SM2CA.app[5].display-name = "Flow41"
*.ES_SM2CA.app[5].io.destAddress = "ES_SMRIU2"
*.ES_SM2CA.app[5].io.destPort = 1001
*.ES_SM2CA.app[5].source.packetNameFormat = "%M->ES_SMRIU2:AVB_A-%c"
*.ES_SM2CA.app[5].source.packetLength = 974B - 58B
*.ES_SM2CA.app[5].source.productionInterval = 75us
*.ES_SMRIU2.app[1].typename = "UdpSinkApp"
*.ES_SMRIU2.app[1].display-name = "Sink of Flow41"
*.ES_SMRIU2.app[1].io.localPort = 1001

*.ES_SM2CA.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_LCM1.app[0].typename = "UdpSourceApp"
*.ES_LCM1.app[0].display-name = "Flow42"
*.ES_LCM1.app[0].io.destAddress = "ES_SM2CA"
*.ES_LCM1.app[0].io.destPort = 1002
*.ES_LCM1.app[0].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_LCM1.app[0].source.packetLength = 526B - 58B
*.ES_LCM1.app[0].source.productionInterval = 750us
*.ES_SM2CA.app[6].typename = "UdpSinkApp"
*.ES_SM2CA.app[6].display-name = "Sink of Flow42"
*.ES_SM2CA.app[6].io.localPort = 1002

*.ES_LCM1.app[0].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[1].typename = "UdpSourceApp"
*.ES_MIMU3.app[1].display-name = "Flow43"
*.ES_MIMU3.app[1].io.destAddress = "ES_SM2CB"
*.ES_MIMU3.app[1].io.destPort = 1000
*.ES_MIMU3.app[1].source.packetNameFormat = "%M->ES_SM2CB:AVB_A-%c"
*.ES_MIMU3.app[1].source.packetLength = 354B - 58B
*.ES_MIMU3.app[1].source.productionInterval = 937us
*.ES_SM2CB.app[0].typename = "UdpSinkApp"
*.ES_SM2CB.app[0].display-name = "Sink of Flow43"
*.ES_SM2CB.app[0].io.localPort = 1000

*.ES_MIMU3.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[7].typename = "UdpSourceApp"
*.ES_SM2CA.app[7].display-name = "Flow44"
*.ES_SM2CA.app[7].io.destAddress = "ES_MIMU2"
*.ES_SM2CA.app[7].io.destPort = 1001
*.ES_SM2CA.app[7].source.packetNameFormat = "%M->ES_MIMU2:AVB_A-%c"
*.ES_SM2CA.app[7].source.packetLength = 438B - 58B
*.ES_SM2CA.app[7].source.productionInterval = 150us
*.ES_MIMU2.app[3].typename = "UdpSinkApp"
*.ES_MIMU2.app[3].display-name = "Sink of Flow44"
*.ES_MIMU2.app[3].io.localPort = 1001

*.ES_SM2CA.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CA.app[1].typename = "UdpSourceApp"
*.ES_CM2CA.app[1].display-name = "Flow45"
*.ES_CM2CA.app[1].io.destAddress = "ES_MIMU2"
*.ES_CM2CA.app[1].io.destPort = 1002
*.ES_CM2CA.app[1].source.packetNameFormat = "%M->ES_MIMU2:AVB_A-%c"
*.ES_CM2CA.app[1].source.packetLength = 560B - 58B
*.ES_CM2CA.app[1].source.productionInterval = 937us
*.ES_MIMU2.app[4].typename = "UdpSinkApp"
*.ES_MIMU2.app[4].display-name = "Sink of Flow45"
*.ES_MIMU2.app[4].io.localPort = 1002

*.ES_CM2CA.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[8].typename = "UdpSourceApp"
*.ES_SM2CA.app[8].display-name = "Flow46"
*.ES_SM2CA.app[8].io.destAddress = "ES_SM1CA"
*.ES_SM2CA.app[8].io.destPort = 1000
*.ES_SM2CA.app[8].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_SM2CA.app[8].source.packetLength = 310B - 58B
*.ES_SM2CA.app[8].source.productionInterval = 1250us
*.ES_SM1CA.app[5].typename = "UdpSinkApp"
*.ES_SM1CA.app[5].display-name = "Sink of Flow46"
*.ES_SM1CA.app[5].io.localPort = 1000

*.ES_SM2CA.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU2.app[7].typename = "UdpSourceApp"
*.ES_DU2.app[7].display-name = "Flow47"
*.ES_DU2.app[7].io.destAddress = "ES_MIMU3"
*.ES_DU2.app[7].io.destPort = 1001
*.ES_DU2.app[7].source.packetNameFormat = "%M->ES_MIMU3:AVB_A-%c"
*.ES_DU2.app[7].source.packetLength = 1260B - 58B
*.ES_DU2.app[7].source.productionInterval = 187us
*.ES_MIMU3.app[2].typename = "UdpSinkApp"
*.ES_MIMU3.app[2].display-name = "Sink of Flow47"
*.ES_MIMU3.app[2].io.localPort = 1001

*.ES_DU2.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR1.app[3].typename = "UdpSourceApp"
*.ES_STARTR1.app[3].display-name = "Flow48"
*.ES_STARTR1.app[3].io.destAddress = "ES_DU3"
*.ES_STARTR1.app[3].io.destPort = 1002
*.ES_STARTR1.app[3].source.packetNameFormat = "%M->ES_DU3:AVB_A-%c"
*.ES_STARTR1.app[3].source.packetLength = 502B - 58B
*.ES_STARTR1.app[3].source.productionInterval = 2500us
*.ES_DU3.app[5].typename = "UdpSinkApp"
*.ES_DU3.app[5].display-name = "Sink of Flow48"
*.ES_DU3.app[5].io.localPort = 1002

*.ES_STARTR1.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR1.app[4].typename = "UdpSourceApp"
*.ES_STARTR1.app[4].display-name = "Flow49"
*.ES_STARTR1.app[4].io.destAddress = "ES_DU1"
*.ES_STARTR1.app[4].io.destPort = 1000
*.ES_STARTR1.app[4].source.packetNameFormat = "%M->ES_DU1:AVB_A-%c"
*.ES_STARTR1.app[4].source.packetLength = 291B - 58B
*.ES_STARTR1.app[4].source.productionInterval = 93us
*.ES_DU1.app[2].typename = "UdpSinkApp"
*.ES_DU1.app[2].display-name = "Sink of Flow49"
*.ES_DU1.app[2].io.localPort = 1000

*.ES_STARTR1.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU3.app[6].typename = "UdpSourceApp"
*.ES_DU3.app[6].display-name = "Flow50"
*.ES_DU3.app[6].io.destAddress = "ES_STARTR2"
*.ES_DU3.app[6].io.destPort = 1002
*.ES_DU3.app[6].source.packetNameFormat = "%M->ES_STARTR2:AVB_A-%c"
*.ES_DU3.app[6].source.packetLength = 1468B - 58B
*.ES_DU3.app[6].source.productionInterval = 75us
*.ES_STARTR2.app[3].typename = "UdpSinkApp"
*.ES_STARTR2.app[3].display-name = "Sink of Flow50"
*.ES_STARTR2.app[3].io.localPort = 1002

*.ES_DU3.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[2].typename = "UdpSourceApp"
*.ES_CM2CB.app[2].display-name = "Flow51"
*.ES_CM2CB.app[2].io.destAddress = "ES_SM1CB"
*.ES_CM2CB.app[2].io.destPort = 1003
*.ES_CM2CB.app[2].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_CM2CB.app[2].source.packetLength = 1290B - 58B
*.ES_CM2CB.app[2].source.productionInterval = 1280us
*.ES_SM1CB.app[3].typename = "UdpSinkApp"
*.ES_SM1CB.app[3].display-name = "Sink of Flow51"
*.ES_SM1CB.app[3].io.localPort = 1003

*.ES_CM2CB.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CB.app[1].typename = "UdpSourceApp"
*.ES_SM2CB.app[1].display-name = "Flow52"
*.ES_SM2CB.app[1].io.destAddress = "ES_CM2CA"
*.ES_SM2CB.app[1].io.destPort = 1000
*.ES_SM2CB.app[1].source.packetNameFormat = "%M->ES_CM2CA:AVB_A-%c"
*.ES_SM2CB.app[1].source.packetLength = 1442B - 58B
*.ES_SM2CB.app[1].source.productionInterval = 160us
*.ES_CM2CA.app[2].typename = "UdpSinkApp"
*.ES_CM2CA.app[2].display-name = "Sink of Flow52"
*.ES_CM2CA.app[2].io.localPort = 1000

*.ES_SM2CB.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU1.app[0].typename = "UdpSourceApp"
*.ES_CMRIU1.app[0].display-name = "Flow53"
*.ES_CMRIU1.app[0].io.destAddress = "ES_LCM2"
*.ES_CMRIU1.app[0].io.destPort = 1001
*.ES_CMRIU1.app[0].source.packetNameFormat = "%M->ES_LCM2:AVB_A-%c"
*.ES_CMRIU1.app[0].source.packetLength = 526B - 58B
*.ES_CMRIU1.app[0].source.productionInterval = 160us
*.ES_LCM2.app[3].typename = "UdpSinkApp"
*.ES_LCM2.app[3].display-name = "Sink of Flow53"
*.ES_LCM2.app[3].io.localPort = 1001

*.ES_CMRIU1.app[0].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CA.app[6].typename = "UdpSourceApp"
*.ES_SM1CA.app[6].display-name = "Flow54"
*.ES_SM1CA.app[6].io.destAddress = "ES_FCM2"
*.ES_SM1CA.app[6].io.destPort = 1001
*.ES_SM1CA.app[6].source.packetNameFormat = "%M->ES_FCM2:AVB_A-%c"
*.ES_SM1CA.app[6].source.packetLength = 193B - 58B
*.ES_SM1CA.app[6].source.productionInterval = 320us
*.ES_FCM2.app[2].typename = "UdpSinkApp"
*.ES_FCM2.app[2].display-name = "Sink of Flow54"
*.ES_FCM2.app[2].io.localPort = 1001

*.ES_SM1CA.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CB.app[2].typename = "UdpSourceApp"
*.ES_SM2CB.app[2].display-name = "Flow55"
*.ES_SM2CB.app[2].io.destAddress = "ES_STARTR1"
*.ES_SM2CB.app[2].io.destPort = 1002
*.ES_SM2CB.app[2].source.packetNameFormat = "%M->ES_STARTR1:AVB_A-%c"
*.ES_SM2CB.app[2].source.packetLength = 1426B - 58B
*.ES_SM2CB.app[2].source.productionInterval = 320us
*.ES_STARTR1.app[5].typename = "UdpSinkApp"
*.ES_STARTR1.app[5].display-name = "Sink of Flow55"
*.ES_STARTR1.app[5].io.localPort = 1002

*.ES_SM2CB.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS1.app[2].typename = "UdpSourceApp"
*.ES_GPS1.app[2].display-name = "Flow56"
*.ES_GPS1.app[2].io.destAddress = "ES_SM1CA"
*.ES_GPS1.app[2].io.destPort = 1001
*.ES_GPS1.app[2].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_GPS1.app[2].source.packetLength = 156B - 58B
*.ES_GPS1.app[2].source.productionInterval = 1280us
*.ES_SM1CA.app[7].typename = "UdpSinkApp"
*.ES_SM1CA.app[7].display-name = "Sink of Flow56"
*.ES_SM1CA.app[7].io.localPort = 1001

*.ES_GPS1.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_BFCU.app[3].typename = "UdpSourceApp"
*.ES_BFCU.app[3].display-name = "Flow57"
*.ES_BFCU.app[3].io.destAddress = "ES_MIMU3"
*.ES_BFCU.app[3].io.destPort = 1002
*.ES_BFCU.app[3].source.packetNameFormat = "%M->ES_MIMU3:AVB_A-%c"
*.ES_BFCU.app[3].source.packetLength = 778B - 58B
*.ES_BFCU.app[3].source.productionInterval = 80us
*.ES_MIMU3.app[3].typename = "UdpSinkApp"
*.ES_MIMU3.app[3].display-name = "Sink of Flow57"
*.ES_MIMU3.app[3].io.localPort = 1002

*.ES_BFCU.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_FCM2.app[3].typename = "UdpSourceApp"
*.ES_FCM2.app[3].display-name = "Flow58"
*.ES_FCM2.app[3].io.destAddress = "ES_SM2CB"
*.ES_FCM2.app[3].io.destPort = 1001
*.ES_FCM2.app[3].source.packetNameFormat = "%M->ES_SM2CB:AVB_A-%c"
*.ES_FCM2.app[3].source.packetLength = 1336B - 58B
*.ES_FCM2.app[3].source.productionInterval = 160us
*.ES_SM2CB.app[3].typename = "UdpSinkApp"
*.ES_SM2CB.app[3].display-name = "Sink of Flow58"
*.ES_SM2CB.app[3].io.localPort = 1001

*.ES_FCM2.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU1.app[1].typename = "UdpSourceApp"
*.ES_CMRIU1.app[1].display-name = "Flow59"
*.ES_CMRIU1.app[1].io.destAddress = "ES_SM2CB"
*.ES_CMRIU1.app[1].io.destPort = 1002
*.ES_CMRIU1.app[1].source.packetNameFormat = "%M->ES_SM2CB:AVB_A-%c"
*.ES_CMRIU1.app[1].source.packetLength = 959B - 58B
*.ES_CMRIU1.app[1].source.productionInterval = 80us
*.ES_SM2CB.app[4].typename = "UdpSinkApp"
*.ES_SM2CB.app[4].display-name = "Sink of Flow59"
*.ES_SM2CB.app[4].io.localPort = 1002

*.ES_CMRIU1.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_LCM2.app[4].typename = "UdpSourceApp"
*.ES_LCM2.app[4].display-name = "Flow60"
*.ES_LCM2.app[4].io.destAddress = "ES_SMRIU1"
*.ES_LCM2.app[4].io.destPort = 1001
*.ES_LCM2.app[4].source.packetNameFormat = "%M->ES_SMRIU1:AVB_A-%c"
*.ES_LCM2.app[4].source.packetLength = 930B - 58B
*.ES_LCM2.app[4].source.productionInterval = 320us
*.ES_SMRIU1.app[2].typename = "UdpSinkApp"
*.ES_SMRIU1.app[2].display-name = "Sink of Flow60"
*.ES_SMRIU1.app[2].io.localPort = 1001

*.ES_LCM2.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[3].typename = "UdpSourceApp"
*.ES_CM2CB.app[3].display-name = "Flow61"
*.ES_CM2CB.app[3].io.destAddress = "ES_MIMU1"
*.ES_CM2CB.app[3].io.destPort = 1001
*.ES_CM2CB.app[3].source.packetNameFormat = "%M->ES_MIMU1:AVB_A-%c"
*.ES_CM2CB.app[3].source.packetLength = 1263B - 58B
*.ES_CM2CB.app[3].source.productionInterval = 640us
*.ES_MIMU1.app[1].typename = "UdpSinkApp"
*.ES_MIMU1.app[1].display-name = "Sink of Flow61"
*.ES_MIMU1.app[1].io.localPort = 1001

*.ES_CM2CB.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_FCM2.app[4].typename = "UdpSourceApp"
*.ES_FCM2.app[4].display-name = "Flow62"
*.ES_FCM2.app[4].io.destAddress = "ES_STARTR1"
*.ES_FCM2.app[4].io.destPort = 1003
*.ES_FCM2.app[4].source.packetNameFormat = "%M->ES_STARTR1:AVB_A-%c"
*.ES_FCM2.app[4].source.packetLength = 1079B - 58B
*.ES_FCM2.app[4].source.productionInterval = 1280us
*.ES_STARTR1.app[6].typename = "UdpSinkApp"
*.ES_STARTR1.app[6].display-name = "Sink of Flow62"
*.ES_STARTR1.app[6].io.localPort = 1003

*.ES_FCM2.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CB.app[5].typename = "UdpSourceApp"
*.ES_SM2CB.app[5].display-name = "Flow63"
*.ES_SM2CB.app[5].io.destAddress = "ES_STARTR2"
*.ES_SM2CB.app[5].io.destPort = 1003
*.ES_SM2CB.app[5].source.packetNameFormat = "%M->ES_STARTR2:AVB_A-%c"
*.ES_SM2CB.app[5].source.packetLength = 1015B - 58B
*.ES_SM2CB.app[5].source.productionInterval = 160us
*.ES_STARTR2.app[4].typename = "UdpSinkApp"
*.ES_STARTR2.app[4].display-name = "Sink of Flow63"
*.ES_STARTR2.app[4].io.localPort = 1003

*.ES_SM2CB.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[4].typename = "UdpSourceApp"
*.ES_MIMU3.app[4].display-name = "Flow64"
*.ES_MIMU3.app[4].io.destAddress = "ES_CMRIU1"
*.ES_MIMU3.app[4].io.destPort = 1000
*.ES_MIMU3.app[4].source.packetNameFormat = "%M->ES_CMRIU1:AVB_A-%c"
*.ES_MIMU3.app[4].source.packetLength = 185B - 58B
*.ES_MIMU3.app[4].source.productionInterval = 1280us
*.ES_CMRIU1.app[2].typename = "UdpSinkApp"
*.ES_CMRIU1.app[2].display-name = "Sink of Flow64"
*.ES_CMRIU1.app[2].io.localPort = 1000

*.ES_MIMU3.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[4].typename = "UdpSourceApp"
*.ES_CM2CB.app[4].display-name = "Flow65"
*.ES_CM2CB.app[4].io.destAddress = "ES_CM1CA"
*.ES_CM2CB.app[4].io.destPort = 1001
*.ES_CM2CB.app[4].source.packetNameFormat = "%M->ES_CM1CA:AVB_A-%c"
*.ES_CM2CB.app[4].source.packetLength = 118B - 58B
*.ES_CM2CB.app[4].source.productionInterval = 80us
*.ES_CM1CA.app[2].typename = "UdpSinkApp"
*.ES_CM1CA.app[2].display-name = "Sink of Flow65"
*.ES_CM1CA.app[2].io.localPort = 1001

*.ES_CM2CB.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU2.app[8].typename = "UdpSourceApp"
*.ES_DU2.app[8].display-name = "Flow66"
*.ES_DU2.app[8].io.destAddress = "ES_SM1CB"
*.ES_DU2.app[8].io.destPort = 1004
*.ES_DU2.app[8].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_DU2.app[8].source.packetLength = 1438B - 58B
*.ES_DU2.app[8].source.productionInterval = 640us
*.ES_SM1CB.app[4].typename = "UdpSinkApp"
*.ES_SM1CB.app[4].display-name = "Sink of Flow66"
*.ES_SM1CB.app[4].io.localPort = 1004

*.ES_DU2.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS2.app[0].typename = "UdpSourceApp"
*.ES_GPS2.app[0].display-name = "Flow67"
*.ES_GPS2.app[0].io.destAddress = "ES_SM2CB"
*.ES_GPS2.app[0].io.destPort = 1003
*.ES_GPS2.app[0].source.packetNameFormat = "%M->ES_SM2CB:AVB_A-%c"
*.ES_GPS2.app[0].source.packetLength = 737B - 58B
*.ES_GPS2.app[0].source.productionInterval = 320us
*.ES_SM2CB.app[6].typename = "UdpSinkApp"
*.ES_SM2CB.app[6].display-name = "Sink of Flow67"
*.ES_SM2CB.app[6].io.localPort = 1003

*.ES_GPS2.app[0].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CB.app[7].typename = "UdpSourceApp"
*.ES_SM2CB.app[7].display-name = "Flow68"
*.ES_SM2CB.app[7].io.destAddress = "ES_CM2CB"
*.ES_SM2CB.app[7].io.destPort = 1001
*.ES_SM2CB.app[7].source.packetNameFormat = "%M->ES_CM2CB:AVB_A-%c"
*.ES_SM2CB.app[7].source.packetLength = 331B - 58B
*.ES_SM2CB.app[7].source.productionInterval = 160us
*.ES_CM2CB.app[5].typename = "UdpSinkApp"
*.ES_CM2CB.app[5].display-name = "Sink of Flow68"
*.ES_CM2CB.app[5].io.localPort = 1001

*.ES_SM2CB.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU1.app[3].typename = "UdpSourceApp"
*.ES_DU1.app[3].display-name = "Flow69"
*.ES_DU1.app[3].io.destAddress = "ES_MIMU1"
*.ES_DU1.app[3].io.destPort = 1002
*.ES_DU1.app[3].source.packetNameFormat = "%M->ES_MIMU1:AVB_A-%c"
*.ES_DU1.app[3].source.packetLength = 89B - 58B
*.ES_DU1.app[3].source.productionInterval = 1280us
*.ES_MIMU1.app[2].typename = "UdpSinkApp"
*.ES_MIMU1.app[2].display-name = "Sink of Flow69"
*.ES_MIMU1.app[2].io.localPort = 1002

*.ES_DU1.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND2.app[0].typename = "UdpSourceApp"
*.ES_SBAND2.app[0].display-name = "Flow70"
*.ES_SBAND2.app[0].io.destAddress = "ES_DU1"
*.ES_SBAND2.app[0].io.destPort = 1001
*.ES_SBAND2.app[0].source.packetNameFormat = "%M->ES_DU1:AVB_A-%c"
*.ES_SBAND2.app[0].source.packetLength = 1213B - 58B
*.ES_SBAND2.app[0].source.productionInterval = 1280us
*.ES_DU1.app[4].typename = "UdpSinkApp"
*.ES_DU1.app[4].display-name = "Sink of Flow70"
*.ES_DU1.app[4].io.localPort = 1001

*.ES_SBAND2.app[0].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CB.app[5].typename = "UdpSourceApp"
*.ES_SM1CB.app[5].display-name = "Flow71"
*.ES_SM1CB.app[5].io.destAddress = "ES_SM2CA"
*.ES_SM1CB.app[5].io.destPort = 1003
*.ES_SM1CB.app[5].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_SM1CB.app[5].source.packetLength = 821B - 58B
*.ES_SM1CB.app[5].source.productionInterval = 160us
*.ES_SM2CA.app[9].typename = "UdpSinkApp"
*.ES_SM2CA.app[9].display-name = "Sink of Flow71"
*.ES_SM2CA.app[9].io.localPort = 1003

*.ES_SM1CB.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[10].typename = "UdpSourceApp"
*.ES_SM2CA.app[10].display-name = "Flow11"
*.ES_SM2CA.app[10].io.destAddress = "ES_LCM1"
*.ES_SM2CA.app[10].io.destPort = 1000
*.ES_SM2CA.app[10].source.packetNameFormat = "%M->ES_LCM1:TT-%c"
*.ES_SM2CA.app[10].source.packetLength = 1161B - 58B
*.ES_SM2CA.app[10].source.productionInterval = 62500us
*.ES_LCM1.app[1].typename = "UdpSinkApp"
*.ES_LCM1.app[1].display-name = "Sink of Flow11"
*.ES_LCM1.app[1].io.localPort = 1000

*.ES_SM2CA.app[10].source.initialProductionOffset = 46097.23973us

            
*.ES_CM1CA.app[3].typename = "UdpSourceApp"
*.ES_CM1CA.app[3].display-name = "Flow73"
*.ES_CM1CA.app[3].io.destAddress = "ES_LCM2"
*.ES_CM1CA.app[3].io.destPort = 1002
*.ES_CM1CA.app[3].source.packetNameFormat = "%M->ES_LCM2:AVB_A-%c"
*.ES_CM1CA.app[3].source.packetLength = 1438B - 58B
*.ES_CM1CA.app[3].source.productionInterval = 640us
*.ES_LCM2.app[5].typename = "UdpSinkApp"
*.ES_LCM2.app[5].display-name = "Sink of Flow73"
*.ES_LCM2.app[5].io.localPort = 1002

*.ES_CM1CA.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM2.app[2].typename = "UdpSourceApp"
*.ES_RCM2.app[2].display-name = "Flow74"
*.ES_RCM2.app[2].io.destAddress = "ES_SM2CB"
*.ES_RCM2.app[2].io.destPort = 1004
*.ES_RCM2.app[2].source.packetNameFormat = "%M->ES_SM2CB:AVB_A-%c"
*.ES_RCM2.app[2].source.packetLength = 891B - 58B
*.ES_RCM2.app[2].source.productionInterval = 640us
*.ES_SM2CB.app[8].typename = "UdpSinkApp"
*.ES_SM2CB.app[8].display-name = "Sink of Flow74"
*.ES_SM2CB.app[8].io.localPort = 1004

*.ES_RCM2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS1.app[3].typename = "UdpSourceApp"
*.ES_GPS1.app[3].display-name = "Flow75"
*.ES_GPS1.app[3].io.destAddress = "ES_SMRIU1"
*.ES_GPS1.app[3].io.destPort = 1002
*.ES_GPS1.app[3].source.packetNameFormat = "%M->ES_SMRIU1:AVB_A-%c"
*.ES_GPS1.app[3].source.packetLength = 981B - 58B
*.ES_GPS1.app[3].source.productionInterval = 640us
*.ES_SMRIU1.app[3].typename = "UdpSinkApp"
*.ES_SMRIU1.app[3].display-name = "Sink of Flow75"
*.ES_SMRIU1.app[3].io.localPort = 1002

*.ES_GPS1.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_FCM1.app[2].typename = "UdpSourceApp"
*.ES_FCM1.app[2].display-name = "Flow76"
*.ES_FCM1.app[2].io.destAddress = "ES_SM1CB"
*.ES_FCM1.app[2].io.destPort = 1005
*.ES_FCM1.app[2].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_FCM1.app[2].source.packetLength = 950B - 58B
*.ES_FCM1.app[2].source.productionInterval = 160us
*.ES_SM1CB.app[6].typename = "UdpSinkApp"
*.ES_SM1CB.app[6].display-name = "Sink of Flow76"
*.ES_SM1CB.app[6].io.localPort = 1005

*.ES_FCM1.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU1.app[3].typename = "UdpSourceApp"
*.ES_MIMU1.app[3].display-name = "Flow77"
*.ES_MIMU1.app[3].io.destAddress = "ES_CMRIU2"
*.ES_MIMU1.app[3].io.destPort = 1003
*.ES_MIMU1.app[3].source.packetNameFormat = "%M->ES_CMRIU2:AVB_A-%c"
*.ES_MIMU1.app[3].source.packetLength = 832B - 58B
*.ES_MIMU1.app[3].source.productionInterval = 160us
*.ES_CMRIU2.app[5].typename = "UdpSinkApp"
*.ES_CMRIU2.app[5].display-name = "Sink of Flow77"
*.ES_CMRIU2.app[5].io.localPort = 1003

*.ES_MIMU1.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU1.app[5].typename = "UdpSourceApp"
*.ES_DU1.app[5].display-name = "Flow78"
*.ES_DU1.app[5].io.destAddress = "ES_MIMU1"
*.ES_DU1.app[5].io.destPort = 1003
*.ES_DU1.app[5].source.packetNameFormat = "%M->ES_MIMU1:AVB_A-%c"
*.ES_DU1.app[5].source.packetLength = 185B - 58B
*.ES_DU1.app[5].source.productionInterval = 40us
*.ES_MIMU1.app[4].typename = "UdpSinkApp"
*.ES_MIMU1.app[4].display-name = "Sink of Flow78"
*.ES_MIMU1.app[4].io.localPort = 1003

*.ES_DU1.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU1.app[6].typename = "UdpSourceApp"
*.ES_DU1.app[6].display-name = "Flow79"
*.ES_DU1.app[6].io.destAddress = "ES_FCM2"
*.ES_DU1.app[6].io.destPort = 1002
*.ES_DU1.app[6].source.packetNameFormat = "%M->ES_FCM2:AVB_A-%c"
*.ES_DU1.app[6].source.packetLength = 592B - 58B
*.ES_DU1.app[6].source.productionInterval = 1280us
*.ES_FCM2.app[5].typename = "UdpSinkApp"
*.ES_FCM2.app[5].display-name = "Sink of Flow79"
*.ES_FCM2.app[5].io.localPort = 1002

*.ES_DU1.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[6].typename = "UdpSourceApp"
*.ES_CM2CB.app[6].display-name = "Flow80"
*.ES_CM2CB.app[6].io.destAddress = "ES_SM2CA"
*.ES_CM2CB.app[6].io.destPort = 1004
*.ES_CM2CB.app[6].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_CM2CB.app[6].source.packetLength = 932B - 58B
*.ES_CM2CB.app[6].source.productionInterval = 160us
*.ES_SM2CA.app[11].typename = "UdpSinkApp"
*.ES_SM2CA.app[11].display-name = "Sink of Flow80"
*.ES_SM2CA.app[11].io.localPort = 1004

*.ES_CM2CB.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU2.app[6].typename = "UdpSourceApp"
*.ES_CMRIU2.app[6].display-name = "Flow81"
*.ES_CMRIU2.app[6].io.destAddress = "ES_RCM2"
*.ES_CMRIU2.app[6].io.destPort = 1002
*.ES_CMRIU2.app[6].source.packetNameFormat = "%M->ES_RCM2:AVB_A-%c"
*.ES_CMRIU2.app[6].source.packetLength = 1431B - 58B
*.ES_CMRIU2.app[6].source.productionInterval = 320us
*.ES_RCM2.app[3].typename = "UdpSinkApp"
*.ES_RCM2.app[3].display-name = "Sink of Flow81"
*.ES_RCM2.app[3].io.localPort = 1002

*.ES_CMRIU2.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU2.app[5].typename = "UdpSourceApp"
*.ES_MIMU2.app[5].display-name = "Flow82"
*.ES_MIMU2.app[5].io.destAddress = "ES_CM1CB"
*.ES_MIMU2.app[5].io.destPort = 1002
*.ES_MIMU2.app[5].source.packetNameFormat = "%M->ES_CM1CB:AVB_A-%c"
*.ES_MIMU2.app[5].source.packetLength = 459B - 58B
*.ES_MIMU2.app[5].source.productionInterval = 1280us
*.ES_CM1CB.app[3].typename = "UdpSinkApp"
*.ES_CM1CB.app[3].display-name = "Sink of Flow82"
*.ES_CM1CB.app[3].io.localPort = 1002

*.ES_MIMU2.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM1.app[5].typename = "UdpSourceApp"
*.ES_RCM1.app[5].display-name = "Flow83"
*.ES_RCM1.app[5].io.destAddress = "ES_SBAND1"
*.ES_RCM1.app[5].io.destPort = 1003
*.ES_RCM1.app[5].source.packetNameFormat = "%M->ES_SBAND1:AVB_A-%c"
*.ES_RCM1.app[5].source.packetLength = 240B - 58B
*.ES_RCM1.app[5].source.productionInterval = 1280us
*.ES_SBAND1.app[5].typename = "UdpSinkApp"
*.ES_SBAND1.app[5].display-name = "Sink of Flow83"
*.ES_SBAND1.app[5].io.localPort = 1003

*.ES_RCM1.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU1.app[3].typename = "UdpSourceApp"
*.ES_CMRIU1.app[3].display-name = "Flow84"
*.ES_CMRIU1.app[3].io.destAddress = "ES_SM2CA"
*.ES_CMRIU1.app[3].io.destPort = 1005
*.ES_CMRIU1.app[3].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_CMRIU1.app[3].source.packetLength = 313B - 58B
*.ES_CMRIU1.app[3].source.productionInterval = 320us
*.ES_SM2CA.app[12].typename = "UdpSinkApp"
*.ES_SM2CA.app[12].display-name = "Sink of Flow84"
*.ES_SM2CA.app[12].io.localPort = 1005

*.ES_CMRIU1.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_LCM2.app[6].typename = "UdpSourceApp"
*.ES_LCM2.app[6].display-name = "Flow85"
*.ES_LCM2.app[6].io.destAddress = "ES_SM1CA"
*.ES_LCM2.app[6].io.destPort = 1002
*.ES_LCM2.app[6].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_LCM2.app[6].source.packetLength = 993B - 58B
*.ES_LCM2.app[6].source.productionInterval = 320us
*.ES_SM1CA.app[8].typename = "UdpSinkApp"
*.ES_SM1CA.app[8].display-name = "Sink of Flow85"
*.ES_SM1CA.app[8].io.localPort = 1002

*.ES_LCM2.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_FCM2.app[6].typename = "UdpSourceApp"
*.ES_FCM2.app[6].display-name = "Flow86"
*.ES_FCM2.app[6].io.destAddress = "ES_DU2"
*.ES_FCM2.app[6].io.destPort = 1002
*.ES_FCM2.app[6].source.packetNameFormat = "%M->ES_DU2:AVB_A-%c"
*.ES_FCM2.app[6].source.packetLength = 1277B - 58B
*.ES_FCM2.app[6].source.productionInterval = 640us
*.ES_DU2.app[9].typename = "UdpSinkApp"
*.ES_DU2.app[9].display-name = "Sink of Flow86"
*.ES_DU2.app[9].io.localPort = 1002

*.ES_FCM2.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[5].typename = "UdpSourceApp"
*.ES_MIMU3.app[5].display-name = "Flow87"
*.ES_MIMU3.app[5].io.destAddress = "ES_GPS1"
*.ES_MIMU3.app[5].io.destPort = 1001
*.ES_MIMU3.app[5].source.packetNameFormat = "%M->ES_GPS1:AVB_A-%c"
*.ES_MIMU3.app[5].source.packetLength = 1363B - 58B
*.ES_MIMU3.app[5].source.productionInterval = 40us
*.ES_GPS1.app[4].typename = "UdpSinkApp"
*.ES_GPS1.app[4].display-name = "Sink of Flow87"
*.ES_GPS1.app[4].io.localPort = 1001

*.ES_MIMU3.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND2.app[1].typename = "UdpSourceApp"
*.ES_SBAND2.app[1].display-name = "Flow88"
*.ES_SBAND2.app[1].io.destAddress = "ES_DU2"
*.ES_SBAND2.app[1].io.destPort = 1003
*.ES_SBAND2.app[1].source.packetNameFormat = "%M->ES_DU2:AVB_A-%c"
*.ES_SBAND2.app[1].source.packetLength = 577B - 58B
*.ES_SBAND2.app[1].source.productionInterval = 1280us
*.ES_DU2.app[10].typename = "UdpSinkApp"
*.ES_DU2.app[10].display-name = "Sink of Flow88"
*.ES_DU2.app[10].io.localPort = 1003

*.ES_SBAND2.app[1].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU2.app[7].typename = "UdpSourceApp"
*.ES_CMRIU2.app[7].display-name = "Flow89"
*.ES_CMRIU2.app[7].io.destAddress = "ES_CM1CA"
*.ES_CMRIU2.app[7].io.destPort = 1002
*.ES_CMRIU2.app[7].source.packetNameFormat = "%M->ES_CM1CA:AVB_A-%c"
*.ES_CMRIU2.app[7].source.packetLength = 867B - 58B
*.ES_CMRIU2.app[7].source.productionInterval = 160us
*.ES_CM1CA.app[4].typename = "UdpSinkApp"
*.ES_CM1CA.app[4].display-name = "Sink of Flow89"
*.ES_CM1CA.app[4].io.localPort = 1002

*.ES_CMRIU2.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CB.app[7].typename = "UdpSourceApp"
*.ES_SM1CB.app[7].display-name = "Flow90"
*.ES_SM1CB.app[7].io.destAddress = "ES_DU2"
*.ES_SM1CB.app[7].io.destPort = 1004
*.ES_SM1CB.app[7].source.packetNameFormat = "%M->ES_DU2:AVB_A-%c"
*.ES_SM1CB.app[7].source.packetLength = 1354B - 58B
*.ES_SM1CB.app[7].source.productionInterval = 80us
*.ES_DU2.app[11].typename = "UdpSinkApp"
*.ES_DU2.app[11].display-name = "Sink of Flow90"
*.ES_DU2.app[11].io.localPort = 1004

*.ES_SM1CB.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU2.app[8].typename = "UdpSourceApp"
*.ES_CMRIU2.app[8].display-name = "Flow91"
*.ES_CMRIU2.app[8].io.destAddress = "ES_SM2CA"
*.ES_CMRIU2.app[8].io.destPort = 1006
*.ES_CMRIU2.app[8].source.packetNameFormat = "%M->ES_SM2CA:AVB_A-%c"
*.ES_CMRIU2.app[8].source.packetLength = 547B - 58B
*.ES_CMRIU2.app[8].source.productionInterval = 640us
*.ES_SM2CA.app[13].typename = "UdpSinkApp"
*.ES_SM2CA.app[13].display-name = "Sink of Flow91"
*.ES_SM2CA.app[13].io.localPort = 1006

*.ES_CMRIU2.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[7].typename = "UdpSourceApp"
*.ES_CM2CB.app[7].display-name = "Flow92"
*.ES_CM2CB.app[7].io.destAddress = "ES_SM1CB"
*.ES_CM2CB.app[7].io.destPort = 1006
*.ES_CM2CB.app[7].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_CM2CB.app[7].source.packetLength = 619B - 58B
*.ES_CM2CB.app[7].source.productionInterval = 640us
*.ES_SM1CB.app[8].typename = "UdpSinkApp"
*.ES_SM1CB.app[8].display-name = "Sink of Flow92"
*.ES_SM1CB.app[8].io.localPort = 1006

*.ES_CM2CB.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR2.app[5].typename = "UdpSourceApp"
*.ES_STARTR2.app[5].display-name = "Flow93"
*.ES_STARTR2.app[5].io.destAddress = "ES_CM2CB"
*.ES_STARTR2.app[5].io.destPort = 1002
*.ES_STARTR2.app[5].source.packetNameFormat = "%M->ES_CM2CB:AVB_A-%c"
*.ES_STARTR2.app[5].source.packetLength = 350B - 58B
*.ES_STARTR2.app[5].source.productionInterval = 80us
*.ES_CM2CB.app[8].typename = "UdpSinkApp"
*.ES_CM2CB.app[8].display-name = "Sink of Flow93"
*.ES_CM2CB.app[8].io.localPort = 1002

*.ES_STARTR2.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[14].typename = "UdpSourceApp"
*.ES_SM2CA.app[14].display-name = "Flow94"
*.ES_SM2CA.app[14].io.destAddress = "ES_GPS2"
*.ES_SM2CA.app[14].io.destPort = 1000
*.ES_SM2CA.app[14].source.packetNameFormat = "%M->ES_GPS2:AVB_A-%c"
*.ES_SM2CA.app[14].source.packetLength = 376B - 58B
*.ES_SM2CA.app[14].source.productionInterval = 40us
*.ES_GPS2.app[1].typename = "UdpSinkApp"
*.ES_GPS2.app[1].display-name = "Sink of Flow94"
*.ES_GPS2.app[1].io.localPort = 1000

*.ES_SM2CA.app[14].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CA.app[3].typename = "UdpSourceApp"
*.ES_CM2CA.app[3].display-name = "Flow95"
*.ES_CM2CA.app[3].io.destAddress = "ES_LCM2"
*.ES_CM2CA.app[3].io.destPort = 1003
*.ES_CM2CA.app[3].source.packetNameFormat = "%M->ES_LCM2:AVB_A-%c"
*.ES_CM2CA.app[3].source.packetLength = 529B - 58B
*.ES_CM2CA.app[3].source.productionInterval = 160us
*.ES_LCM2.app[7].typename = "UdpSinkApp"
*.ES_LCM2.app[7].display-name = "Sink of Flow95"
*.ES_LCM2.app[7].io.localPort = 1003

*.ES_CM2CA.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR2.app[6].typename = "UdpSourceApp"
*.ES_STARTR2.app[6].display-name = "Flow96"
*.ES_STARTR2.app[6].io.destAddress = "ES_MIMU3"
*.ES_STARTR2.app[6].io.destPort = 1003
*.ES_STARTR2.app[6].source.packetNameFormat = "%M->ES_MIMU3:AVB_A-%c"
*.ES_STARTR2.app[6].source.packetLength = 487B - 58B
*.ES_STARTR2.app[6].source.productionInterval = 640us
*.ES_MIMU3.app[6].typename = "UdpSinkApp"
*.ES_MIMU3.app[6].display-name = "Sink of Flow96"
*.ES_MIMU3.app[6].io.localPort = 1003

*.ES_STARTR2.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CB.app[9].typename = "UdpSourceApp"
*.ES_SM1CB.app[9].display-name = "Flow97"
*.ES_SM1CB.app[9].io.destAddress = "ES_CM1CB"
*.ES_SM1CB.app[9].io.destPort = 1003
*.ES_SM1CB.app[9].source.packetNameFormat = "%M->ES_CM1CB:AVB_A-%c"
*.ES_SM1CB.app[9].source.packetLength = 523B - 58B
*.ES_SM1CB.app[9].source.productionInterval = 640us
*.ES_CM1CB.app[4].typename = "UdpSinkApp"
*.ES_CM1CB.app[4].display-name = "Sink of Flow97"
*.ES_CM1CB.app[4].io.localPort = 1003

*.ES_SM1CB.app[9].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_BFCU.app[4].typename = "UdpSourceApp"
*.ES_BFCU.app[4].display-name = "Flow98"
*.ES_BFCU.app[4].io.destAddress = "ES_CM2CB"
*.ES_BFCU.app[4].io.destPort = 1003
*.ES_BFCU.app[4].source.packetNameFormat = "%M->ES_CM2CB:AVB_A-%c"
*.ES_BFCU.app[4].source.packetLength = 759B - 58B
*.ES_BFCU.app[4].source.productionInterval = 640us
*.ES_CM2CB.app[9].typename = "UdpSinkApp"
*.ES_CM2CB.app[9].display-name = "Sink of Flow98"
*.ES_CM2CB.app[9].io.localPort = 1003

*.ES_BFCU.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_BFCU.app[5].typename = "UdpSourceApp"
*.ES_BFCU.app[5].display-name = "Flow99"
*.ES_BFCU.app[5].io.destAddress = "ES_CM1CB"
*.ES_BFCU.app[5].io.destPort = 1004
*.ES_BFCU.app[5].source.packetNameFormat = "%M->ES_CM1CB:AVB_A-%c"
*.ES_BFCU.app[5].source.packetLength = 1360B - 58B
*.ES_BFCU.app[5].source.productionInterval = 160us
*.ES_CM1CB.app[5].typename = "UdpSinkApp"
*.ES_CM1CB.app[5].display-name = "Sink of Flow99"
*.ES_CM1CB.app[5].io.localPort = 1004

*.ES_BFCU.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CA.app[9].typename = "UdpSourceApp"
*.ES_SM1CA.app[9].display-name = "Flow100"
*.ES_SM1CA.app[9].io.destAddress = "ES_SM1CB"
*.ES_SM1CA.app[9].io.destPort = 1007
*.ES_SM1CA.app[9].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_SM1CA.app[9].source.packetLength = 963B - 58B
*.ES_SM1CA.app[9].source.productionInterval = 640us
*.ES_SM1CB.app[10].typename = "UdpSinkApp"
*.ES_SM1CB.app[10].display-name = "Sink of Flow100"
*.ES_SM1CB.app[10].io.localPort = 1007

*.ES_SM1CA.app[9].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS2.app[2].typename = "UdpSourceApp"
*.ES_GPS2.app[2].display-name = "Flow101"
*.ES_GPS2.app[2].io.destAddress = "ES_CM1CA"
*.ES_GPS2.app[2].io.destPort = 1003
*.ES_GPS2.app[2].source.packetNameFormat = "%M->ES_CM1CA:AVB_A-%c"
*.ES_GPS2.app[2].source.packetLength = 501B - 58B
*.ES_GPS2.app[2].source.productionInterval = 1280us
*.ES_CM1CA.app[5].typename = "UdpSinkApp"
*.ES_CM1CA.app[5].display-name = "Sink of Flow101"
*.ES_CM1CA.app[5].io.localPort = 1003

*.ES_GPS2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM1.app[6].typename = "UdpSourceApp"
*.ES_RCM1.app[6].display-name = "Flow102"
*.ES_RCM1.app[6].io.destAddress = "ES_FCM1"
*.ES_RCM1.app[6].io.destPort = 1002
*.ES_RCM1.app[6].source.packetNameFormat = "%M->ES_FCM1:AVB_A-%c"
*.ES_RCM1.app[6].source.packetLength = 125B - 58B
*.ES_RCM1.app[6].source.productionInterval = 160us
*.ES_FCM1.app[3].typename = "UdpSinkApp"
*.ES_FCM1.app[3].display-name = "Sink of Flow102"
*.ES_FCM1.app[3].io.localPort = 1002

*.ES_RCM1.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU2.app[12].typename = "UdpSourceApp"
*.ES_DU2.app[12].display-name = "Flow103"
*.ES_DU2.app[12].io.destAddress = "ES_LCM2"
*.ES_DU2.app[12].io.destPort = 1004
*.ES_DU2.app[12].source.packetNameFormat = "%M->ES_LCM2:AVB_A-%c"
*.ES_DU2.app[12].source.packetLength = 1046B - 58B
*.ES_DU2.app[12].source.productionInterval = 640us
*.ES_LCM2.app[8].typename = "UdpSinkApp"
*.ES_LCM2.app[8].display-name = "Sink of Flow103"
*.ES_LCM2.app[8].io.localPort = 1004

*.ES_DU2.app[12].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU1.app[7].typename = "UdpSourceApp"
*.ES_DU1.app[7].display-name = "Flow104"
*.ES_DU1.app[7].io.destAddress = "ES_CMRIU1"
*.ES_DU1.app[7].io.destPort = 1001
*.ES_DU1.app[7].source.packetNameFormat = "%M->ES_CMRIU1:AVB_A-%c"
*.ES_DU1.app[7].source.packetLength = 1058B - 58B
*.ES_DU1.app[7].source.productionInterval = 160us
*.ES_CMRIU1.app[4].typename = "UdpSinkApp"
*.ES_CMRIU1.app[4].display-name = "Sink of Flow104"
*.ES_CMRIU1.app[4].io.localPort = 1001

*.ES_DU1.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[15].typename = "UdpSourceApp"
*.ES_SM2CA.app[15].display-name = "Flow105"
*.ES_SM2CA.app[15].io.destAddress = "ES_LCM1"
*.ES_SM2CA.app[15].io.destPort = 1001
*.ES_SM2CA.app[15].source.packetNameFormat = "%M->ES_LCM1:AVB_A-%c"
*.ES_SM2CA.app[15].source.packetLength = 440B - 58B
*.ES_SM2CA.app[15].source.productionInterval = 640us
*.ES_LCM1.app[2].typename = "UdpSinkApp"
*.ES_LCM1.app[2].display-name = "Sink of Flow105"
*.ES_LCM1.app[2].io.localPort = 1001

*.ES_SM2CA.app[15].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_RCM1.app[7].typename = "UdpSourceApp"
*.ES_RCM1.app[7].display-name = "Flow106"
*.ES_RCM1.app[7].io.destAddress = "ES_DU3"
*.ES_RCM1.app[7].io.destPort = 1003
*.ES_RCM1.app[7].source.packetNameFormat = "%M->ES_DU3:AVB_A-%c"
*.ES_RCM1.app[7].source.packetLength = 863B - 58B
*.ES_RCM1.app[7].source.productionInterval = 40us
*.ES_DU3.app[7].typename = "UdpSinkApp"
*.ES_DU3.app[7].display-name = "Sink of Flow106"
*.ES_DU3.app[7].io.localPort = 1003

*.ES_RCM1.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND1.app[6].typename = "UdpSourceApp"
*.ES_SBAND1.app[6].display-name = "Flow107"
*.ES_SBAND1.app[6].io.destAddress = "ES_SMRIU1"
*.ES_SBAND1.app[6].io.destPort = 1003
*.ES_SBAND1.app[6].source.packetNameFormat = "%M->ES_SMRIU1:AVB_A-%c"
*.ES_SBAND1.app[6].source.packetLength = 537B - 58B
*.ES_SBAND1.app[6].source.productionInterval = 160us
*.ES_SMRIU1.app[4].typename = "UdpSinkApp"
*.ES_SMRIU1.app[4].display-name = "Sink of Flow107"
*.ES_SMRIU1.app[4].io.localPort = 1003

*.ES_SBAND1.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU1.app[5].typename = "UdpSourceApp"
*.ES_CMRIU1.app[5].display-name = "Flow108"
*.ES_CMRIU1.app[5].io.destAddress = "ES_SBAND1"
*.ES_CMRIU1.app[5].io.destPort = 1004
*.ES_CMRIU1.app[5].source.packetNameFormat = "%M->ES_SBAND1:AVB_A-%c"
*.ES_CMRIU1.app[5].source.packetLength = 784B - 58B
*.ES_CMRIU1.app[5].source.productionInterval = 320us
*.ES_SBAND1.app[7].typename = "UdpSinkApp"
*.ES_SBAND1.app[7].display-name = "Sink of Flow108"
*.ES_SBAND1.app[7].io.localPort = 1004

*.ES_CMRIU1.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU3.app[8].typename = "UdpSourceApp"
*.ES_DU3.app[8].display-name = "Flow109"
*.ES_DU3.app[8].io.destAddress = "ES_SM1CA"
*.ES_DU3.app[8].io.destPort = 1003
*.ES_DU3.app[8].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_DU3.app[8].source.packetLength = 234B - 58B
*.ES_DU3.app[8].source.productionInterval = 80us
*.ES_SM1CA.app[10].typename = "UdpSinkApp"
*.ES_SM1CA.app[10].display-name = "Sink of Flow109"
*.ES_SM1CA.app[10].io.localPort = 1003

*.ES_DU3.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM2CA.app[16].typename = "UdpSourceApp"
*.ES_SM2CA.app[16].display-name = "Flow110"
*.ES_SM2CA.app[16].io.destAddress = "ES_LCM2"
*.ES_SM2CA.app[16].io.destPort = 1005
*.ES_SM2CA.app[16].source.packetNameFormat = "%M->ES_LCM2:AVB_A-%c"
*.ES_SM2CA.app[16].source.packetLength = 723B - 58B
*.ES_SM2CA.app[16].source.productionInterval = 80us
*.ES_LCM2.app[9].typename = "UdpSinkApp"
*.ES_LCM2.app[9].display-name = "Sink of Flow110"
*.ES_LCM2.app[9].io.localPort = 1005

*.ES_SM2CA.app[16].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND2.app[2].typename = "UdpSourceApp"
*.ES_SBAND2.app[2].display-name = "Flow111"
*.ES_SBAND2.app[2].io.destAddress = "ES_CM1CB"
*.ES_SBAND2.app[2].io.destPort = 1005
*.ES_SBAND2.app[2].source.packetNameFormat = "%M->ES_CM1CB:AVB_A-%c"
*.ES_SBAND2.app[2].source.packetLength = 1182B - 58B
*.ES_SBAND2.app[2].source.productionInterval = 640us
*.ES_CM1CB.app[6].typename = "UdpSinkApp"
*.ES_CM1CB.app[6].display-name = "Sink of Flow111"
*.ES_CM1CB.app[6].io.localPort = 1005

*.ES_SBAND2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS1.app[5].typename = "UdpSourceApp"
*.ES_GPS1.app[5].display-name = "Flow112"
*.ES_GPS1.app[5].io.destAddress = "ES_SBAND2"
*.ES_GPS1.app[5].io.destPort = 1000
*.ES_GPS1.app[5].source.packetNameFormat = "%M->ES_SBAND2:AVB_A-%c"
*.ES_GPS1.app[5].source.packetLength = 1200B - 58B
*.ES_GPS1.app[5].source.productionInterval = 640us
*.ES_SBAND2.app[3].typename = "UdpSinkApp"
*.ES_SBAND2.app[3].display-name = "Sink of Flow112"
*.ES_SBAND2.app[3].io.localPort = 1000

*.ES_GPS1.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR1.app[7].typename = "UdpSourceApp"
*.ES_STARTR1.app[7].display-name = "Flow113"
*.ES_STARTR1.app[7].io.destAddress = "ES_GPS2"
*.ES_STARTR1.app[7].io.destPort = 1001
*.ES_STARTR1.app[7].source.packetNameFormat = "%M->ES_GPS2:AVB_A-%c"
*.ES_STARTR1.app[7].source.packetLength = 751B - 58B
*.ES_STARTR1.app[7].source.productionInterval = 320us
*.ES_GPS2.app[3].typename = "UdpSinkApp"
*.ES_GPS2.app[3].display-name = "Sink of Flow113"
*.ES_GPS2.app[3].io.localPort = 1001

*.ES_STARTR1.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_GPS1.app[6].typename = "UdpSourceApp"
*.ES_GPS1.app[6].display-name = "Flow114"
*.ES_GPS1.app[6].io.destAddress = "ES_FCM1"
*.ES_GPS1.app[6].io.destPort = 1003
*.ES_GPS1.app[6].source.packetNameFormat = "%M->ES_FCM1:AVB_A-%c"
*.ES_GPS1.app[6].source.packetLength = 820B - 58B
*.ES_GPS1.app[6].source.productionInterval = 640us
*.ES_FCM1.app[4].typename = "UdpSinkApp"
*.ES_FCM1.app[4].display-name = "Sink of Flow114"
*.ES_FCM1.app[4].io.localPort = 1003

*.ES_GPS1.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM2CB.app[10].typename = "UdpSourceApp"
*.ES_CM2CB.app[10].display-name = "Flow115"
*.ES_CM2CB.app[10].io.destAddress = "ES_SM1CB"
*.ES_CM2CB.app[10].io.destPort = 1008
*.ES_CM2CB.app[10].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_CM2CB.app[10].source.packetLength = 147B - 58B
*.ES_CM2CB.app[10].source.productionInterval = 80us
*.ES_SM1CB.app[11].typename = "UdpSinkApp"
*.ES_SM1CB.app[11].display-name = "Sink of Flow115"
*.ES_SM1CB.app[11].io.localPort = 1008

*.ES_CM2CB.app[10].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CA.app[11].typename = "UdpSourceApp"
*.ES_SM1CA.app[11].display-name = "Flow116"
*.ES_SM1CA.app[11].io.destAddress = "ES_SMRIU1"
*.ES_SM1CA.app[11].io.destPort = 1004
*.ES_SM1CA.app[11].source.packetNameFormat = "%M->ES_SMRIU1:AVB_A-%c"
*.ES_SM1CA.app[11].source.packetLength = 757B - 58B
*.ES_SM1CA.app[11].source.productionInterval = 160us
*.ES_SMRIU1.app[5].typename = "UdpSinkApp"
*.ES_SMRIU1.app[5].display-name = "Sink of Flow116"
*.ES_SMRIU1.app[5].io.localPort = 1004

*.ES_SM1CA.app[11].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_BFCU.app[6].typename = "UdpSourceApp"
*.ES_BFCU.app[6].display-name = "Flow117"
*.ES_BFCU.app[6].io.destAddress = "ES_SM1CA"
*.ES_BFCU.app[6].io.destPort = 1004
*.ES_BFCU.app[6].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_BFCU.app[6].source.packetLength = 170B - 58B
*.ES_BFCU.app[6].source.productionInterval = 160us
*.ES_SM1CA.app[12].typename = "UdpSinkApp"
*.ES_SM1CA.app[12].display-name = "Sink of Flow117"
*.ES_SM1CA.app[12].io.localPort = 1004

*.ES_BFCU.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND2.app[4].typename = "UdpSourceApp"
*.ES_SBAND2.app[4].display-name = "Flow118"
*.ES_SBAND2.app[4].io.destAddress = "ES_SBAND1"
*.ES_SBAND2.app[4].io.destPort = 1005
*.ES_SBAND2.app[4].source.packetNameFormat = "%M->ES_SBAND1:AVB_A-%c"
*.ES_SBAND2.app[4].source.packetLength = 177B - 58B
*.ES_SBAND2.app[4].source.productionInterval = 1280us
*.ES_SBAND1.app[8].typename = "UdpSinkApp"
*.ES_SBAND1.app[8].display-name = "Sink of Flow118"
*.ES_SBAND1.app[8].io.localPort = 1005

*.ES_SBAND2.app[4].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SMRIU2.app[2].typename = "UdpSourceApp"
*.ES_SMRIU2.app[2].display-name = "Flow119"
*.ES_SMRIU2.app[2].io.destAddress = "ES_DU3"
*.ES_SMRIU2.app[2].io.destPort = 1004
*.ES_SMRIU2.app[2].source.packetNameFormat = "%M->ES_DU3:AVB_A-%c"
*.ES_SMRIU2.app[2].source.packetLength = 1293B - 58B
*.ES_SMRIU2.app[2].source.productionInterval = 1280us
*.ES_DU3.app[9].typename = "UdpSinkApp"
*.ES_DU3.app[9].display-name = "Sink of Flow119"
*.ES_DU3.app[9].io.localPort = 1004

*.ES_SMRIU2.app[2].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU1.app[5].typename = "UdpSourceApp"
*.ES_MIMU1.app[5].display-name = "Flow120"
*.ES_MIMU1.app[5].io.destAddress = "ES_CM2CB"
*.ES_MIMU1.app[5].io.destPort = 1004
*.ES_MIMU1.app[5].source.packetNameFormat = "%M->ES_CM2CB:AVB_A-%c"
*.ES_MIMU1.app[5].source.packetLength = 1154B - 58B
*.ES_MIMU1.app[5].source.productionInterval = 320us
*.ES_CM2CB.app[11].typename = "UdpSinkApp"
*.ES_CM2CB.app[11].display-name = "Sink of Flow120"
*.ES_CM2CB.app[11].io.localPort = 1004

*.ES_MIMU1.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[7].typename = "UdpSourceApp"
*.ES_MIMU3.app[7].display-name = "Flow121"
*.ES_MIMU3.app[7].io.destAddress = "ES_CM1CB"
*.ES_MIMU3.app[7].io.destPort = 1006
*.ES_MIMU3.app[7].source.packetNameFormat = "%M->ES_CM1CB:AVB_A-%c"
*.ES_MIMU3.app[7].source.packetLength = 1189B - 58B
*.ES_MIMU3.app[7].source.productionInterval = 1280us
*.ES_CM1CB.app[7].typename = "UdpSinkApp"
*.ES_CM1CB.app[7].display-name = "Sink of Flow121"
*.ES_CM1CB.app[7].io.localPort = 1006

*.ES_MIMU3.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CM1CB.app[8].typename = "UdpSourceApp"
*.ES_CM1CB.app[8].display-name = "Flow122"
*.ES_CM1CB.app[8].io.destAddress = "ES_GPS2"
*.ES_CM1CB.app[8].io.destPort = 1002
*.ES_CM1CB.app[8].source.packetNameFormat = "%M->ES_GPS2:AVB_A-%c"
*.ES_CM1CB.app[8].source.packetLength = 1040B - 58B
*.ES_CM1CB.app[8].source.productionInterval = 640us
*.ES_GPS2.app[4].typename = "UdpSinkApp"
*.ES_GPS2.app[4].display-name = "Sink of Flow122"
*.ES_GPS2.app[4].io.localPort = 1002

*.ES_CM1CB.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[8].typename = "UdpSourceApp"
*.ES_MIMU3.app[8].display-name = "Flow123"
*.ES_MIMU3.app[8].io.destAddress = "ES_SMRIU1"
*.ES_MIMU3.app[8].io.destPort = 1005
*.ES_MIMU3.app[8].source.packetNameFormat = "%M->ES_SMRIU1:AVB_A-%c"
*.ES_MIMU3.app[8].source.packetLength = 1499B - 58B
*.ES_MIMU3.app[8].source.productionInterval = 80us
*.ES_SMRIU1.app[6].typename = "UdpSinkApp"
*.ES_SMRIU1.app[6].display-name = "Sink of Flow123"
*.ES_SMRIU1.app[6].io.localPort = 1005

*.ES_MIMU3.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND2.app[5].typename = "UdpSourceApp"
*.ES_SBAND2.app[5].display-name = "Flow124"
*.ES_SBAND2.app[5].io.destAddress = "ES_GPS2"
*.ES_SBAND2.app[5].io.destPort = 1003
*.ES_SBAND2.app[5].source.packetNameFormat = "%M->ES_GPS2:AVB_A-%c"
*.ES_SBAND2.app[5].source.packetLength = 773B - 58B
*.ES_SBAND2.app[5].source.productionInterval = 1280us
*.ES_GPS2.app[5].typename = "UdpSinkApp"
*.ES_GPS2.app[5].display-name = "Sink of Flow124"
*.ES_GPS2.app[5].io.localPort = 1003

*.ES_SBAND2.app[5].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_LCM1.app[3].typename = "UdpSourceApp"
*.ES_LCM1.app[3].display-name = "Flow125"
*.ES_LCM1.app[3].io.destAddress = "ES_FCM1"
*.ES_LCM1.app[3].io.destPort = 1004
*.ES_LCM1.app[3].source.packetNameFormat = "%M->ES_FCM1:AVB_A-%c"
*.ES_LCM1.app[3].source.packetLength = 621B - 58B
*.ES_LCM1.app[3].source.productionInterval = 640us
*.ES_FCM1.app[5].typename = "UdpSinkApp"
*.ES_FCM1.app[5].display-name = "Sink of Flow125"
*.ES_FCM1.app[5].io.localPort = 1004

*.ES_LCM1.app[3].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU1.app[6].typename = "UdpSourceApp"
*.ES_MIMU1.app[6].display-name = "Flow126"
*.ES_MIMU1.app[6].io.destAddress = "ES_SMRIU2"
*.ES_MIMU1.app[6].io.destPort = 1002
*.ES_MIMU1.app[6].source.packetNameFormat = "%M->ES_SMRIU2:AVB_A-%c"
*.ES_MIMU1.app[6].source.packetLength = 780B - 58B
*.ES_MIMU1.app[6].source.productionInterval = 80us
*.ES_SMRIU2.app[3].typename = "UdpSinkApp"
*.ES_SMRIU2.app[3].display-name = "Sink of Flow126"
*.ES_SMRIU2.app[3].io.localPort = 1002

*.ES_MIMU1.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU1.app[7].typename = "UdpSourceApp"
*.ES_MIMU1.app[7].display-name = "Flow127"
*.ES_MIMU1.app[7].io.destAddress = "ES_DU1"
*.ES_MIMU1.app[7].io.destPort = 1002
*.ES_MIMU1.app[7].source.packetNameFormat = "%M->ES_DU1:AVB_A-%c"
*.ES_MIMU1.app[7].source.packetLength = 1062B - 58B
*.ES_MIMU1.app[7].source.productionInterval = 1280us
*.ES_DU1.app[8].typename = "UdpSinkApp"
*.ES_DU1.app[8].display-name = "Sink of Flow127"
*.ES_DU1.app[8].io.localPort = 1002

*.ES_MIMU1.app[7].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU1.app[6].typename = "UdpSourceApp"
*.ES_CMRIU1.app[6].display-name = "Flow128"
*.ES_CMRIU1.app[6].io.destAddress = "ES_FCM2"
*.ES_CMRIU1.app[6].io.destPort = 1003
*.ES_CMRIU1.app[6].source.packetNameFormat = "%M->ES_FCM2:AVB_A-%c"
*.ES_CMRIU1.app[6].source.packetLength = 462B - 58B
*.ES_CMRIU1.app[6].source.productionInterval = 640us
*.ES_FCM2.app[7].typename = "UdpSinkApp"
*.ES_FCM2.app[7].display-name = "Sink of Flow128"
*.ES_FCM2.app[7].io.localPort = 1003

*.ES_CMRIU1.app[6].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SBAND1.app[9].typename = "UdpSourceApp"
*.ES_SBAND1.app[9].display-name = "Flow129"
*.ES_SBAND1.app[9].io.destAddress = "ES_SM1CB"
*.ES_SBAND1.app[9].io.destPort = 1009
*.ES_SBAND1.app[9].source.packetNameFormat = "%M->ES_SM1CB:AVB_A-%c"
*.ES_SBAND1.app[9].source.packetLength = 1018B - 58B
*.ES_SBAND1.app[9].source.productionInterval = 80us
*.ES_SM1CB.app[12].typename = "UdpSinkApp"
*.ES_SM1CB.app[12].display-name = "Sink of Flow129"
*.ES_SM1CB.app[12].io.localPort = 1009

*.ES_SBAND1.app[9].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_DU3.app[10].typename = "UdpSourceApp"
*.ES_DU3.app[10].display-name = "Flow130"
*.ES_DU3.app[10].io.destAddress = "ES_CM2CB"
*.ES_DU3.app[10].io.destPort = 1005
*.ES_DU3.app[10].source.packetNameFormat = "%M->ES_CM2CB:AVB_A-%c"
*.ES_DU3.app[10].source.packetLength = 668B - 58B
*.ES_DU3.app[10].source.productionInterval = 80us
*.ES_CM2CB.app[12].typename = "UdpSinkApp"
*.ES_CM2CB.app[12].display-name = "Sink of Flow130"
*.ES_CM2CB.app[12].io.localPort = 1005

*.ES_DU3.app[10].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU1.app[8].typename = "UdpSourceApp"
*.ES_MIMU1.app[8].display-name = "Flow131"
*.ES_MIMU1.app[8].io.destAddress = "ES_MIMU3"
*.ES_MIMU1.app[8].io.destPort = 1004
*.ES_MIMU1.app[8].source.packetNameFormat = "%M->ES_MIMU3:AVB_A-%c"
*.ES_MIMU1.app[8].source.packetLength = 772B - 58B
*.ES_MIMU1.app[8].source.productionInterval = 640us
*.ES_MIMU3.app[9].typename = "UdpSinkApp"
*.ES_MIMU3.app[9].display-name = "Sink of Flow131"
*.ES_MIMU3.app[9].io.localPort = 1004

*.ES_MIMU1.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_CMRIU2.app[9].typename = "UdpSourceApp"
*.ES_CMRIU2.app[9].display-name = "Flow132"
*.ES_CMRIU2.app[9].io.destAddress = "ES_SM1CA"
*.ES_CMRIU2.app[9].io.destPort = 1005
*.ES_CMRIU2.app[9].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_CMRIU2.app[9].source.packetLength = 414B - 58B
*.ES_CMRIU2.app[9].source.productionInterval = 40us
*.ES_SM1CA.app[13].typename = "UdpSinkApp"
*.ES_SM1CA.app[13].display-name = "Sink of Flow132"
*.ES_SM1CA.app[13].io.localPort = 1005

*.ES_CMRIU2.app[9].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_STARTR1.app[8].typename = "UdpSourceApp"
*.ES_STARTR1.app[8].display-name = "Flow133"
*.ES_STARTR1.app[8].io.destAddress = "ES_SBAND2"
*.ES_STARTR1.app[8].io.destPort = 1001
*.ES_STARTR1.app[8].source.packetNameFormat = "%M->ES_SBAND2:AVB_A-%c"
*.ES_STARTR1.app[8].source.packetLength = 539B - 58B
*.ES_STARTR1.app[8].source.productionInterval = 160us
*.ES_SBAND2.app[6].typename = "UdpSinkApp"
*.ES_SBAND2.app[6].display-name = "Sink of Flow133"
*.ES_SBAND2.app[6].io.localPort = 1001

*.ES_STARTR1.app[8].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[10].typename = "UdpSourceApp"
*.ES_MIMU3.app[10].display-name = "Flow134"
*.ES_MIMU3.app[10].io.destAddress = "ES_SM1CA"
*.ES_MIMU3.app[10].io.destPort = 1006
*.ES_MIMU3.app[10].source.packetNameFormat = "%M->ES_SM1CA:AVB_A-%c"
*.ES_MIMU3.app[10].source.packetLength = 989B - 58B
*.ES_MIMU3.app[10].source.productionInterval = 320us
*.ES_SM1CA.app[14].typename = "UdpSinkApp"
*.ES_SM1CA.app[14].display-name = "Sink of Flow134"
*.ES_SM1CA.app[14].io.localPort = 1006

*.ES_MIMU3.app[10].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_SM1CB.app[13].typename = "UdpSourceApp"
*.ES_SM1CB.app[13].display-name = "Flow135"
*.ES_SM1CB.app[13].io.destAddress = "ES_STARTR2"
*.ES_SM1CB.app[13].io.destPort = 1004
*.ES_SM1CB.app[13].source.packetNameFormat = "%M->ES_STARTR2:AVB_A-%c"
*.ES_SM1CB.app[13].source.packetLength = 1242B - 58B
*.ES_SM1CB.app[13].source.productionInterval = 640us
*.ES_STARTR2.app[7].typename = "UdpSinkApp"
*.ES_STARTR2.app[7].display-name = "Sink of Flow135"
*.ES_STARTR2.app[7].io.localPort = 1004

*.ES_SM1CB.app[13].source.initialProductionOffset = uniform(0s,0.01s)

            
*.ES_MIMU3.app[11].typename = "UdpSourceApp"
*.ES_MIMU3.app[11].display-name = "Flow136"
*.ES_MIMU3.app[11].io.destAddress = "ES_STARTR2"
*.ES_MIMU3.app[11].io.destPort = 1005
*.ES_MIMU3.app[11].source.packetNameFormat = "%M->ES_STARTR2:AVB_A-%c"
*.ES_MIMU3.app[11].source.packetLength = 729B - 58B
*.ES_MIMU3.app[11].source.productionInterval = 320us
*.ES_STARTR2.app[8].typename = "UdpSinkApp"
*.ES_STARTR2.app[8].display-name = "Sink of Flow136"
*.ES_STARTR2.app[8].io.localPort = 1005

*.ES_MIMU3.app[11].source.initialProductionOffset = uniform(0s,0.01s)

*.ES_SM2CA.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_STARTR2:*" && udp.destPort == 1000), stream: "Flow1", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CA:*" && udp.destPort == 1000), stream: "Flow27", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR1:*" && udp.destPort == 1001), stream: "Flow38", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU2:*" && udp.destPort == 1001), stream: "Flow41", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU2:*" && udp.destPort == 1001), stream: "Flow44", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1000), stream: "Flow46", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_LCM1:*" && udp.destPort == 1000), stream: "Flow11", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_GPS2:*" && udp.destPort == 1000), stream: "Flow94", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_LCM1:*" && udp.destPort == 1001), stream: "Flow105", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_LCM2:*" && udp.destPort == 1005), stream: "Flow110", sequenceNumbering: true}]

*.ES_SM2CA.bridging.streamCoder.encoder.mapping = [{stream: "Flow1", pcp: 4, vlan: 1}, {stream: "Flow27", pcp: 0, vlan: 27}, {stream: "Flow38", pcp: 0, vlan: 38}, {stream: "Flow41", pcp: 0, vlan: 41}, {stream: "Flow44", pcp: 0, vlan: 44}, {stream: "Flow46", pcp: 0, vlan: 46}, {stream: "Flow11", pcp: 4, vlan: 11}, {stream: "Flow94", pcp: 0, vlan: 94}, {stream: "Flow105", pcp: 0, vlan: 105}, {stream: "Flow110", pcp: 0, vlan: 110}]


*.ES_CM2CA.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU1:*" && udp.destPort == 1000), stream: "Flow2", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU2:*" && udp.destPort == 1002), stream: "Flow45", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_LCM2:*" && udp.destPort == 1003), stream: "Flow95", sequenceNumbering: true}]

*.ES_CM2CA.bridging.streamCoder.encoder.mapping = [{stream: "Flow2", pcp: 4, vlan: 2}, {stream: "Flow45", pcp: 0, vlan: 45}, {stream: "Flow95", pcp: 0, vlan: 95}]


*.ES_DU3.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_CM2CB:*" && udp.destPort == 1000), stream: "Flow3", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR1:*" && udp.destPort == 1000), stream: "Flow6", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_RCM2:*" && udp.destPort == 1000), stream: "Flow20", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR2:*" && udp.destPort == 1002), stream: "Flow50", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1003), stream: "Flow109", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM2CB:*" && udp.destPort == 1005), stream: "Flow130", sequenceNumbering: true}]

*.ES_DU3.bridging.streamCoder.encoder.mapping = [{stream: "Flow3", pcp: 4, vlan: 3}, {stream: "Flow6", pcp: 4, vlan: 6}, {stream: "Flow20", pcp: 4, vlan: 20}, {stream: "Flow50", pcp: 0, vlan: 50}, {stream: "Flow109", pcp: 0, vlan: 109}, {stream: "Flow130", pcp: 0, vlan: 130}]


*.ES_SM1CA.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1000), stream: "Flow4", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1000), stream: "Flow5", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU2:*" && udp.destPort == 1000), stream: "Flow14", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CMRIU2:*" && udp.destPort == 1000), stream: "Flow19", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1000), stream: "Flow33", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM2:*" && udp.destPort == 1001), stream: "Flow54", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1007), stream: "Flow100", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU1:*" && udp.destPort == 1004), stream: "Flow116", sequenceNumbering: true}]

*.ES_SM1CA.bridging.streamCoder.encoder.mapping = [{stream: "Flow4", pcp: 4, vlan: 4}, {stream: "Flow5", pcp: 4, vlan: 5}, {stream: "Flow14", pcp: 4, vlan: 14}, {stream: "Flow19", pcp: 4, vlan: 19}, {stream: "Flow33", pcp: 0, vlan: 33}, {stream: "Flow54", pcp: 0, vlan: 54}, {stream: "Flow100", pcp: 0, vlan: 100}, {stream: "Flow116", pcp: 0, vlan: 116}]


*.ES_FCM2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_DU3:*" && udp.destPort == 1000), stream: "Flow7", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM2CB:*" && udp.destPort == 1001), stream: "Flow58", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR1:*" && udp.destPort == 1003), stream: "Flow62", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU2:*" && udp.destPort == 1002), stream: "Flow86", sequenceNumbering: true}]

*.ES_FCM2.bridging.streamCoder.encoder.mapping = [{stream: "Flow7", pcp: 4, vlan: 7}, {stream: "Flow58", pcp: 0, vlan: 58}, {stream: "Flow62", pcp: 0, vlan: 62}, {stream: "Flow86", pcp: 0, vlan: 86}]


*.ES_SMRIU1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_DU2:*" && udp.destPort == 1000), stream: "Flow8", sequenceNumbering: true}]

*.ES_SMRIU1.bridging.streamCoder.encoder.mapping = [{stream: "Flow8", pcp: 4, vlan: 8}]


*.ES_DU1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1001), stream: "Flow9", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM1:*" && udp.destPort == 1000), stream: "Flow13", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU1:*" && udp.destPort == 1002), stream: "Flow69", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU1:*" && udp.destPort == 1003), stream: "Flow78", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM2:*" && udp.destPort == 1002), stream: "Flow79", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CMRIU1:*" && udp.destPort == 1001), stream: "Flow104", sequenceNumbering: true}]

*.ES_DU1.bridging.streamCoder.encoder.mapping = [{stream: "Flow9", pcp: 4, vlan: 9}, {stream: "Flow13", pcp: 4, vlan: 13}, {stream: "Flow69", pcp: 0, vlan: 69}, {stream: "Flow78", pcp: 0, vlan: 78}, {stream: "Flow79", pcp: 0, vlan: 79}, {stream: "Flow104", pcp: 0, vlan: 104}]


*.ES_CM1CB.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SBAND1:*" && udp.destPort == 1000), stream: "Flow10", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_GPS2:*" && udp.destPort == 1002), stream: "Flow122", sequenceNumbering: true}]

*.ES_CM1CB.bridging.streamCoder.encoder.mapping = [{stream: "Flow10", pcp: 4, vlan: 10}, {stream: "Flow122", pcp: 0, vlan: 122}]


*.ES_BFCU.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_GPS1:*" && udp.destPort == 1000), stream: "Flow12", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU3:*" && udp.destPort == 1002), stream: "Flow57", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM2CB:*" && udp.destPort == 1003), stream: "Flow98", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1004), stream: "Flow99", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1004), stream: "Flow117", sequenceNumbering: true}]

*.ES_BFCU.bridging.streamCoder.encoder.mapping = [{stream: "Flow12", pcp: 4, vlan: 12}, {stream: "Flow57", pcp: 0, vlan: 57}, {stream: "Flow98", pcp: 0, vlan: 98}, {stream: "Flow99", pcp: 0, vlan: 99}, {stream: "Flow117", pcp: 0, vlan: 117}]


*.ES_LCM2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_MIMU1:*" && udp.destPort == 1000), stream: "Flow15", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND1:*" && udp.destPort == 1001), stream: "Flow37", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU1:*" && udp.destPort == 1001), stream: "Flow60", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1002), stream: "Flow85", sequenceNumbering: true}]

*.ES_LCM2.bridging.streamCoder.encoder.mapping = [{stream: "Flow15", pcp: 4, vlan: 15}, {stream: "Flow37", pcp: 0, vlan: 37}, {stream: "Flow60", pcp: 0, vlan: 60}, {stream: "Flow85", pcp: 0, vlan: 85}]


*.ES_STARTR1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_LCM2:*" && udp.destPort == 1000), stream: "Flow16", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU3:*" && udp.destPort == 1002), stream: "Flow48", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU1:*" && udp.destPort == 1000), stream: "Flow49", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_GPS2:*" && udp.destPort == 1001), stream: "Flow113", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND2:*" && udp.destPort == 1001), stream: "Flow133", sequenceNumbering: true}]

*.ES_STARTR1.bridging.streamCoder.encoder.mapping = [{stream: "Flow16", pcp: 4, vlan: 16}, {stream: "Flow48", pcp: 0, vlan: 48}, {stream: "Flow49", pcp: 0, vlan: 49}, {stream: "Flow113", pcp: 0, vlan: 113}, {stream: "Flow133", pcp: 0, vlan: 133}]


*.ES_CMRIU2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_RCM1:*" && udp.destPort == 1000), stream: "Flow17", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU3:*" && udp.destPort == 1000), stream: "Flow32", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_RCM2:*" && udp.destPort == 1002), stream: "Flow81", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CA:*" && udp.destPort == 1002), stream: "Flow89", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1006), stream: "Flow91", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1005), stream: "Flow132", sequenceNumbering: true}]

*.ES_CMRIU2.bridging.streamCoder.encoder.mapping = [{stream: "Flow17", pcp: 4, vlan: 17}, {stream: "Flow32", pcp: 0, vlan: 32}, {stream: "Flow81", pcp: 0, vlan: 81}, {stream: "Flow89", pcp: 0, vlan: 89}, {stream: "Flow91", pcp: 0, vlan: 91}, {stream: "Flow132", pcp: 0, vlan: 132}]


*.ES_DU2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_BFCU:*" && udp.destPort == 1000), stream: "Flow18", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1001), stream: "Flow21", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU2:*" && udp.destPort == 1000), stream: "Flow24", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU3:*" && udp.destPort == 1001), stream: "Flow31", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR2:*" && udp.destPort == 1001), stream: "Flow40", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU3:*" && udp.destPort == 1001), stream: "Flow47", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1004), stream: "Flow66", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_LCM2:*" && udp.destPort == 1004), stream: "Flow103", sequenceNumbering: true}]

*.ES_DU2.bridging.streamCoder.encoder.mapping = [{stream: "Flow18", pcp: 4, vlan: 18}, {stream: "Flow21", pcp: 0, vlan: 21}, {stream: "Flow24", pcp: 0, vlan: 24}, {stream: "Flow31", pcp: 0, vlan: 31}, {stream: "Flow40", pcp: 0, vlan: 40}, {stream: "Flow47", pcp: 0, vlan: 47}, {stream: "Flow66", pcp: 0, vlan: 66}, {stream: "Flow103", pcp: 0, vlan: 103}]


*.ES_CM1CA.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_CMRIU2:*" && udp.destPort == 1001), stream: "Flow22", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_LCM2:*" && udp.destPort == 1002), stream: "Flow73", sequenceNumbering: true}]

*.ES_CM1CA.bridging.streamCoder.encoder.mapping = [{stream: "Flow22", pcp: 0, vlan: 22}, {stream: "Flow73", pcp: 0, vlan: 73}]


*.ES_RCM1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_FCM2:*" && udp.destPort == 1000), stream: "Flow23", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_BFCU:*" && udp.destPort == 1001), stream: "Flow29", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1002), stream: "Flow35", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND1:*" && udp.destPort == 1003), stream: "Flow83", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM1:*" && udp.destPort == 1002), stream: "Flow102", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU3:*" && udp.destPort == 1003), stream: "Flow106", sequenceNumbering: true}]

*.ES_RCM1.bridging.streamCoder.encoder.mapping = [{stream: "Flow23", pcp: 0, vlan: 23}, {stream: "Flow29", pcp: 0, vlan: 29}, {stream: "Flow35", pcp: 0, vlan: 35}, {stream: "Flow83", pcp: 0, vlan: 83}, {stream: "Flow102", pcp: 0, vlan: 102}, {stream: "Flow106", pcp: 0, vlan: 106}]


*.ES_CM2CB.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_DU2:*" && udp.destPort == 1001), stream: "Flow25", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1003), stream: "Flow51", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU1:*" && udp.destPort == 1001), stream: "Flow61", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CA:*" && udp.destPort == 1001), stream: "Flow65", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1004), stream: "Flow80", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1006), stream: "Flow92", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1008), stream: "Flow115", sequenceNumbering: true}]

*.ES_CM2CB.bridging.streamCoder.encoder.mapping = [{stream: "Flow25", pcp: 0, vlan: 25}, {stream: "Flow51", pcp: 0, vlan: 51}, {stream: "Flow61", pcp: 0, vlan: 61}, {stream: "Flow65", pcp: 0, vlan: 65}, {stream: "Flow80", pcp: 0, vlan: 80}, {stream: "Flow92", pcp: 0, vlan: 92}, {stream: "Flow115", pcp: 0, vlan: 115}]


*.ES_GPS1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_FCM1:*" && udp.destPort == 1001), stream: "Flow26", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1001), stream: "Flow56", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU1:*" && udp.destPort == 1002), stream: "Flow75", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND2:*" && udp.destPort == 1000), stream: "Flow112", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM1:*" && udp.destPort == 1003), stream: "Flow114", sequenceNumbering: true}]

*.ES_GPS1.bridging.streamCoder.encoder.mapping = [{stream: "Flow26", pcp: 0, vlan: 26}, {stream: "Flow56", pcp: 0, vlan: 56}, {stream: "Flow75", pcp: 0, vlan: 75}, {stream: "Flow112", pcp: 0, vlan: 112}, {stream: "Flow114", pcp: 0, vlan: 114}]


*.ES_SBAND1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_RCM2:*" && udp.destPort == 1001), stream: "Flow28", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CMRIU2:*" && udp.destPort == 1002), stream: "Flow36", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU1:*" && udp.destPort == 1003), stream: "Flow107", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1009), stream: "Flow129", sequenceNumbering: true}]

*.ES_SBAND1.bridging.streamCoder.encoder.mapping = [{stream: "Flow28", pcp: 0, vlan: 28}, {stream: "Flow36", pcp: 0, vlan: 36}, {stream: "Flow107", pcp: 0, vlan: 107}, {stream: "Flow129", pcp: 0, vlan: 129}]


*.ES_STARTR2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_RCM1:*" && udp.destPort == 1001), stream: "Flow30", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM2CB:*" && udp.destPort == 1002), stream: "Flow93", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU3:*" && udp.destPort == 1003), stream: "Flow96", sequenceNumbering: true}]

*.ES_STARTR2.bridging.streamCoder.encoder.mapping = [{stream: "Flow30", pcp: 0, vlan: 30}, {stream: "Flow93", pcp: 0, vlan: 93}, {stream: "Flow96", pcp: 0, vlan: 96}]


*.ES_MIMU2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1001), stream: "Flow34", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND1:*" && udp.destPort == 1002), stream: "Flow39", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1002), stream: "Flow82", sequenceNumbering: true}]

*.ES_MIMU2.bridging.streamCoder.encoder.mapping = [{stream: "Flow34", pcp: 0, vlan: 34}, {stream: "Flow39", pcp: 0, vlan: 39}, {stream: "Flow82", pcp: 0, vlan: 82}]


*.ES_LCM1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1002), stream: "Flow42", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM1:*" && udp.destPort == 1004), stream: "Flow125", sequenceNumbering: true}]

*.ES_LCM1.bridging.streamCoder.encoder.mapping = [{stream: "Flow42", pcp: 0, vlan: 42}, {stream: "Flow125", pcp: 0, vlan: 125}]


*.ES_MIMU3.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM2CB:*" && udp.destPort == 1000), stream: "Flow43", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CMRIU1:*" && udp.destPort == 1000), stream: "Flow64", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_GPS1:*" && udp.destPort == 1001), stream: "Flow87", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1006), stream: "Flow121", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU1:*" && udp.destPort == 1005), stream: "Flow123", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM1CA:*" && udp.destPort == 1006), stream: "Flow134", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR2:*" && udp.destPort == 1005), stream: "Flow136", sequenceNumbering: true}]

*.ES_MIMU3.bridging.streamCoder.encoder.mapping = [{stream: "Flow43", pcp: 0, vlan: 43}, {stream: "Flow64", pcp: 0, vlan: 64}, {stream: "Flow87", pcp: 0, vlan: 87}, {stream: "Flow121", pcp: 0, vlan: 121}, {stream: "Flow123", pcp: 0, vlan: 123}, {stream: "Flow134", pcp: 0, vlan: 134}, {stream: "Flow136", pcp: 0, vlan: 136}]


*.ES_SM2CB.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_CM2CA:*" && udp.destPort == 1000), stream: "Flow52", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR1:*" && udp.destPort == 1002), stream: "Flow55", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR2:*" && udp.destPort == 1003), stream: "Flow63", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM2CB:*" && udp.destPort == 1001), stream: "Flow68", sequenceNumbering: true}]

*.ES_SM2CB.bridging.streamCoder.encoder.mapping = [{stream: "Flow52", pcp: 0, vlan: 52}, {stream: "Flow55", pcp: 0, vlan: 55}, {stream: "Flow63", pcp: 0, vlan: 63}, {stream: "Flow68", pcp: 0, vlan: 68}]


*.ES_CMRIU1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_LCM2:*" && udp.destPort == 1001), stream: "Flow53", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM2CB:*" && udp.destPort == 1002), stream: "Flow59", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1005), stream: "Flow84", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND1:*" && udp.destPort == 1004), stream: "Flow108", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_FCM2:*" && udp.destPort == 1003), stream: "Flow128", sequenceNumbering: true}]

*.ES_CMRIU1.bridging.streamCoder.encoder.mapping = [{stream: "Flow53", pcp: 0, vlan: 53}, {stream: "Flow59", pcp: 0, vlan: 59}, {stream: "Flow84", pcp: 0, vlan: 84}, {stream: "Flow108", pcp: 0, vlan: 108}, {stream: "Flow128", pcp: 0, vlan: 128}]


*.ES_GPS2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM2CB:*" && udp.destPort == 1003), stream: "Flow67", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CA:*" && udp.destPort == 1003), stream: "Flow101", sequenceNumbering: true}]

*.ES_GPS2.bridging.streamCoder.encoder.mapping = [{stream: "Flow67", pcp: 0, vlan: 67}, {stream: "Flow101", pcp: 0, vlan: 101}]


*.ES_SBAND2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_DU1:*" && udp.destPort == 1001), stream: "Flow70", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU2:*" && udp.destPort == 1003), stream: "Flow88", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1005), stream: "Flow111", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SBAND1:*" && udp.destPort == 1005), stream: "Flow118", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_GPS2:*" && udp.destPort == 1003), stream: "Flow124", sequenceNumbering: true}]

*.ES_SBAND2.bridging.streamCoder.encoder.mapping = [{stream: "Flow70", pcp: 0, vlan: 70}, {stream: "Flow88", pcp: 0, vlan: 88}, {stream: "Flow111", pcp: 0, vlan: 111}, {stream: "Flow118", pcp: 0, vlan: 118}, {stream: "Flow124", pcp: 0, vlan: 124}]


*.ES_SM1CB.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM2CA:*" && udp.destPort == 1003), stream: "Flow71", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU2:*" && udp.destPort == 1004), stream: "Flow90", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM1CB:*" && udp.destPort == 1003), stream: "Flow97", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_STARTR2:*" && udp.destPort == 1004), stream: "Flow135", sequenceNumbering: true}]

*.ES_SM1CB.bridging.streamCoder.encoder.mapping = [{stream: "Flow71", pcp: 0, vlan: 71}, {stream: "Flow90", pcp: 0, vlan: 90}, {stream: "Flow97", pcp: 0, vlan: 97}, {stream: "Flow135", pcp: 0, vlan: 135}]


*.ES_RCM2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM2CB:*" && udp.destPort == 1004), stream: "Flow74", sequenceNumbering: true}]

*.ES_RCM2.bridging.streamCoder.encoder.mapping = [{stream: "Flow74", pcp: 0, vlan: 74}]


*.ES_FCM1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_SM1CB:*" && udp.destPort == 1005), stream: "Flow76", sequenceNumbering: true}]

*.ES_FCM1.bridging.streamCoder.encoder.mapping = [{stream: "Flow76", pcp: 0, vlan: 76}]


*.ES_MIMU1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_CMRIU2:*" && udp.destPort == 1003), stream: "Flow77", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_CM2CB:*" && udp.destPort == 1004), stream: "Flow120", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_SMRIU2:*" && udp.destPort == 1002), stream: "Flow126", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_DU1:*" && udp.destPort == 1002), stream: "Flow127", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->ES_MIMU3:*" && udp.destPort == 1004), stream: "Flow131", sequenceNumbering: true}]

*.ES_MIMU1.bridging.streamCoder.encoder.mapping = [{stream: "Flow77", pcp: 0, vlan: 77}, {stream: "Flow120", pcp: 0, vlan: 120}, {stream: "Flow126", pcp: 0, vlan: 126}, {stream: "Flow127", pcp: 0, vlan: 127}, {stream: "Flow131", pcp: 0, vlan: 131}]


*.ES_SMRIU2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->ES_DU3:*" && udp.destPort == 1004), stream: "Flow119", sequenceNumbering: true}]

*.ES_SMRIU2.bridging.streamCoder.encoder.mapping = [{stream: "Flow119", pcp: 0, vlan: 119}]



# total number of sending apps in sending end stations
*.ES_SM2CA.numApps = 17
*.ES_STARTR2.numApps = 9
*.ES_CM2CA.numApps = 4
*.ES_SMRIU1.numApps = 7
*.ES_DU3.numApps = 11
*.ES_CM2CB.numApps = 13
*.ES_SM1CA.numApps = 15
*.ES_CM1CB.numApps = 9
*.ES_SM1CB.numApps = 14
*.ES_STARTR1.numApps = 9
*.ES_FCM2.numApps = 8
*.ES_DU2.numApps = 13
*.ES_DU1.numApps = 9
*.ES_SBAND1.numApps = 10
*.ES_BFCU.numApps = 7
*.ES_GPS1.numApps = 7
*.ES_FCM1.numApps = 6
*.ES_MIMU2.numApps = 6
*.ES_LCM2.numApps = 10
*.ES_MIMU1.numApps = 9
*.ES_CMRIU2.numApps = 10
*.ES_RCM1.numApps = 8
*.ES_RCM2.numApps = 4
*.ES_CM1CA.numApps = 6
*.ES_SMRIU2.numApps = 4
*.ES_MIMU3.numApps = 12
*.ES_LCM1.numApps = 4
*.ES_SM2CB.numApps = 9
*.ES_CMRIU1.numApps = 7
*.ES_GPS2.numApps = 6
*.ES_SBAND2.numApps = 7
