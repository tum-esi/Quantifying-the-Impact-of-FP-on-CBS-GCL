[General]
network = testcases.TAS_CBS_FP.MM.TC3_1_tt20avb40.mm

# map destination MAC address and VLAN pairs to network interfaces
# "eth0" to ES4
# "eth1" to ES5
# "eth2" to ES6
# "eth3" to SW3
# "eth4" to SW4
# "eth5" to SW1
# CHECKED
*.SW2.macTable.forwardingTable = [{address: "ES7", vlan: 103, interface: "eth3"},
								{address: "ES7", vlan: 3, interface: "eth3"},
								{address: "ES7", vlan: 18, interface: "eth3"},
								{address: "ES9", vlan: 104, interface: "eth3"},
								{address: "ES9", vlan: 4, interface: "eth3"},
								{address: "ES9", vlan: 19, interface: "eth3"},
								{address: "ES12", vlan: 105, interface: "eth3"},
								{address: "ES12", vlan: 5, interface: "eth3"},
								{address: "ES12", vlan: 20, interface: "eth3"},
								{address: "ES12", vlan: 108, interface: "eth3"},
								{address: "ES12", vlan: 8, interface: "eth3"},
								{address: "ES12", vlan: 23, interface: "eth3"},
								{address: "ES9", vlan: 109, interface: "eth3"},
								{address: "ES9", vlan: 9, interface: "eth3"},
								{address: "ES9", vlan: 24, interface: "eth3"},
								{address: "ES11", vlan: 110, interface: "eth3"},
								{address: "ES11", vlan: 10, interface: "eth3"},
								{address: "ES11", vlan: 25, interface: "eth3"},
								{address: "ES12", vlan: 111, interface: "eth3"},
								{address: "ES12", vlan: 11, interface: "eth3"},
								{address: "ES12", vlan: 26, interface: "eth3"},
								{address: "ES8", vlan: 114, interface: "eth3"},
								{address: "ES8", vlan: 14, interface: "eth3"},
								{address: "ES8", vlan: 29, interface: "eth3"}]

# allow ingress traffic with certain VLAN ID's
*.SW2.ieee8021q.qTagHeaderChecker.vlanIdFilter = [103,3,18,104,4,19,105,5,20,108,8,23,109,9,24,110,10,25,111,11,26,114,14,29]

*.SW2.eth[3].macLayer.queue.typename = "" # disable maclayer queue in egress port
*.SW2.eth[3].macLayer.*.queue.typename = "Ieee8021qTimeAwareShaper" # enable sub-maclayer queue
*.SW2.eth[3].macLayer.outboundClassifier.typename = "PcpTrafficClassClassifier" # classify packets by PCP value to sub-maclayers
*.SW2.eth[3].macLayer.outboundClassifier.reverseOrder = true
*.SW2.eth[3].macLayer.outboundClassifier.mapping = [[0, 0, 0, 0, 0, 0, 0, 1],   # preempted traffic
                                  					[0, 0, 0, 0, 0, 0, 0, 0],   # preempted traffic
                                  					[0, 0, 0, 0, 0, 0, 0, 2],   # preempted traffic
                                  					[0, 0, 0, 0, 0, 0, 0, 3],   # preempted traffic
                                  					[0, 1, 1, 0, 0, 0, 0, 4],   # preempted traffic
                                  					[0, 1, 1, 0, 0, 0, 0, 5],   # preempted traffic
                                  					[0, 1, 1, 1, 0, 0, 0, 6],   # express traffic
                                  					[0, 1, 1, 0, 0, 0, 0, 7]]	# express traffic

# SW2,SW3
*.SW2.eth[3].macLayer.*.queue.transmissionGate[0].offset = 10000us - 114us
*.SW2.eth[3].macLayer.expressMacLayer.queue.transmissionGate[0].initiallyOpen = true
*.SW2.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].initiallyOpen = false # exclusive gating
*.SW2.eth[3].macLayer.*.queue.transmissionGate[0].durations = [97.28us, 231.72us, 79.36us, 5.64us, 59.2us, 71.8us, 119.28us, 0.72us, 50.8us, 24.2us, 69.44us, 46.56us, 104.8us, 0.2us, 43.6us, 995.4us, 97.28us, 231.72us, 79.36us, 5.64us, 59.2us, 1526.8us, 97.28us, 231.72us, 79.36us, 5.64us, 59.2us, 1071.8us, 119.28us, 0.72us, 50.8us, 24.2us, 69.44us, 190.56us, 97.28us, 231.72us, 79.36us, 5.64us, 59.2us, 1526.8us, 97.28us, 231.72us, 79.36us, 5.64us, 59.2us, 1526.8us]
*.SW2.eth[3].macLayer.preemptableMacLayer.queue.transmissionSelectionAlgorithm[0].avbClosingDuration = 0s # 1806.64us
*.SW2.eth[3].macLayer.preemptableMacLayer.queue.transmissionGate[0].maxOccuringFrameLength = 123B + 42B

# *.SW2.eth[0..2].macLayer.queue.transmissionGate[0..1].initiallyOpen = false